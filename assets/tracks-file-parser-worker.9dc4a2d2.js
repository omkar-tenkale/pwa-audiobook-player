const l="(function(){"use strict";function getAugmentedNamespace(e){if(e.t)return e;var t=Object.defineProperty({},"t",{value:!0});return Object.keys(e).forEach((function(r){var a=Object.getOwnPropertyDescriptor(e,r);Object.defineProperty(t,r,a.get?a:{enumerable:!0,get:function(){return e[r]}})})),t}var buffer={},base64Js={};base64Js.byteLength=byteLength,base64Js.toByteArray=toByteArray,base64Js.fromByteArray=fromByteArray;for(var lookup=[],revLookup=[],Arr="undefined"!=typeof Uint8Array?Uint8Array:Array,code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,len=code.length;i<len;++i)lookup[i]=code[i],revLookup[code.charCodeAt(i)]=i;function getLens(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function byteLength(e){var t=getLens(e),r=t[0],a=t[1];return 3*(r+a)/4-a}function _byteLength(e,t,r){return 3*(t+r)/4-r}function toByteArray(e){var t,r,a=getLens(e),i=a[0],s=a[1],n=new Arr(_byteLength(e,i,s)),o=0,c=s>0?i-4:i;for(r=0;r<c;r+=4)t=revLookup[e.charCodeAt(r)]<<18|revLookup[e.charCodeAt(r+1)]<<12|revLookup[e.charCodeAt(r+2)]<<6|revLookup[e.charCodeAt(r+3)],n[o++]=t>>16&255,n[o++]=t>>8&255,n[o++]=255&t;return 2===s&&(t=revLookup[e.charCodeAt(r)]<<2|revLookup[e.charCodeAt(r+1)]>>4,n[o++]=255&t),1===s&&(t=revLookup[e.charCodeAt(r)]<<10|revLookup[e.charCodeAt(r+1)]<<4|revLookup[e.charCodeAt(r+2)]>>2,n[o++]=t>>8&255,n[o++]=255&t),n}function tripletToBase64(e){return lookup[e>>18&63]+lookup[e>>12&63]+lookup[e>>6&63]+lookup[63&e]}function encodeChunk(e,t,r){for(var a,i=[],s=t;s<r;s+=3)a=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),i.push(tripletToBase64(a));return i.join("")}function fromByteArray(e){for(var t,r=e.length,a=r%3,i=[],s=16383,n=0,o=r-a;n<o;n+=s)i.push(encodeChunk(e,n,n+s>o?o:n+s));return 1===a?(t=e[r-1],i.push(lookup[t>>2]+lookup[t<<4&63]+"==")):2===a&&(t=(e[r-2]<<8)+e[r-1],i.push(lookup[t>>10]+lookup[t>>4&63]+lookup[t<<2&63]+"=")),i.join("")}revLookup["-".charCodeAt(0)]=62,revLookup["_".charCodeAt(0)]=63;var ieee754={read:function(e,t,r,a,i){var s,n,o=8*i-a-1,c=(1<<o)-1,u=c>>1,l=-7,f=r?i-1:0,h=r?-1:1,m=e[t+f];for(f+=h,s=m&(1<<-l)-1,m>>=-l,l+=o;l>0;s=256*s+e[t+f],f+=h,l-=8);for(n=s&(1<<-l)-1,s>>=-l,l+=a;l>0;n=256*n+e[t+f],f+=h,l-=8);if(0===s)s=1-u;else{if(s===c)return n?NaN:1/0*(m?-1:1);n+=Math.pow(2,a),s-=u}return(m?-1:1)*n*Math.pow(2,s-a)},write:function(e,t,r,a,i,s){var n,o,c,u=8*s-i-1,l=(1<<u)-1,f=l>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,m=a?0:s-1,p=a?1:-1,d=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,n=l):(n=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-n))<1&&(n--,c*=2),(t+=n+f>=1?h/c:h*Math.pow(2,1-f))*c>=2&&(n++,c/=2),n+f>=l?(o=0,n=l):n+f>=1?(o=(t*c-1)*Math.pow(2,i),n+=f):(o=t*Math.pow(2,f-1)*Math.pow(2,i),n=0));i>=8;e[r+m]=255&o,m+=p,o/=256,i-=8);for(n=n<<i|o,u+=i;u>0;e[r+m]=255&n,m+=p,n/=256,u-=8);e[r+m-p]|=128*d}};!function(e){const t=base64Js,r=ieee754,a="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;e.Buffer=n,e.SlowBuffer=function(e){return+e!=e&&(e=0),n.alloc(+e)},e.INSPECT_MAX_BYTES=50;const i=2147483647;function s(e){if(e>i)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,n.prototype),t}function n(e,t,r){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return u(e)}return o(e,t,r)}function o(e,t,r){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!n.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const r=0|m(e,t);let a=s(r);const i=a.write(e,t);return i!==r&&(a=a.slice(0,i)),a}(e,t);if(ArrayBuffer.isView(e))return function(e){if(H(e,Uint8Array)){const t=new Uint8Array(e);return f(t.buffer,t.byteOffset,t.byteLength)}return l(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(H(e,ArrayBuffer)||e&&H(e.buffer,ArrayBuffer))return f(e,t,r);if("undefined"!=typeof SharedArrayBuffer&&(H(e,SharedArrayBuffer)||e&&H(e.buffer,SharedArrayBuffer)))return f(e,t,r);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const a=e.valueOf&&e.valueOf();if(null!=a&&a!==e)return n.from(a,t,r);const i=function(e){if(n.isBuffer(e)){const t=0|h(e.length),r=s(t);return 0===r.length||e.copy(r,0,0,t),r}return void 0!==e.length?"number"!=typeof e.length||q(e.length)?s(0):l(e):"Buffer"===e.type&&Array.isArray(e.data)?l(e.data):void 0}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return n.from(e[Symbol.toPrimitive]("string"),t,r);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function c(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function u(e){return c(e),s(e<0?0:0|h(e))}function l(e){const t=e.length<0?0:0|h(e.length),r=s(t);for(let a=0;a<t;a+=1)r[a]=255&e[a];return r}function f(e,t,r){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(r||0))throw new RangeError('"length" is outside of buffer bounds');let a;return a=void 0===t&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,t):new Uint8Array(e,t,r),Object.setPrototypeOf(a,n.prototype),a}function h(e){if(e>=i)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return 0|e}function m(e,t){if(n.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||H(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const r=e.length,a=arguments.length>2&&!0===arguments[2];if(!a&&0===r)return 0;let i=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":return X(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return W(e).length;default:if(i)return a?-1:X(e).length;t=(""+t).toLowerCase(),i=!0}}function p(e,t,r){let a=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return P(this,t,r);case"utf8":case"utf-8":return k(this,t,r);case"ascii":return A(this,t,r);case"latin1":case"binary":return M(this,t,r);case"base64":return y(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,t,r);default:if(a)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),a=!0}}function d(e,t,r){const a=e[t];e[t]=e[r],e[r]=a}function g(e,t,r,a,i){if(0===e.length)return-1;if("string"==typeof r?(a=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),q(r=+r)&&(r=i?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(i)return-1;r=e.length-1}else if(r<0){if(!i)return-1;r=0}if("string"==typeof t&&(t=n.from(t,a)),n.isBuffer(t))return 0===t.length?-1:b(e,t,r,a,i);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):b(e,[t],r,a,i);throw new TypeError("val must be string, number or Buffer")}function b(e,t,r,a,i){let s,n=1,o=e.length,c=t.length;if(void 0!==a&&("ucs2"===(a=String(a).toLowerCase())||"ucs-2"===a||"utf16le"===a||"utf-16le"===a)){if(e.length<2||t.length<2)return-1;n=2,o/=2,c/=2,r/=2}function u(e,t){return 1===n?e[t]:e.readUInt16BE(t*n)}if(i){let a=-1;for(s=r;s<o;s++)if(u(e,s)===u(t,-1===a?0:s-a)){if(-1===a&&(a=s),s-a+1===c)return a*n}else-1!==a&&(s-=s-a),a=-1}else for(r+c>o&&(r=o-c),s=r;s>=0;s--){let r=!0;for(let a=0;a<c;a++)if(u(e,s+a)!==u(t,a)){r=!1;break}if(r)return s}return-1}function T(e,t,r,a){r=Number(r)||0;const i=e.length-r;a?(a=Number(a))>i&&(a=i):a=i;const s=t.length;let n;for(a>s/2&&(a=s/2),n=0;n<a;++n){const a=parseInt(t.substr(2*n,2),16);if(q(a))return n;e[r+n]=a}return n}function $(e,t,r,a){return V(X(t,e.length-r),e,r,a)}function _(e,t,r,a){return V(function(e){const t=[];for(let r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,a)}function w(e,t,r,a){return V(W(t),e,r,a)}function v(e,t,r,a){return V(function(e,t){let r,a,i;const s=[];for(let n=0;n<e.length&&!((t-=2)<0);++n)r=e.charCodeAt(n),a=r>>8,i=r%256,s.push(i),s.push(a);return s}(t,e.length-r),e,r,a)}function y(e,r,a){return 0===r&&a===e.length?t.fromByteArray(e):t.fromByteArray(e.slice(r,a))}function k(e,t,r){r=Math.min(e.length,r);const a=[];let i=t;for(;i<r;){const t=e[i];let s=null,n=t>239?4:t>223?3:t>191?2:1;if(i+n<=r){let r,a,o,c;switch(n){case 1:t<128&&(s=t);break;case 2:r=e[i+1],128==(192&r)&&(c=(31&t)<<6|63&r,c>127&&(s=c));break;case 3:r=e[i+1],a=e[i+2],128==(192&r)&&128==(192&a)&&(c=(15&t)<<12|(63&r)<<6|63&a,c>2047&&(c<55296||c>57343)&&(s=c));break;case 4:r=e[i+1],a=e[i+2],o=e[i+3],128==(192&r)&&128==(192&a)&&128==(192&o)&&(c=(15&t)<<18|(63&r)<<12|(63&a)<<6|63&o,c>65535&&c<1114112&&(s=c))}}null===s?(s=65533,n=1):s>65535&&(s-=65536,a.push(s>>>10&1023|55296),s=56320|1023&s),a.push(s),i+=n}return function(e){const t=e.length;if(t<=I)return String.fromCharCode.apply(String,e);let r="",a=0;for(;a<t;)r+=String.fromCharCode.apply(String,e.slice(a,a+=I));return r}(a)}e.kMaxLength=i,n.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),n.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(n.prototype,"parent",{enumerable:!0,get:function(){if(n.isBuffer(this))return this.buffer}}),Object.defineProperty(n.prototype,"offset",{enumerable:!0,get:function(){if(n.isBuffer(this))return this.byteOffset}}),n.poolSize=8192,n.from=function(e,t,r){return o(e,t,r)},Object.setPrototypeOf(n.prototype,Uint8Array.prototype),Object.setPrototypeOf(n,Uint8Array),n.alloc=function(e,t,r){return function(e,t,r){return c(e),e<=0?s(e):void 0!==t?"string"==typeof r?s(e).fill(t,r):s(e).fill(t):s(e)}(e,t,r)},n.allocUnsafe=function(e){return u(e)},n.allocUnsafeSlow=function(e){return u(e)},n.isBuffer=function(e){return null!=e&&!0===e.i&&e!==n.prototype},n.compare=function(e,t){if(H(e,Uint8Array)&&(e=n.from(e,e.offset,e.byteLength)),H(t,Uint8Array)&&(t=n.from(t,t.offset,t.byteLength)),!n.isBuffer(e)||!n.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let r=e.length,a=t.length;for(let i=0,s=Math.min(r,a);i<s;++i)if(e[i]!==t[i]){r=e[i],a=t[i];break}return r<a?-1:a<r?1:0},n.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},n.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return n.alloc(0);let r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;const a=n.allocUnsafe(t);let i=0;for(r=0;r<e.length;++r){let t=e[r];if(H(t,Uint8Array))i+t.length>a.length?(n.isBuffer(t)||(t=n.from(t)),t.copy(a,i)):Uint8Array.prototype.set.call(a,t,i);else{if(!n.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(a,i)}i+=t.length}return a},n.byteLength=m,n.prototype.i=!0,n.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)d(this,t,t+1);return this},n.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)d(this,t,t+3),d(this,t+1,t+2);return this},n.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)d(this,t,t+7),d(this,t+1,t+6),d(this,t+2,t+5),d(this,t+3,t+4);return this},n.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?k(this,0,e):p.apply(this,arguments)},n.prototype.toLocaleString=n.prototype.toString,n.prototype.equals=function(e){if(!n.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===n.compare(this,e)},n.prototype.inspect=function(){let t="";const r=e.INSPECT_MAX_BYTES;return t=this.toString("hex",0,r).replace(/(.{2})/g,"$1 ").trim(),this.length>r&&(t+=" ... "),"<Buffer "+t+">"},a&&(n.prototype[a]=n.prototype.inspect),n.prototype.compare=function(e,t,r,a,i){if(H(e,Uint8Array)&&(e=n.from(e,e.offset,e.byteLength)),!n.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===a&&(a=0),void 0===i&&(i=this.length),t<0||r>e.length||a<0||i>this.length)throw new RangeError("out of range index");if(a>=i&&t>=r)return 0;if(a>=i)return-1;if(t>=r)return 1;if(this===e)return 0;let s=(i>>>=0)-(a>>>=0),o=(r>>>=0)-(t>>>=0);const c=Math.min(s,o),u=this.slice(a,i),l=e.slice(t,r);for(let n=0;n<c;++n)if(u[n]!==l[n]){s=u[n],o=l[n];break}return s<o?-1:o<s?1:0},n.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},n.prototype.indexOf=function(e,t,r){return g(this,e,t,r,!0)},n.prototype.lastIndexOf=function(e,t,r){return g(this,e,t,r,!1)},n.prototype.write=function(e,t,r,a){if(void 0===t)a="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)a=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(r)?(r>>>=0,void 0===a&&(a="utf8")):(a=r,r=void 0)}const i=this.length-t;if((void 0===r||r>i)&&(r=i),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");a||(a="utf8");let s=!1;for(;;)switch(a){case"hex":return T(this,e,t,r);case"utf8":case"utf-8":return $(this,e,t,r);case"ascii":case"latin1":case"binary":return _(this,e,t,r);case"base64":return w(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return v(this,e,t,r);default:if(s)throw new TypeError("Unknown encoding: "+a);a=(""+a).toLowerCase(),s=!0}},n.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this.o||this,0)}};const I=4096;function A(e,t,r){let a="";r=Math.min(e.length,r);for(let i=t;i<r;++i)a+=String.fromCharCode(127&e[i]);return a}function M(e,t,r){let a="";r=Math.min(e.length,r);for(let i=t;i<r;++i)a+=String.fromCharCode(e[i]);return a}function P(e,t,r){const a=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>a)&&(r=a);let i="";for(let s=t;s<r;++s)i+=Y[e[s]];return i}function C(e,t,r){const a=e.slice(t,r);let i="";for(let s=0;s<a.length-1;s+=2)i+=String.fromCharCode(a[s]+256*a[s+1]);return i}function E(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function D(e,t,r,a,i,s){if(!n.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<s)throw new RangeError('"value" argument is out of bounds');if(r+a>e.length)throw new RangeError("Index out of range")}function S(e,t,r,a,i){z(t,a,i,e,r,7);let s=Number(t&BigInt(4294967295));e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s,s>>=8,e[r++]=s;let n=Number(t>>BigInt(32)&BigInt(4294967295));return e[r++]=n,n>>=8,e[r++]=n,n>>=8,e[r++]=n,n>>=8,e[r++]=n,r}function x(e,t,r,a,i){z(t,a,i,e,r,7);let s=Number(t&BigInt(4294967295));e[r+7]=s,s>>=8,e[r+6]=s,s>>=8,e[r+5]=s,s>>=8,e[r+4]=s;let n=Number(t>>BigInt(32)&BigInt(4294967295));return e[r+3]=n,n>>=8,e[r+2]=n,n>>=8,e[r+1]=n,n>>=8,e[r]=n,r+8}function B(e,t,r,a,i,s){if(r+a>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function F(e,t,a,i,s){return t=+t,a>>>=0,s||B(e,0,a,4),r.write(e,t,a,i,23,4),a+4}function R(e,t,a,i,s){return t=+t,a>>>=0,s||B(e,0,a,8),r.write(e,t,a,i,52,8),a+8}n.prototype.slice=function(e,t){const r=this.length;(e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e);const a=this.subarray(e,t);return Object.setPrototypeOf(a,n.prototype),a},n.prototype.readUintLE=n.prototype.readUIntLE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);let a=this[e],i=1,s=0;for(;++s<t&&(i*=256);)a+=this[e+s]*i;return a},n.prototype.readUintBE=n.prototype.readUIntBE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);let a=this[e+--t],i=1;for(;t>0&&(i*=256);)a+=this[e+--t]*i;return a},n.prototype.readUint8=n.prototype.readUInt8=function(e,t){return e>>>=0,t||E(e,1,this.length),this[e]},n.prototype.readUint16LE=n.prototype.readUInt16LE=function(e,t){return e>>>=0,t||E(e,2,this.length),this[e]|this[e+1]<<8},n.prototype.readUint16BE=n.prototype.readUInt16BE=function(e,t){return e>>>=0,t||E(e,2,this.length),this[e]<<8|this[e+1]},n.prototype.readUint32LE=n.prototype.readUInt32LE=function(e,t){return e>>>=0,t||E(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},n.prototype.readUint32BE=n.prototype.readUInt32BE=function(e,t){return e>>>=0,t||E(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},n.prototype.readBigUInt64LE=Z((function(e){L(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||N(e,this.length-8);const a=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,i=this[++e]+256*this[++e]+65536*this[++e]+r*2**24;return BigInt(a)+(BigInt(i)<<BigInt(32))})),n.prototype.readBigUInt64BE=Z((function(e){L(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||N(e,this.length-8);const a=t*2**24+65536*this[++e]+256*this[++e]+this[++e],i=this[++e]*2**24+65536*this[++e]+256*this[++e]+r;return(BigInt(a)<<BigInt(32))+BigInt(i)})),n.prototype.readIntLE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);let a=this[e],i=1,s=0;for(;++s<t&&(i*=256);)a+=this[e+s]*i;return i*=128,a>=i&&(a-=Math.pow(2,8*t)),a},n.prototype.readIntBE=function(e,t,r){e>>>=0,t>>>=0,r||E(e,t,this.length);let a=t,i=1,s=this[e+--a];for(;a>0&&(i*=256);)s+=this[e+--a]*i;return i*=128,s>=i&&(s-=Math.pow(2,8*t)),s},n.prototype.readInt8=function(e,t){return e>>>=0,t||E(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},n.prototype.readInt16LE=function(e,t){e>>>=0,t||E(e,2,this.length);const r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},n.prototype.readInt16BE=function(e,t){e>>>=0,t||E(e,2,this.length);const r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},n.prototype.readInt32LE=function(e,t){return e>>>=0,t||E(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},n.prototype.readInt32BE=function(e,t){return e>>>=0,t||E(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},n.prototype.readBigInt64LE=Z((function(e){L(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||N(e,this.length-8);const a=this[e+4]+256*this[e+5]+65536*this[e+6]+(r<<24);return(BigInt(a)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),n.prototype.readBigInt64BE=Z((function(e){L(e>>>=0,"offset");const t=this[e],r=this[e+7];void 0!==t&&void 0!==r||N(e,this.length-8);const a=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(a)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+r)})),n.prototype.readFloatLE=function(e,t){return e>>>=0,t||E(e,4,this.length),r.read(this,e,!0,23,4)},n.prototype.readFloatBE=function(e,t){return e>>>=0,t||E(e,4,this.length),r.read(this,e,!1,23,4)},n.prototype.readDoubleLE=function(e,t){return e>>>=0,t||E(e,8,this.length),r.read(this,e,!0,52,8)},n.prototype.readDoubleBE=function(e,t){return e>>>=0,t||E(e,8,this.length),r.read(this,e,!1,52,8)},n.prototype.writeUintLE=n.prototype.writeUIntLE=function(e,t,r,a){e=+e,t>>>=0,r>>>=0,a||D(this,e,t,r,Math.pow(2,8*r)-1,0);let i=1,s=0;for(this[t]=255&e;++s<r&&(i*=256);)this[t+s]=e/i&255;return t+r},n.prototype.writeUintBE=n.prototype.writeUIntBE=function(e,t,r,a){e=+e,t>>>=0,r>>>=0,a||D(this,e,t,r,Math.pow(2,8*r)-1,0);let i=r-1,s=1;for(this[t+i]=255&e;--i>=0&&(s*=256);)this[t+i]=e/s&255;return t+r},n.prototype.writeUint8=n.prototype.writeUInt8=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,1,255,0),this[t]=255&e,t+1},n.prototype.writeUint16LE=n.prototype.writeUInt16LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},n.prototype.writeUint16BE=n.prototype.writeUInt16BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},n.prototype.writeUint32LE=n.prototype.writeUInt32LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},n.prototype.writeUint32BE=n.prototype.writeUInt32BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},n.prototype.writeBigUInt64LE=Z((function(e,t=0){return S(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),n.prototype.writeBigUInt64BE=Z((function(e,t=0){return x(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),n.prototype.writeIntLE=function(e,t,r,a){if(e=+e,t>>>=0,!a){const a=Math.pow(2,8*r-1);D(this,e,t,r,a-1,-a)}let i=0,s=1,n=0;for(this[t]=255&e;++i<r&&(s*=256);)e<0&&0===n&&0!==this[t+i-1]&&(n=1),this[t+i]=(e/s>>0)-n&255;return t+r},n.prototype.writeIntBE=function(e,t,r,a){if(e=+e,t>>>=0,!a){const a=Math.pow(2,8*r-1);D(this,e,t,r,a-1,-a)}let i=r-1,s=1,n=0;for(this[t+i]=255&e;--i>=0&&(s*=256);)e<0&&0===n&&0!==this[t+i+1]&&(n=1),this[t+i]=(e/s>>0)-n&255;return t+r},n.prototype.writeInt8=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},n.prototype.writeInt16LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},n.prototype.writeInt16BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},n.prototype.writeInt32LE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},n.prototype.writeInt32BE=function(e,t,r){return e=+e,t>>>=0,r||D(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},n.prototype.writeBigInt64LE=Z((function(e,t=0){return S(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),n.prototype.writeBigInt64BE=Z((function(e,t=0){return x(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),n.prototype.writeFloatLE=function(e,t,r){return F(this,e,t,!0,r)},n.prototype.writeFloatBE=function(e,t,r){return F(this,e,t,!1,r)},n.prototype.writeDoubleLE=function(e,t,r){return R(this,e,t,!0,r)},n.prototype.writeDoubleBE=function(e,t,r){return R(this,e,t,!1,r)},n.prototype.copy=function(e,t,r,a){if(!n.isBuffer(e))throw new TypeError("argument should be a Buffer");if(r||(r=0),a||0===a||(a=this.length),t>=e.length&&(t=e.length),t||(t=0),a>0&&a<r&&(a=r),a===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("Index out of range");if(a<0)throw new RangeError("sourceEnd out of bounds");a>this.length&&(a=this.length),e.length-t<a-r&&(a=e.length-t+r);const i=a-r;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,r,a):Uint8Array.prototype.set.call(e,this.subarray(r,a),t),i},n.prototype.fill=function(e,t,r,a){if("string"==typeof e){if("string"==typeof t?(a=t,t=0,r=this.length):"string"==typeof r&&(a=r,r=this.length),void 0!==a&&"string"!=typeof a)throw new TypeError("encoding must be a string");if("string"==typeof a&&!n.isEncoding(a))throw new TypeError("Unknown encoding: "+a);if(1===e.length){const t=e.charCodeAt(0);("utf8"===a&&t<128||"latin1"===a)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;let i;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(i=t;i<r;++i)this[i]=e;else{const s=n.isBuffer(e)?e:n.from(e,a),o=s.length;if(0===o)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<r-t;++i)this[i+t]=s[i%o]}return this};const O={};function U(e,t,r){O[e]=class extends r{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function G(e){let t="",r=e.length;const a="-"===e[0]?1:0;for(;r>=a+4;r-=3)t=`_${e.slice(r-3,r)}${t}`;return`${e.slice(0,r)}${t}`}function z(e,t,r,a,i,s){if(e>r||e<t){const a="bigint"==typeof t?"n":"";let i;throw i=s>3?0===t||t===BigInt(0)?`>= 0${a} and < 2${a} ** ${8*(s+1)}${a}`:`>= -(2${a} ** ${8*(s+1)-1}${a}) and < 2 ** ${8*(s+1)-1}${a}`:`>= ${t}${a} and <= ${r}${a}`,new O.ERR_OUT_OF_RANGE("value",i,e)}!function(e,t,r){L(t,"offset"),void 0!==e[t]&&void 0!==e[t+r]||N(t,e.length-(r+1))}(a,i,s)}function L(e,t){if("number"!=typeof e)throw new O.ERR_INVALID_ARG_TYPE(t,"number",e)}function N(e,t,r){if(Math.floor(e)!==e)throw L(e,r),new O.ERR_OUT_OF_RANGE(r||"offset","an integer",e);if(t<0)throw new O.ERR_BUFFER_OUT_OF_BOUNDS;throw new O.ERR_OUT_OF_RANGE(r||"offset",`>= ${r?1:0} and <= ${t}`,e)}U("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),U("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),U("ERR_OUT_OF_RANGE",(function(e,t,r){let a=`The value of "${e}" is out of range.`,i=r;return Number.isInteger(r)&&Math.abs(r)>2**32?i=G(String(r)):"bigint"==typeof r&&(i=String(r),(r>BigInt(2)**BigInt(32)||r<-(BigInt(2)**BigInt(32)))&&(i=G(i)),i+="n"),a+=` It must be ${t}. Received ${i}`,a}),RangeError);const j=/[^+/0-9A-Za-z-_]/g;function X(e,t){let r;t=t||1/0;const a=e.length;let i=null;const s=[];for(let n=0;n<a;++n){if(r=e.charCodeAt(n),r>55295&&r<57344){if(!i){if(r>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(n+1===a){(t-=3)>-1&&s.push(239,191,189);continue}i=r;continue}if(r<56320){(t-=3)>-1&&s.push(239,191,189),i=r;continue}r=65536+(i-55296<<10|r-56320)}else i&&(t-=3)>-1&&s.push(239,191,189);if(i=null,r<128){if((t-=1)<0)break;s.push(r)}else if(r<2048){if((t-=2)<0)break;s.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;s.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return s}function W(e){return t.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(j,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function V(e,t,r,a){let i;for(i=0;i<a&&!(i+r>=t.length||i>=e.length);++i)t[i+r]=e[i];return i}function H(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function q(e){return e!=e}const Y=function(){const e="0123456789abcdef",t=new Array(256);for(let r=0;r<16;++r){const a=16*r;for(let i=0;i<16;++i)t[a+i]=e[r]+e[i]}return t}();function Z(e){return"undefined"==typeof BigInt?K:e}function K(){throw new Error("BigInt not supported")}}(buffer);var lib$3={},lib$2={},FsPromise={},__viteBrowserExternal={},__viteBrowserExternal$1=Object.freeze({__proto__:null,default:__viteBrowserExternal}),require$$0=getAugmentedNamespace(__viteBrowserExternal$1);Object.defineProperty(FsPromise,"t",{value:!0}),FsPromise.readFile=FsPromise.writeFileSync=FsPromise.writeFile=FsPromise.read=FsPromise.open=FsPromise.close=FsPromise.stat=FsPromise.createReadStream=FsPromise.pathExists=void 0;const fs$2=require$$0;async function stat(e){return new Promise(((t,r)=>{fs$2.stat(e,((e,a)=>{e?r(e):t(a)}))}))}async function close(e){return new Promise(((t,r)=>{fs$2.close(e,(e=>{e?r(e):t()}))}))}async function open(e,t){return new Promise(((r,a)=>{fs$2.open(e,t,((e,t)=>{e?a(e):r(t)}))}))}async function read(e,t,r,a,i){return new Promise(((s,n)=>{fs$2.read(e,t,r,a,i,((e,t,r)=>{e?n(e):s({bytesRead:t,buffer:r})}))}))}async function writeFile(e,t){return new Promise(((r,a)=>{fs$2.writeFile(e,t,(e=>{e?a(e):r()}))}))}function writeFileSync(e,t){fs$2.writeFileSync(e,t)}async function readFile(e){return new Promise(((t,r)=>{fs$2.readFile(e,((e,a)=>{e?r(e):t(a)}))}))}FsPromise.pathExists=fs$2.existsSync,FsPromise.createReadStream=fs$2.createReadStream,FsPromise.stat=stat,FsPromise.close=close,FsPromise.open=open,FsPromise.read=read,FsPromise.writeFile=writeFile,FsPromise.writeFileSync=writeFileSync,FsPromise.readFile=readFile;var core$2={},ReadStreamTokenizer$1={},AbstractTokenizer$1={},lib$1={},EndOfFileStream={};!function(e){Object.defineProperty(e,"t",{value:!0}),e.EndOfStreamError=e.defaultMessages=void 0,e.defaultMessages="End-Of-Stream";class t extends Error{constructor(){super(e.defaultMessages)}}e.EndOfStreamError=t}(EndOfFileStream);var StreamReader$1={},Deferred$1={};Object.defineProperty(Deferred$1,"t",{value:!0}),Deferred$1.Deferred=void 0;class Deferred{constructor(){this.resolve=()=>null,this.reject=()=>null,this.promise=new Promise(((e,t)=>{this.reject=t,this.resolve=e}))}}Deferred$1.Deferred=Deferred,function(e){Object.defineProperty(e,"t",{value:!0}),e.StreamReader=e.EndOfStreamError=void 0;const t=EndOfFileStream,r=Deferred$1;var a=EndOfFileStream;Object.defineProperty(e,"EndOfStreamError",{enumerable:!0,get:function(){return a.EndOfStreamError}}),e.StreamReader=class{constructor(e){if(this.s=e,this.deferred=null,this.endOfStream=!1,this.peekQueue=[],!e.read||!e.once)throw new Error("Expected an instance of stream.Readable");this.s.once("end",(()=>this.reject(new t.EndOfStreamError))),this.s.once("error",(e=>this.reject(e))),this.s.once("close",(()=>this.reject(new Error("Stream closed"))))}async peek(e,t,r){const a=await this.read(e,t,r);return this.peekQueue.push(e.subarray(t,t+a)),a}async read(e,r,a){if(0===a)return 0;if(0===this.peekQueue.length&&this.endOfStream)throw new t.EndOfStreamError;let i=a,s=0;for(;this.peekQueue.length>0&&i>0;){const t=this.peekQueue.pop();if(!t)throw new Error("peekData should be defined");const a=Math.min(t.length,i);e.set(t.subarray(0,a),r+s),s+=a,i-=a,a<t.length&&this.peekQueue.push(t.subarray(a))}for(;i>0&&!this.endOfStream;){const t=Math.min(i,1048576),a=await this.readFromStream(e,r+s,t);if(s+=a,a<t)break;i-=a}return s}async readFromStream(e,t,a){const i=this.s.read(a);if(i)return e.set(i,t),i.length;{const i={buffer:e,offset:t,length:a,deferred:new r.Deferred};return this.deferred=i.deferred,this.s.once("readable",(()=>{this.readDeferred(i)})),i.deferred.promise}}readDeferred(e){const t=this.s.read(e.length);t?(e.buffer.set(t,e.offset),e.deferred.resolve(t.length),this.deferred=null):this.s.once("readable",(()=>{this.readDeferred(e)}))}reject(e){this.endOfStream=!0,this.deferred&&(this.deferred.reject(e),this.deferred=null)}}}(StreamReader$1),function(e){Object.defineProperty(e,"t",{value:!0}),e.StreamReader=e.EndOfStreamError=void 0;var t=EndOfFileStream;Object.defineProperty(e,"EndOfStreamError",{enumerable:!0,get:function(){return t.EndOfStreamError}});var r=StreamReader$1;Object.defineProperty(e,"StreamReader",{enumerable:!0,get:function(){return r.StreamReader}})}(lib$1),Object.defineProperty(AbstractTokenizer$1,"t",{value:!0}),AbstractTokenizer$1.AbstractTokenizer=void 0;const peek_readable_1$3=lib$1;class AbstractTokenizer{constructor(e){this.position=0,this.numBuffer=new Uint8Array(8),this.fileInfo=e||{}}async readToken(e,t=this.position){const r=Buffer.alloc(e.len);if(await this.readBuffer(r,{position:t})<e.len)throw new peek_readable_1$3.EndOfStreamError;return e.get(r,0)}async peekToken(e,t=this.position){const r=Buffer.alloc(e.len);if(await this.peekBuffer(r,{position:t})<e.len)throw new peek_readable_1$3.EndOfStreamError;return e.get(r,0)}async readNumber(e){if(await this.readBuffer(this.numBuffer,{length:e.len})<e.len)throw new peek_readable_1$3.EndOfStreamError;return e.get(this.numBuffer,0)}async peekNumber(e){if(await this.peekBuffer(this.numBuffer,{length:e.len})<e.len)throw new peek_readable_1$3.EndOfStreamError;return e.get(this.numBuffer,0)}async ignore(e){if(void 0!==this.fileInfo.size){const t=this.fileInfo.size-this.position;if(e>t)return this.position+=t,t}return this.position+=e,e}async close(){}normalizeOptions(e,t){if(t&&void 0!==t.position&&t.position<this.position)throw new Error("`options.position` must be equal or greater than `tokenizer.position`");return t?{mayBeLess:!0===t.mayBeLess,offset:t.offset?t.offset:0,length:t.length?t.length:e.length-(t.offset?t.offset:0),position:t.position?t.position:this.position}:{mayBeLess:!1,offset:0,length:e.length,position:this.position}}}AbstractTokenizer$1.AbstractTokenizer=AbstractTokenizer,Object.defineProperty(ReadStreamTokenizer$1,"t",{value:!0}),ReadStreamTokenizer$1.ReadStreamTokenizer=void 0;const AbstractTokenizer_1$2=AbstractTokenizer$1,peek_readable_1$2=lib$1,maxBufferSize=256e3;class ReadStreamTokenizer extends AbstractTokenizer_1$2.AbstractTokenizer{constructor(e,t){super(t),this.streamReader=new peek_readable_1$2.StreamReader(e)}async getFileInfo(){return this.fileInfo}async readBuffer(e,t){const r=this.normalizeOptions(e,t),a=r.position-this.position;if(a>0)return await this.ignore(a),this.readBuffer(e,t);if(a<0)throw new Error("`options.position` must be equal or greater than `tokenizer.position`");if(0===r.length)return 0;const i=await this.streamReader.read(e,r.offset,r.length);if(this.position+=i,(!t||!t.mayBeLess)&&i<r.length)throw new peek_readable_1$2.EndOfStreamError;return i}async peekBuffer(e,t){const r=this.normalizeOptions(e,t);let a=0;if(r.position){const t=r.position-this.position;if(t>0){const i=new Uint8Array(r.length+t);return a=await this.peekBuffer(i,{mayBeLess:r.mayBeLess}),e.set(i.subarray(t),r.offset),a-t}if(t<0)throw new Error("Cannot peek from a negative offset in a stream")}if(r.length>0){try{a=await this.streamReader.peek(e,r.offset,r.length)}catch(i){if(t&&t.mayBeLess&&i instanceof peek_readable_1$2.EndOfStreamError)return 0;throw i}if(!r.mayBeLess&&a<r.length)throw new peek_readable_1$2.EndOfStreamError}return a}async ignore(e){const t=Math.min(maxBufferSize,e),r=new Uint8Array(t);let a=0;for(;a<e;){const i=e-a,s=await this.readBuffer(r,{length:Math.min(t,i)});if(s<0)return s;a+=s}return a}}ReadStreamTokenizer$1.ReadStreamTokenizer=ReadStreamTokenizer;var BufferTokenizer$1={};Object.defineProperty(BufferTokenizer$1,"t",{value:!0}),BufferTokenizer$1.BufferTokenizer=void 0;const peek_readable_1$1=lib$1,AbstractTokenizer_1$1=AbstractTokenizer$1;class BufferTokenizer extends AbstractTokenizer_1$1.AbstractTokenizer{constructor(e,t){super(t),this.uint8Array=e,this.fileInfo.size=this.fileInfo.size?this.fileInfo.size:e.length}async readBuffer(e,t){if(t&&t.position){if(t.position<this.position)throw new Error("`options.position` must be equal or greater than `tokenizer.position`");this.position=t.position}const r=await this.peekBuffer(e,t);return this.position+=r,r}async peekBuffer(e,t){const r=this.normalizeOptions(e,t),a=Math.min(this.uint8Array.length-r.position,r.length);if(!r.mayBeLess&&a<r.length)throw new peek_readable_1$1.EndOfStreamError;return e.set(this.uint8Array.subarray(r.position,r.position+a),r.offset),a}async close(){}}BufferTokenizer$1.BufferTokenizer=BufferTokenizer,function(e){Object.defineProperty(e,"t",{value:!0}),e.fromBuffer=e.fromStream=e.EndOfStreamError=void 0;const t=ReadStreamTokenizer$1,r=BufferTokenizer$1;var a=lib$1;Object.defineProperty(e,"EndOfStreamError",{enumerable:!0,get:function(){return a.EndOfStreamError}}),e.fromStream=function(e,r){return r=r||{},new t.ReadStreamTokenizer(e,r)},e.fromBuffer=function(e,t){return new r.BufferTokenizer(e,t)}}(core$2);var FileTokenizer$1={};Object.defineProperty(FileTokenizer$1,"t",{value:!0}),FileTokenizer$1.fromFile=FileTokenizer$1.FileTokenizer=void 0;const AbstractTokenizer_1=AbstractTokenizer$1,peek_readable_1=lib$1,fs$1=FsPromise;class FileTokenizer extends AbstractTokenizer_1.AbstractTokenizer{constructor(e,t){super(t),this.fd=e}async readBuffer(e,t){const r=this.normalizeOptions(e,t);this.position=r.position;const a=await fs$1.read(this.fd,e,r.offset,r.length,r.position);if(this.position+=a.bytesRead,a.bytesRead<r.length&&(!t||!t.mayBeLess))throw new peek_readable_1.EndOfStreamError;return a.bytesRead}async peekBuffer(e,t){const r=this.normalizeOptions(e,t),a=await fs$1.read(this.fd,e,r.offset,r.length,r.position);if(!r.mayBeLess&&a.bytesRead<r.length)throw new peek_readable_1.EndOfStreamError;return a.bytesRead}async close(){return fs$1.close(this.fd)}}async function fromFile(e){const t=await fs$1.stat(e);if(!t.isFile)throw new Error(`File not a file: ${e}`);const r=await fs$1.open(e,"r");return new FileTokenizer(r,{path:e,size:t.size})}FileTokenizer$1.FileTokenizer=FileTokenizer,FileTokenizer$1.fromFile=fromFile,function(e){Object.defineProperty(e,"t",{value:!0}),e.fromStream=e.fromBuffer=e.EndOfStreamError=e.fromFile=void 0;const t=FsPromise,r=core$2;var a=FileTokenizer$1;Object.defineProperty(e,"fromFile",{enumerable:!0,get:function(){return a.fromFile}});var i=core$2;Object.defineProperty(e,"EndOfStreamError",{enumerable:!0,get:function(){return i.EndOfStreamError}}),Object.defineProperty(e,"fromBuffer",{enumerable:!0,get:function(){return i.fromBuffer}}),e.fromStream=async function(e,a){if(a=a||{},e.path){const r=await t.stat(e.path);a.path=e.path,a.size=r.size}return r.fromStream(e,a)}}(lib$2);var core$1={},ParserFactory$1={},lib={};!function(e){Object.defineProperty(e,"t",{value:!0}),e.AnsiStringType=e.StringType=e.BufferType=e.Uint8ArrayType=e.IgnoreType=e.Float80_LE=e.Float80_BE=e.Float64_LE=e.Float64_BE=e.Float32_LE=e.Float32_BE=e.Float16_LE=e.Float16_BE=e.INT64_BE=e.UINT64_BE=e.INT64_LE=e.UINT64_LE=e.INT32_LE=e.INT32_BE=e.INT24_BE=e.INT24_LE=e.INT16_LE=e.INT16_BE=e.INT8=e.UINT32_BE=e.UINT32_LE=e.UINT24_BE=e.UINT24_LE=e.UINT16_BE=e.UINT16_LE=e.UINT8=void 0;const t=ieee754;function r(e){return new DataView(e.buffer,e.byteOffset)}e.UINT8={len:1,get:(e,t)=>r(e).getUint8(t),put:(e,t,a)=>(r(e).setUint8(t,a),t+1)},e.UINT16_LE={len:2,get:(e,t)=>r(e).getUint16(t,!0),put:(e,t,a)=>(r(e).setUint16(t,a,!0),t+2)},e.UINT16_BE={len:2,get:(e,t)=>r(e).getUint16(t),put:(e,t,a)=>(r(e).setUint16(t,a),t+2)},e.UINT24_LE={len:3,get(e,t){const a=r(e);return a.getUint8(t)+(a.getUint16(t+1,!0)<<8)},put(e,t,a){const i=r(e);return i.setUint8(t,255&a),i.setUint16(t+1,a>>8,!0),t+3}},e.UINT24_BE={len:3,get(e,t){const a=r(e);return(a.getUint16(t)<<8)+a.getUint8(t+2)},put(e,t,a){const i=r(e);return i.setUint16(t,a>>8),i.setUint8(t+2,255&a),t+3}},e.UINT32_LE={len:4,get:(e,t)=>r(e).getUint32(t,!0),put:(e,t,a)=>(r(e).setUint32(t,a,!0),t+4)},e.UINT32_BE={len:4,get:(e,t)=>r(e).getUint32(t),put:(e,t,a)=>(r(e).setUint32(t,a),t+4)},e.INT8={len:1,get:(e,t)=>r(e).getInt8(t),put:(e,t,a)=>(r(e).setInt8(t,a),t+2)},e.INT16_BE={len:2,get:(e,t)=>r(e).getInt16(t),put:(e,t,a)=>(r(e).setInt16(t,a),t+2)},e.INT16_LE={len:2,get:(e,t)=>r(e).getInt16(t,!0),put:(e,t,a)=>(r(e).setInt16(t,a,!0),t+2)},e.INT24_LE={len:3,get(t,r){const a=e.UINT24_LE.get(t,r);return a>8388607?a-16777216:a},put(e,t,a){const i=r(e);return i.setUint8(t,255&a),i.setUint16(t+1,a>>8,!0),t+3}},e.INT24_BE={len:3,get(t,r){const a=e.UINT24_BE.get(t,r);return a>8388607?a-16777216:a},put(e,t,a){const i=r(e);return i.setUint16(t,a>>8),i.setUint8(t+2,255&a),t+3}},e.INT32_BE={len:4,get:(e,t)=>r(e).getInt32(t),put:(e,t,a)=>(r(e).setInt32(t,a),t+4)},e.INT32_LE={len:4,get:(e,t)=>r(e).getInt32(t,!0),put:(e,t,a)=>(r(e).setInt32(t,a,!0),t+4)},e.UINT64_LE={len:8,get:(e,t)=>r(e).getBigUint64(t,!0),put:(e,t,a)=>(r(e).setBigUint64(t,a,!0),t+8)},e.INT64_LE={len:8,get:(e,t)=>r(e).getBigInt64(t,!0),put:(e,t,a)=>(r(e).setBigInt64(t,a,!0),t+8)},e.UINT64_BE={len:8,get:(e,t)=>r(e).getBigUint64(t),put:(e,t,a)=>(r(e).setBigUint64(t,a),t+8)},e.INT64_BE={len:8,get:(e,t)=>r(e).getBigInt64(t),put:(e,t,a)=>(r(e).setBigInt64(t,a),t+8)},e.Float16_BE={len:2,get(e,r){return t.read(e,r,!1,10,this.len)},put(e,r,a){return t.write(e,a,r,!1,10,this.len),r+this.len}},e.Float16_LE={len:2,get(e,r){return t.read(e,r,!0,10,this.len)},put(e,r,a){return t.write(e,a,r,!0,10,this.len),r+this.len}},e.Float32_BE={len:4,get:(e,t)=>r(e).getFloat32(t),put:(e,t,a)=>(r(e).setFloat32(t,a),t+4)},e.Float32_LE={len:4,get:(e,t)=>r(e).getFloat32(t,!0),put:(e,t,a)=>(r(e).setFloat32(t,a,!0),t+4)},e.Float64_BE={len:8,get:(e,t)=>r(e).getFloat64(t),put:(e,t,a)=>(r(e).setFloat64(t,a),t+8)},e.Float64_LE={len:8,get:(e,t)=>r(e).getFloat64(t,!0),put:(e,t,a)=>(r(e).setFloat64(t,a,!0),t+8)},e.Float80_BE={len:10,get(e,r){return t.read(e,r,!1,63,this.len)},put(e,r,a){return t.write(e,a,r,!1,63,this.len),r+this.len}},e.Float80_LE={len:10,get(e,r){return t.read(e,r,!0,63,this.len)},put(e,r,a){return t.write(e,a,r,!0,63,this.len),r+this.len}},e.IgnoreType=class{constructor(e){this.len=e}get(e,t){}},e.Uint8ArrayType=class{constructor(e){this.len=e}get(e,t){return e.subarray(t,t+this.len)}},e.BufferType=class{constructor(e){this.len=e}get(e,t){return Buffer.from(e.subarray(t,t+this.len))}},e.StringType=class{constructor(e,t){this.len=e,this.encoding=t}get(e,t){return Buffer.from(e).toString(this.encoding,t,t+this.len)}};class a{constructor(e){this.len=e}static decode(e,t,r){let i="";for(let s=t;s<r;++s)i+=a.codePointToString(a.singleByteDecoder(e[s]));return i}static inRange(e,t,r){return t<=e&&e<=r}static codePointToString(e){return e<=65535?String.fromCharCode(e):(e-=65536,String.fromCharCode(55296+(e>>10),56320+(1023&e)))}static singleByteDecoder(e){if(a.inRange(e,0,127))return e;const t=a.windows1252[e-128];if(null===t)throw Error("invaliding encoding");return t}get(e,t=0){return a.decode(e,t,t+this.len)}}e.AnsiStringType=a,a.windows1252=[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255]}(lib);var util$b={stringToBytes:e=>[...e].map((e=>e.charCodeAt(0))),tarHeaderChecksumMatches:(e,t=0)=>{const r=parseInt(e.toString("utf8",148,154).replace(/\0.*$/,"").trim(),8);if(isNaN(r))return!1;let a=256;for(let i=t;i<t+148;i++)a+=e[i];for(let i=t+156;i<t+512;i++)a+=e[i];return r===a},uint32SyncSafeToken:{get:(e,t)=>127&e[t+3]|e[t+2]<<7|e[t+1]<<14|e[t]<<21,len:4}},supported$1={extensions:["jpg","png","apng","gif","webp","flif","xcf","cr2","cr3","orf","arw","dng","nef","rw2","raf","tif","bmp","icns","jxr","psd","indd","zip","tar","rar","gz","bz2","7z","dmg","mp4","mid","mkv","webm","mov","avi","mpg","mp2","mp3","m4a","oga","ogg","ogv","opus","flac","wav","spx","amr","pdf","epub","exe","swf","rtf","wasm","woff","woff2","eot","ttf","otf","ico","flv","ps","xz","sqlite","nes","crx","xpi","cab","deb","ar","rpm","Z","lz","cfb","mxf","mts","blend","bpg","docx","pptx","xlsx","3gp","3g2","jp2","jpm","jpx","mj2","aif","qcp","odt","ods","odp","xml","mobi","heic","cur","ktx","ape","wv","dcm","ics","glb","pcap","dsf","lnk","alias","voc","ac3","m4v","m4p","m4b","f4v","f4p","f4b","f4a","mie","asf","ogm","ogx","mpc","arrow","shp","aac","mp1","it","s3m","xm","ai","skp","avif","eps","lzh","pgp","asar","stl","chm","3mf","zst","jxl","vcf"],mimeTypes:["image/jpeg","image/png","image/gif","image/webp","image/flif","image/x-xcf","image/x-canon-cr2","image/x-canon-cr3","image/tiff","image/bmp","image/vnd.ms-photo","image/vnd.adobe.photoshop","application/x-indesign","application/epub+zip","application/x-xpinstall","application/vnd.oasis.opendocument.text","application/vnd.oasis.opendocument.spreadsheet","application/vnd.oasis.opendocument.presentation","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/zip","application/x-tar","application/x-rar-compressed","application/gzip","application/x-bzip2","application/x-7z-compressed","application/x-apple-diskimage","application/x-apache-arrow","video/mp4","audio/midi","video/x-matroska","video/webm","video/quicktime","video/vnd.avi","audio/vnd.wave","audio/qcelp","audio/x-ms-asf","video/x-ms-asf","application/vnd.ms-asf","video/mpeg","video/3gpp","audio/mpeg","audio/mp4","audio/opus","video/ogg","audio/ogg","application/ogg","audio/x-flac","audio/ape","audio/wavpack","audio/amr","application/pdf","application/x-msdownload","application/x-shockwave-flash","application/rtf","application/wasm","font/woff","font/woff2","application/vnd.ms-fontobject","font/ttf","font/otf","image/x-icon","video/x-flv","application/postscript","application/eps","application/x-xz","application/x-sqlite3","application/x-nintendo-nes-rom","application/x-google-chrome-extension","application/vnd.ms-cab-compressed","application/x-deb","application/x-unix-archive","application/x-rpm","application/x-compress","application/x-lzip","application/x-cfb","application/x-mie","application/mxf","video/mp2t","application/x-blender","image/bpg","image/jp2","image/jpx","image/jpm","image/mj2","audio/aiff","application/xml","application/x-mobipocket-ebook","image/heif","image/heif-sequence","image/heic","image/heic-sequence","image/icns","image/ktx","application/dicom","audio/x-musepack","text/calendar","text/vcard","model/gltf-binary","application/vnd.tcpdump.pcap","audio/x-dsf","application/x.ms.shortcut","application/x.apple.alias","audio/x-voc","audio/vnd.dolby.dd-raw","audio/x-m4a","image/apng","image/x-olympus-orf","image/x-sony-arw","image/x-adobe-dng","image/x-nikon-nef","image/x-panasonic-rw2","image/x-fujifilm-raf","video/x-m4v","video/3gpp2","application/x-esri-shape","audio/aac","audio/x-it","audio/x-s3m","audio/x-xm","video/MP1S","video/MP2P","application/vnd.sketchup.skp","image/avif","application/x-lzh-compressed","application/pgp-encrypted","application/x-asar","model/stl","application/vnd.ms-htmlhelp","model/3mf","image/jxl","application/zstd"]};const Token$s=lib,strtok3$5=core$2,{stringToBytes:stringToBytes,tarHeaderChecksumMatches:tarHeaderChecksumMatches,uint32SyncSafeToken:uint32SyncSafeToken}=util$b,supported=supported$1,minimumBytes=4100;async function fromStream(e){const t=await strtok3$5.fromStream(e);try{return await fromTokenizer(t)}finally{await t.close()}}async function fromBuffer(e){if(!(e instanceof Uint8Array||e instanceof ArrayBuffer||Buffer.isBuffer(e)))throw new TypeError(`Expected the \`input\` argument to be of type \`Uint8Array\` or \`Buffer\` or \`ArrayBuffer\`, got \`${typeof e}\``);const t=e instanceof Buffer?e:Buffer.from(e);if(t&&t.length>1)return fromTokenizer(strtok3$5.fromBuffer(t))}function _check(e,t,r){r={offset:0,...r};for(const[a,i]of t.entries())if(r.mask){if(i!==(r.mask[a]&e[a+r.offset]))return!1}else if(i!==e[a+r.offset])return!1;return!0}async function fromTokenizer(e){try{return _fromTokenizer(e)}catch(t){if(!(t instanceof strtok3$5.EndOfStreamError))throw t}}async function _fromTokenizer(e){let t=Buffer.alloc(minimumBytes);const r=(e,r)=>_check(t,e,r),a=(e,t)=>r(stringToBytes(e),t);if(e.fileInfo.size||(e.fileInfo.size=Number.MAX_SAFE_INTEGER),await e.peekBuffer(t,{length:12,mayBeLess:!0}),r([66,77]))return{ext:"bmp",mime:"image/bmp"};if(r([11,119]))return{ext:"ac3",mime:"audio/vnd.dolby.dd-raw"};if(r([120,1]))return{ext:"dmg",mime:"application/x-apple-diskimage"};if(r([77,90]))return{ext:"exe",mime:"application/x-msdownload"};if(r([37,33]))return await e.peekBuffer(t,{length:24,mayBeLess:!0}),a("PS-Adobe-",{offset:2})&&a(" EPSF-",{offset:14})?{ext:"eps",mime:"application/eps"}:{ext:"ps",mime:"application/postscript"};if(r([31,160])||r([31,157]))return{ext:"Z",mime:"application/x-compress"};if(r([255,216,255]))return{ext:"jpg",mime:"image/jpeg"};if(r([73,73,188]))return{ext:"jxr",mime:"image/vnd.ms-photo"};if(r([31,139,8]))return{ext:"gz",mime:"application/gzip"};if(r([66,90,104]))return{ext:"bz2",mime:"application/x-bzip2"};if(a("ID3")){await e.ignore(6);const n=await e.readToken(uint32SyncSafeToken);return e.position+n>e.fileInfo.size?{ext:"mp3",mime:"audio/mpeg"}:(await e.ignore(n),fromTokenizer(e))}if(a("MP+"))return{ext:"mpc",mime:"audio/x-musepack"};if((67===t[0]||70===t[0])&&r([87,83],{offset:1}))return{ext:"swf",mime:"application/x-shockwave-flash"};if(r([71,73,70]))return{ext:"gif",mime:"image/gif"};if(a("FLIF"))return{ext:"flif",mime:"image/flif"};if(a("8BPS"))return{ext:"psd",mime:"image/vnd.adobe.photoshop"};if(a("WEBP",{offset:8}))return{ext:"webp",mime:"image/webp"};if(a("MPCK"))return{ext:"mpc",mime:"audio/x-musepack"};if(a("FORM"))return{ext:"aif",mime:"audio/aiff"};if(a("icns",{offset:0}))return{ext:"icns",mime:"image/icns"};if(r([80,75,3,4])){try{for(;e.position+30<e.fileInfo.size;){await e.readBuffer(t,{length:30});const o={compressedSize:t.readUInt32LE(18),uncompressedSize:t.readUInt32LE(22),filenameLength:t.readUInt16LE(26),extraFieldLength:t.readUInt16LE(28)};if(o.filename=await e.readToken(new Token$s.StringType(o.filenameLength,"utf-8")),await e.ignore(o.extraFieldLength),"META-INF/mozilla.rsa"===o.filename)return{ext:"xpi",mime:"application/x-xpinstall"};if(o.filename.endsWith(".rels")||o.filename.endsWith(".xml"))switch(o.filename.split("/")[0]){case"_rels":default:break;case"word":return{ext:"docx",mime:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"};case"ppt":return{ext:"pptx",mime:"application/vnd.openxmlformats-officedocument.presentationml.presentation"};case"xl":return{ext:"xlsx",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"}}if(o.filename.startsWith("xl/"))return{ext:"xlsx",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"};if(o.filename.startsWith("3D/")&&o.filename.endsWith(".model"))return{ext:"3mf",mime:"model/3mf"};if("mimetype"===o.filename&&o.compressedSize===o.uncompressedSize)switch(await e.readToken(new Token$s.StringType(o.compressedSize,"utf-8"))){case"application/epub+zip":return{ext:"epub",mime:"application/epub+zip"};case"application/vnd.oasis.opendocument.text":return{ext:"odt",mime:"application/vnd.oasis.opendocument.text"};case"application/vnd.oasis.opendocument.spreadsheet":return{ext:"ods",mime:"application/vnd.oasis.opendocument.spreadsheet"};case"application/vnd.oasis.opendocument.presentation":return{ext:"odp",mime:"application/vnd.oasis.opendocument.presentation"}}if(0===o.compressedSize){let c=-1;for(;c<0&&e.position<e.fileInfo.size;)await e.peekBuffer(t,{mayBeLess:!0}),c=t.indexOf("504B0304",0,"hex"),await e.ignore(c>=0?c:t.length)}else await e.ignore(o.compressedSize)}}catch(i){if(!(i instanceof strtok3$5.EndOfStreamError))throw i}return{ext:"zip",mime:"application/zip"}}if(a("OggS")){await e.ignore(28);const u=Buffer.alloc(8);return await e.readBuffer(u),_check(u,[79,112,117,115,72,101,97,100])?{ext:"opus",mime:"audio/opus"}:_check(u,[128,116,104,101,111,114,97])?{ext:"ogv",mime:"video/ogg"}:_check(u,[1,118,105,100,101,111,0])?{ext:"ogm",mime:"video/ogg"}:_check(u,[127,70,76,65,67])?{ext:"oga",mime:"audio/ogg"}:_check(u,[83,112,101,101,120,32,32])?{ext:"spx",mime:"audio/ogg"}:_check(u,[1,118,111,114,98,105,115])?{ext:"ogg",mime:"audio/ogg"}:{ext:"ogx",mime:"application/ogg"}}if(r([80,75])&&(3===t[2]||5===t[2]||7===t[2])&&(4===t[3]||6===t[3]||8===t[3]))return{ext:"zip",mime:"application/zip"};if(a("ftyp",{offset:4})&&0!=(96&t[8])){const l=t.toString("binary",8,12).replace("\0"," ").trim();switch(l){case"avif":return{ext:"avif",mime:"image/avif"};case"mif1":return{ext:"heic",mime:"image/heif"};case"msf1":return{ext:"heic",mime:"image/heif-sequence"};case"heic":case"heix":return{ext:"heic",mime:"image/heic"};case"hevc":case"hevx":return{ext:"heic",mime:"image/heic-sequence"};case"qt":return{ext:"mov",mime:"video/quicktime"};case"M4V":case"M4VH":case"M4VP":return{ext:"m4v",mime:"video/x-m4v"};case"M4P":return{ext:"m4p",mime:"video/mp4"};case"M4B":return{ext:"m4b",mime:"audio/mp4"};case"M4A":return{ext:"m4a",mime:"audio/x-m4a"};case"F4V":return{ext:"f4v",mime:"video/mp4"};case"F4P":return{ext:"f4p",mime:"video/mp4"};case"F4A":return{ext:"f4a",mime:"audio/mp4"};case"F4B":return{ext:"f4b",mime:"audio/mp4"};case"crx":return{ext:"cr3",mime:"image/x-canon-cr3"};default:return l.startsWith("3g")?l.startsWith("3g2")?{ext:"3g2",mime:"video/3gpp2"}:{ext:"3gp",mime:"video/3gpp"}:{ext:"mp4",mime:"video/mp4"}}}if(a("MThd"))return{ext:"mid",mime:"audio/midi"};if(a("wOFF")&&(r([0,1,0,0],{offset:4})||a("OTTO",{offset:4})))return{ext:"woff",mime:"font/woff"};if(a("wOF2")&&(r([0,1,0,0],{offset:4})||a("OTTO",{offset:4})))return{ext:"woff2",mime:"font/woff2"};if(r([212,195,178,161])||r([161,178,195,212]))return{ext:"pcap",mime:"application/vnd.tcpdump.pcap"};if(a("DSD "))return{ext:"dsf",mime:"audio/x-dsf"};if(a("LZIP"))return{ext:"lz",mime:"application/x-lzip"};if(a("fLaC"))return{ext:"flac",mime:"audio/x-flac"};if(r([66,80,71,251]))return{ext:"bpg",mime:"image/bpg"};if(a("wvpk"))return{ext:"wv",mime:"audio/wavpack"};if(a("%PDF")){await e.ignore(1350);const f=10485760,h=Buffer.alloc(Math.min(f,e.fileInfo.size));return await e.readBuffer(h,{mayBeLess:!0}),h.includes(Buffer.from("AIPrivateData"))?{ext:"ai",mime:"application/postscript"}:{ext:"pdf",mime:"application/pdf"}}if(r([0,97,115,109]))return{ext:"wasm",mime:"application/wasm"};if(r([73,73,42,0]))return a("CR",{offset:8})?{ext:"cr2",mime:"image/x-canon-cr2"}:r([28,0,254,0],{offset:8})||r([31,0,11,0],{offset:8})?{ext:"nef",mime:"image/x-nikon-nef"}:r([8,0,0,0],{offset:4})&&(r([45,0,254,0],{offset:8})||r([39,0,254,0],{offset:8}))?{ext:"dng",mime:"image/x-adobe-dng"}:(t=Buffer.alloc(24),await e.peekBuffer(t),(r([16,251,134,1],{offset:4})||r([8,0,0,0],{offset:4}))&&r([0,254,0,4,0,1,0,0,0,1,0,0,0,3,1],{offset:9})?{ext:"arw",mime:"image/x-sony-arw"}:{ext:"tif",mime:"image/tiff"});if(r([77,77,0,42]))return{ext:"tif",mime:"image/tiff"};if(a("MAC "))return{ext:"ape",mime:"audio/ape"};if(r([26,69,223,163])){async function m(){const t=await e.peekNumber(Token$s.UINT8);let r=128,a=0;for(;0==(t&r);)++a,r>>=1;const i=Buffer.alloc(a+1);return await e.readBuffer(i),i}async function p(){const e=await m(),t=await m();t[0]^=128>>t.length-1;const r=Math.min(6,t.length);return{id:e.readUIntBE(0,e.length),len:t.readUIntBE(t.length-r,r)}}async function d(t,r){for(;r>0;){const t=await p();if(17026===t.id)return e.readToken(new Token$s.StringType(t.len,"utf-8"));await e.ignore(t.len),--r}}const g=await p();switch(await d(0,g.len)){case"webm":return{ext:"webm",mime:"video/webm"};case"matroska":return{ext:"mkv",mime:"video/x-matroska"};default:return}}if(r([82,73,70,70])){if(r([65,86,73],{offset:8}))return{ext:"avi",mime:"video/vnd.avi"};if(r([87,65,86,69],{offset:8}))return{ext:"wav",mime:"audio/vnd.wave"};if(r([81,76,67,77],{offset:8}))return{ext:"qcp",mime:"audio/qcelp"}}if(a("SQLi"))return{ext:"sqlite",mime:"application/x-sqlite3"};if(r([78,69,83,26]))return{ext:"nes",mime:"application/x-nintendo-nes-rom"};if(a("Cr24"))return{ext:"crx",mime:"application/x-google-chrome-extension"};if(a("MSCF")||a("ISc("))return{ext:"cab",mime:"application/vnd.ms-cab-compressed"};if(r([237,171,238,219]))return{ext:"rpm",mime:"application/x-rpm"};if(r([197,208,211,198]))return{ext:"eps",mime:"application/eps"};if(r([40,181,47,253]))return{ext:"zst",mime:"application/zstd"};if(r([79,84,84,79,0]))return{ext:"otf",mime:"font/otf"};if(a("#!AMR"))return{ext:"amr",mime:"audio/amr"};if(a("{\\rtf"))return{ext:"rtf",mime:"application/rtf"};if(r([70,76,86,1]))return{ext:"flv",mime:"video/x-flv"};if(a("IMPM"))return{ext:"it",mime:"audio/x-it"};if(a("-lh0-",{offset:2})||a("-lh1-",{offset:2})||a("-lh2-",{offset:2})||a("-lh3-",{offset:2})||a("-lh4-",{offset:2})||a("-lh5-",{offset:2})||a("-lh6-",{offset:2})||a("-lh7-",{offset:2})||a("-lzs-",{offset:2})||a("-lz4-",{offset:2})||a("-lz5-",{offset:2})||a("-lhd-",{offset:2}))return{ext:"lzh",mime:"application/x-lzh-compressed"};if(r([0,0,1,186])){if(r([33],{offset:4,mask:[241]}))return{ext:"mpg",mime:"video/MP1S"};if(r([68],{offset:4,mask:[196]}))return{ext:"mpg",mime:"video/MP2P"}}if(a("ITSF"))return{ext:"chm",mime:"application/vnd.ms-htmlhelp"};if(r([253,55,122,88,90,0]))return{ext:"xz",mime:"application/x-xz"};if(a("<?xml "))return{ext:"xml",mime:"application/xml"};if(r([55,122,188,175,39,28]))return{ext:"7z",mime:"application/x-7z-compressed"};if(r([82,97,114,33,26,7])&&(0===t[6]||1===t[6]))return{ext:"rar",mime:"application/x-rar-compressed"};if(a("solid "))return{ext:"stl",mime:"model/stl"};if(a("BLENDER"))return{ext:"blend",mime:"application/x-blender"};if(a("!<arch>"))return await e.ignore(8),"debian-binary"===await e.readToken(new Token$s.StringType(13,"ascii"))?{ext:"deb",mime:"application/x-deb"}:{ext:"ar",mime:"application/x-unix-archive"};if(r([137,80,78,71,13,10,26,10])){async function b(){return{length:await e.readToken(Token$s.INT32_BE),type:await e.readToken(new Token$s.StringType(4,"binary"))}}await e.ignore(8);do{const T=await b();if(T.length<0)return;switch(T.type){case"IDAT":return{ext:"png",mime:"image/png"};case"acTL":return{ext:"apng",mime:"image/apng"};default:await e.ignore(T.length+4)}}while(e.position+8<e.fileInfo.size);return{ext:"png",mime:"image/png"}}if(r([65,82,82,79,87,49,0,0]))return{ext:"arrow",mime:"application/x-apache-arrow"};if(r([103,108,84,70,2,0,0,0]))return{ext:"glb",mime:"model/gltf-binary"};if(r([102,114,101,101],{offset:4})||r([109,100,97,116],{offset:4})||r([109,111,111,118],{offset:4})||r([119,105,100,101],{offset:4}))return{ext:"mov",mime:"video/quicktime"};if(r([73,73,82,79,8,0,0,0,24]))return{ext:"orf",mime:"image/x-olympus-orf"};if(a("gimp xcf "))return{ext:"xcf",mime:"image/x-xcf"};if(r([73,73,85,0,24,0,0,0,136,231,116,216]))return{ext:"rw2",mime:"image/x-panasonic-rw2"};if(r([48,38,178,117,142,102,207,17,166,217])){async function $(){const t=Buffer.alloc(16);return await e.readBuffer(t),{id:t,size:Number(await e.readToken(Token$s.UINT64_LE))}}for(await e.ignore(30);e.position+24<e.fileInfo.size;){const _=await $();let w=_.size-24;if(_check(_.id,[145,7,220,183,183,169,207,17,142,230,0,192,12,32,83,101])){const v=Buffer.alloc(16);if(w-=await e.readBuffer(v),_check(v,[64,158,105,248,77,91,207,17,168,253,0,128,95,92,68,43]))return{ext:"asf",mime:"audio/x-ms-asf"};if(_check(v,[192,239,25,188,77,91,207,17,168,253,0,128,95,92,68,43]))return{ext:"asf",mime:"video/x-ms-asf"};break}await e.ignore(w)}return{ext:"asf",mime:"application/vnd.ms-asf"}}if(r([171,75,84,88,32,49,49,187,13,10,26,10]))return{ext:"ktx",mime:"image/ktx"};if((r([126,16,4])||r([126,24,4]))&&r([48,77,73,69],{offset:4}))return{ext:"mie",mime:"application/x-mie"};if(r([39,10,0,0,0,0,0,0,0,0,0,0],{offset:2}))return{ext:"shp",mime:"application/x-esri-shape"};if(r([0,0,0,12,106,80,32,32,13,10,135,10]))switch(await e.ignore(20),await e.readToken(new Token$s.StringType(4,"ascii"))){case"jp2 ":return{ext:"jp2",mime:"image/jp2"};case"jpx ":return{ext:"jpx",mime:"image/jpx"};case"jpm ":return{ext:"jpm",mime:"image/jpm"};case"mjp2":return{ext:"mj2",mime:"image/mj2"};default:return}if(r([255,10])||r([0,0,0,12,74,88,76,32,13,10,135,10]))return{ext:"jxl",mime:"image/jxl"};if(r([0,0,1,186])||r([0,0,1,179]))return{ext:"mpg",mime:"video/mpeg"};if(r([0,1,0,0,0]))return{ext:"ttf",mime:"font/ttf"};if(r([0,0,1,0]))return{ext:"ico",mime:"image/x-icon"};if(r([0,0,2,0]))return{ext:"cur",mime:"image/x-icon"};if(r([208,207,17,224,161,177,26,225]))return{ext:"cfb",mime:"application/x-cfb"};if(await e.peekBuffer(t,{length:Math.min(256,e.fileInfo.size),mayBeLess:!0}),a("BEGIN:")){if(a("VCARD",{offset:6}))return{ext:"vcf",mime:"text/vcard"};if(a("VCALENDAR",{offset:6}))return{ext:"ics",mime:"text/calendar"}}if(a("FUJIFILMCCD-RAW"))return{ext:"raf",mime:"image/x-fujifilm-raf"};if(a("Extended Module:"))return{ext:"xm",mime:"audio/x-xm"};if(a("Creative Voice File"))return{ext:"voc",mime:"audio/x-voc"};if(r([4,0,0,0])&&t.length>=16){const y=t.readUInt32LE(12);if(y>12&&t.length>=y+16)try{const k=t.slice(16,y+16).toString();if(JSON.parse(k).files)return{ext:"asar",mime:"application/x-asar"}}catch(s){}}if(r([6,14,43,52,2,5,1,1,13,1,2,1,1,2]))return{ext:"mxf",mime:"application/mxf"};if(a("SCRM",{offset:44}))return{ext:"s3m",mime:"audio/x-s3m"};if(r([71],{offset:4})&&(r([71],{offset:192})||r([71],{offset:196})))return{ext:"mts",mime:"video/mp2t"};if(r([66,79,79,75,77,79,66,73],{offset:60}))return{ext:"mobi",mime:"application/x-mobipocket-ebook"};if(r([68,73,67,77],{offset:128}))return{ext:"dcm",mime:"application/dicom"};if(r([76,0,0,0,1,20,2,0,0,0,0,0,192,0,0,0,0,0,0,70]))return{ext:"lnk",mime:"application/x.ms.shortcut"};if(r([98,111,111,107,0,0,0,0,109,97,114,107,0,0,0,0]))return{ext:"alias",mime:"application/x.apple.alias"};if(r([76,80],{offset:34})&&(r([0,0,1],{offset:8})||r([1,0,2],{offset:8})||r([2,0,2],{offset:8})))return{ext:"eot",mime:"application/vnd.ms-fontobject"};if(r([6,6,237,245,216,29,70,229,189,49,239,231,254,116,183,29]))return{ext:"indd",mime:"application/x-indesign"};if(await e.peekBuffer(t,{length:Math.min(512,e.fileInfo.size),mayBeLess:!0}),tarHeaderChecksumMatches(t))return{ext:"tar",mime:"application/x-tar"};if(r([255,254,255,14,83,0,107,0,101,0,116,0,99,0,104,0,85,0,112,0,32,0,77,0,111,0,100,0,101,0,108,0]))return{ext:"skp",mime:"application/vnd.sketchup.skp"};if(a("-----BEGIN PGP MESSAGE-----"))return{ext:"pgp",mime:"application/pgp-encrypted"};if(t.length>=2&&r([255,224],{offset:0,mask:[255,224]})){if(r([16],{offset:1,mask:[22]}))return r([8],{offset:1,mask:[8]}),{ext:"aac",mime:"audio/aac"};if(r([2],{offset:1,mask:[6]}))return{ext:"mp3",mime:"audio/mpeg"};if(r([4],{offset:1,mask:[6]}))return{ext:"mp2",mime:"audio/mpeg"};if(r([6],{offset:1,mask:[6]}))return{ext:"mp1",mime:"audio/mpeg"}}}const stream=readableStream=>new Promise(((resolve,reject)=>{const stream=eval("require")("stream");readableStream.on("error",reject),readableStream.once("readable",(async()=>{const e=new stream.PassThrough;let t;t=stream.pipeline?stream.pipeline(readableStream,e,(()=>{})):readableStream.pipe(e);const r=readableStream.read(minimumBytes)||readableStream.read()||Buffer.alloc(0);try{const t=await fromBuffer(r);e.fileType=t}catch(a){reject(a)}resolve(t)}))})),fileType={fromStream:fromStream,fromTokenizer:fromTokenizer,fromBuffer:fromBuffer,stream:stream};Object.defineProperty(fileType,"extensions",{get:()=>new Set(supported.extensions)}),Object.defineProperty(fileType,"mimeTypes",{get:()=>new Set(supported.mimeTypes)});var core=fileType,contentType={},PARAM_REGEXP=/; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\u000b\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u000b\u0020-\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g,TEXT_REGEXP=/^[\u000b\u0020-\u007e\u0080-\u00ff]+$/,TOKEN_REGEXP=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/,QESC_REGEXP=/\\([\u000b\u0020-\u00ff])/g,QUOTE_REGEXP=/([\\"])/g,TYPE_REGEXP$1=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/;function format$1(e){if(!e||"object"!=typeof e)throw new TypeError("argument obj is required");var t=e.parameters,r=e.type;if(!r||!TYPE_REGEXP$1.test(r))throw new TypeError("invalid type");var a=r;if(t&&"object"==typeof t)for(var i,s=Object.keys(t).sort(),n=0;n<s.length;n++){if(i=s[n],!TOKEN_REGEXP.test(i))throw new TypeError("invalid parameter name");a+="; "+i+"="+qstring(t[i])}return a}function parse$3(e){if(!e)throw new TypeError("argument string is required");var t="object"==typeof e?getcontenttype(e):e;if("string"!=typeof t)throw new TypeError("argument string is required to be a string");var r=t.indexOf(";"),a=-1!==r?t.substr(0,r).trim():t.trim();if(!TYPE_REGEXP$1.test(a))throw new TypeError("invalid media type");var i=new ContentType$1(a.toLowerCase());if(-1!==r){var s,n,o;for(PARAM_REGEXP.lastIndex=r;n=PARAM_REGEXP.exec(t);){if(n.index!==r)throw new TypeError("invalid parameter format");r+=n[0].length,s=n[1].toLowerCase(),'"'===(o=n[2])[0]&&(o=o.substr(1,o.length-2).replace(QESC_REGEXP,"$1")),i.parameters[s]=o}if(r!==t.length)throw new TypeError("invalid parameter format")}return i}function getcontenttype(e){var t;if("function"==typeof e.getHeader?t=e.getHeader("content-type"):"object"==typeof e.headers&&(t=e.headers&&e.headers["content-type"]),"string"!=typeof t)throw new TypeError("content-type header is missing from object");return t}function qstring(e){var t=String(e);if(TOKEN_REGEXP.test(t))return t;if(t.length>0&&!TEXT_REGEXP.test(t))throw new TypeError("invalid parameter value");return'"'+t.replace(QUOTE_REGEXP,"\\$1")+'"'}function ContentType$1(e){this.parameters=Object.create(null),this.type=e}contentType.format=format$1,contentType.parse=parse$3;var mediaTyper={},SUBTYPE_NAME_REGEXP=/^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/,TYPE_NAME_REGEXP=/^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/,TYPE_REGEXP=/^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;function format(e){if(!e||"object"!=typeof e)throw new TypeError("argument obj is required");var t=e.subtype,r=e.suffix,a=e.type;if(!a||!TYPE_NAME_REGEXP.test(a))throw new TypeError("invalid type");if(!t||!SUBTYPE_NAME_REGEXP.test(t))throw new TypeError("invalid subtype");var i=a+"/"+t;if(r){if(!TYPE_NAME_REGEXP.test(r))throw new TypeError("invalid suffix");i+="+"+r}return i}function test(e){if(!e)throw new TypeError("argument string is required");if("string"!=typeof e)throw new TypeError("argument string is required to be a string");return TYPE_REGEXP.test(e.toLowerCase())}function parse$2(e){if(!e)throw new TypeError("argument string is required");if("string"!=typeof e)throw new TypeError("argument string is required to be a string");var t=TYPE_REGEXP.exec(e.toLowerCase());if(!t)throw new TypeError("invalid media type");var r,a=t[1],i=t[2],s=i.lastIndexOf("+");return-1!==s&&(r=i.substr(s+1),i=i.substr(0,s)),new MediaType(a,i,r)}function MediaType(e,t,r){this.type=e,this.subtype=t,this.suffix=r}mediaTyper.format=format,mediaTyper.parse=parse$2,mediaTyper.test=test;var browser={exports:{}},s=1e3,m=60*s,h=60*m,d=24*h,w=7*d,y=365.25*d,ms=function(e,t){t=t||{};var r=typeof e;if("string"===r&&e.length>0)return parse$1(e);if("number"===r&&isFinite(e))return t.long?fmtLong(e):fmtShort(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function parse$1(e){if(!((e=String(e)).length>100)){var t=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(t){var r=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return r*y;case"weeks":case"week":case"w":return r*w;case"days":case"day":case"d":return r*d;case"hours":case"hour":case"hrs":case"hr":case"h":return r*h;case"minutes":case"minute":case"mins":case"min":case"m":return r*m;case"seconds":case"second":case"secs":case"sec":case"s":return r*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}}}function fmtShort(e){var t=Math.abs(e);return t>=d?Math.round(e/d)+"d":t>=h?Math.round(e/h)+"h":t>=m?Math.round(e/m)+"m":t>=s?Math.round(e/s)+"s":e+"ms"}function fmtLong(e){var t=Math.abs(e);return t>=d?plural(e,t,d,"day"):t>=h?plural(e,t,h,"hour"):t>=m?plural(e,t,m,"minute"):t>=s?plural(e,t,s,"second"):e+" ms"}function plural(e,t,r,a){var i=t>=1.5*r;return Math.round(e/r)+" "+a+(i?"s":"")}function setup(e){function t(e){let a,i,s,n=null;function o(...e){if(!o.enabled)return;const r=o,i=Number(new Date),s=i-(a||i);r.diff=s,r.prev=a,r.curr=i,a=i,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let n=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((a,i)=>{if("%%"===a)return"%";n++;const s=t.formatters[i];if("function"==typeof s){const t=e[n];a=s.call(r,t),e.splice(n,1),n--}return a})),t.formatArgs.call(r,e),(r.log||t.log).apply(r,e)}return o.namespace=e,o.useColors=t.useColors(),o.color=t.selectColor(e),o.extend=r,o.destroy=t.destroy,Object.defineProperty(o,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==n?n:(i!==t.namespaces&&(i=t.namespaces,s=t.enabled(e)),s),set:e=>{n=e}}),"function"==typeof t.init&&t.init(o),o}function r(e,r){const a=t(this.namespace+(void 0===r?":":r)+e);return a.log=this.log,a}function a(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){const e=[...t.names.map(a),...t.skips.map(a).map((e=>"-"+e))].join(",");return t.enable(""),e},t.enable=function(e){let r;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const a=("string"==typeof e?e:"").split(/[\s,]+/),i=a.length;for(r=0;r<i;r++)a[r]&&("-"===(e=a[r].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.slice(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){if("*"===e[e.length-1])return!0;let r,a;for(r=0,a=t.skips.length;r<a;r++)if(t.skips[r].test(e))return!1;for(r=0,a=t.names.length;r<a;r++)if(t.names[r].test(e))return!0;return!1},t.humanize=ms,t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((r=>{t[r]=e[r]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let r=0;for(let t=0;t<e.length;t++)r=(r<<5)-r+e.charCodeAt(t),r|=0;return t.colors[Math.abs(r)%t.colors.length]},t.enable(t.load()),t}var common$3=setup;!function(e,t){t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const r="color: "+this.color;t.splice(1,0,r,"color: inherit");let a=0,i=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(a++,"%c"===e&&(i=a))})),t.splice(i,0,r)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(r){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(r){}return!e&&"undefined"!=typeof process&&"env"in process&&(e={}.DEBUG),e},t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=common$3(t);const{formatters:r}=e.exports;r.j=function(e){try{return JSON.stringify(e)}catch(t){return"[UnexpectedJSONParseError]: "+t.message}}}(browser,browser.exports);var MetadataCollector$1={},type={},types={},exports,DataType,TargetType,TrackType;exports=types,Object.defineProperty(exports,"t",{value:!0}),exports.TrackType=exports.TargetType=exports.DataType=void 0,(DataType=exports.DataType||(exports.DataType={}))[DataType.string=0]="string",DataType[DataType.uint=1]="uint",DataType[DataType.uid=2]="uid",DataType[DataType.bool=3]="bool",DataType[DataType.binary=4]="binary",DataType[DataType.float=5]="float",(TargetType=exports.TargetType||(exports.TargetType={}))[TargetType.shot=10]="shot",TargetType[TargetType.scene=20]="scene",TargetType[TargetType.track=30]="track",TargetType[TargetType.part=40]="part",TargetType[TargetType.album=50]="album",TargetType[TargetType.edition=60]="edition",TargetType[TargetType.collection=70]="collection",(TrackType=exports.TrackType||(exports.TrackType={}))[TrackType.video=1]="video",TrackType[TrackType.audio=2]="audio",TrackType[TrackType.complex=3]="complex",TrackType[TrackType.logo=4]="logo",TrackType[TrackType.subtitle=17]="subtitle",TrackType[TrackType.button=18]="button",TrackType[TrackType.control=32]="control",function(e){Object.defineProperty(e,"t",{value:!0}),e.TrackType=void 0;var t=types;Object.defineProperty(e,"TrackType",{enumerable:!0,get:function(){return t.TrackType}})}(type);var GenericTagTypes={};!function(e){Object.defineProperty(e,"t",{value:!0}),e.isUnique=e.isSingleton=e.commonTags=void 0,e.commonTags={year:{multiple:!1},track:{multiple:!1},disk:{multiple:!1},title:{multiple:!1},artist:{multiple:!1},artists:{multiple:!0,unique:!0},albumartist:{multiple:!1},album:{multiple:!1},date:{multiple:!1},originaldate:{multiple:!1},originalyear:{multiple:!1},comment:{multiple:!0,unique:!1},genre:{multiple:!0,unique:!0},picture:{multiple:!0,unique:!0},composer:{multiple:!0,unique:!0},lyrics:{multiple:!0,unique:!1},albumsort:{multiple:!1,unique:!0},titlesort:{multiple:!1,unique:!0},work:{multiple:!1,unique:!0},artistsort:{multiple:!1,unique:!0},albumartistsort:{multiple:!1,unique:!0},composersort:{multiple:!1,unique:!0},lyricist:{multiple:!0,unique:!0},writer:{multiple:!0,unique:!0},conductor:{multiple:!0,unique:!0},remixer:{multiple:!0,unique:!0},arranger:{multiple:!0,unique:!0},engineer:{multiple:!0,unique:!0},producer:{multiple:!0,unique:!0},technician:{multiple:!0,unique:!0},djmixer:{multiple:!0,unique:!0},mixer:{multiple:!0,unique:!0},label:{multiple:!0,unique:!0},grouping:{multiple:!1},subtitle:{multiple:!0},discsubtitle:{multiple:!1},totaltracks:{multiple:!1},totaldiscs:{multiple:!1},compilation:{multiple:!1},rating:{multiple:!0},bpm:{multiple:!1},mood:{multiple:!1},media:{multiple:!1},catalognumber:{multiple:!0,unique:!0},tvShow:{multiple:!1},tvShowSort:{multiple:!1},tvSeason:{multiple:!1},tvEpisode:{multiple:!1},tvEpisodeId:{multiple:!1},tvNetwork:{multiple:!1},podcast:{multiple:!1},podcasturl:{multiple:!1},releasestatus:{multiple:!1},releasetype:{multiple:!0},releasecountry:{multiple:!1},script:{multiple:!1},language:{multiple:!1},copyright:{multiple:!1},license:{multiple:!1},encodedby:{multiple:!1},encodersettings:{multiple:!1},gapless:{multiple:!1},barcode:{multiple:!1},isrc:{multiple:!0},asin:{multiple:!1},musicbrainz_recordingid:{multiple:!1},musicbrainz_trackid:{multiple:!1},musicbrainz_albumid:{multiple:!1},musicbrainz_artistid:{multiple:!0},musicbrainz_albumartistid:{multiple:!0},musicbrainz_releasegroupid:{multiple:!1},musicbrainz_workid:{multiple:!1},musicbrainz_trmid:{multiple:!1},musicbrainz_discid:{multiple:!1},acoustid_id:{multiple:!1},acoustid_fingerprint:{multiple:!1},musicip_puid:{multiple:!1},musicip_fingerprint:{multiple:!1},website:{multiple:!1},"performer:instrument":{multiple:!0,unique:!0},averageLevel:{multiple:!1},peakLevel:{multiple:!1},notes:{multiple:!0,unique:!1},key:{multiple:!1},originalalbum:{multiple:!1},originalartist:{multiple:!1},discogs_artist_id:{multiple:!0,unique:!0},discogs_release_id:{multiple:!1},discogs_label_id:{multiple:!1},discogs_master_release_id:{multiple:!1},discogs_votes:{multiple:!1},discogs_rating:{multiple:!1},replaygain_track_peak:{multiple:!1},replaygain_track_gain:{multiple:!1},replaygain_album_peak:{multiple:!1},replaygain_album_gain:{multiple:!1},replaygain_track_minmax:{multiple:!1},replaygain_album_minmax:{multiple:!1},replaygain_undo:{multiple:!1},description:{multiple:!0},longDescription:{multiple:!1},category:{multiple:!0},hdVideo:{multiple:!1},keywords:{multiple:!0},movement:{multiple:!1},movementIndex:{multiple:!1},movementTotal:{multiple:!1},podcastId:{multiple:!1},showMovement:{multiple:!1},stik:{multiple:!1}},e.isSingleton=function(t){return e.commonTags.hasOwnProperty(t)&&!e.commonTags[t].multiple},e.isUnique=function(t){return!e.commonTags[t].multiple||e.commonTags[t].unique}}(GenericTagTypes);var CombinedTagMapper$1={},ID3v1TagMap={},GenericTagMapper={};Object.defineProperty(GenericTagMapper,"t",{value:!0}),GenericTagMapper.CommonTagMapper=void 0;class CommonTagMapper{constructor(e,t){this.tagTypes=e,this.tagMap=t}static toIntOrNull(e){const t=parseInt(e,10);return isNaN(t)?null:t}static normalizeTrack(e){const t=e.toString().split("/");return{no:parseInt(t[0],10)||null,of:parseInt(t[1],10)||null}}mapGenericTag(e,t){e={id:e.id,value:e.value},this.postMap(e,t);const r=this.getCommonName(e.id);return r?{id:r,value:e.value}:null}getCommonName(e){return this.tagMap[e]}postMap(e,t){}}GenericTagMapper.CommonTagMapper=CommonTagMapper,CommonTagMapper.maxRatingScore=1,Object.defineProperty(ID3v1TagMap,"t",{value:!0}),ID3v1TagMap.ID3v1TagMapper=void 0;const GenericTagMapper_1$5=GenericTagMapper,id3v1TagMap={title:"title",artist:"artist",album:"album",year:"year",comment:"comment",track:"track",genre:"genre"};class ID3v1TagMapper extends GenericTagMapper_1$5.CommonTagMapper{constructor(){super(["ID3v1"],id3v1TagMap)}}ID3v1TagMap.ID3v1TagMapper=ID3v1TagMapper;var ID3v24TagMapper$1={},CaseInsensitiveTagMap$1={};Object.defineProperty(CaseInsensitiveTagMap$1,"t",{value:!0}),CaseInsensitiveTagMap$1.CaseInsensitiveTagMap=void 0;const GenericTagMapper_1$4=GenericTagMapper;class CaseInsensitiveTagMap extends GenericTagMapper_1$4.CommonTagMapper{constructor(e,t){const r={};for(const a of Object.keys(t))r[a.toUpperCase()]=t[a];super(e,r)}getCommonName(e){return this.tagMap[e.toUpperCase()]}}CaseInsensitiveTagMap$1.CaseInsensitiveTagMap=CaseInsensitiveTagMap;var Util={};function getBit(e,t,r){return 0!=(e[t]&1<<r)}function findZero(e,t,r,a){let i=t;if("utf16le"===a){for(;0!==e[i]||0!==e[i+1];){if(i>=r)return r;i+=2}return i}for(;0!==e[i];){if(i>=r)return r;i++}return i}function trimRightNull(e){const t=e.indexOf("\0");return-1===t?e:e.substr(0,t)}function swapBytes(e){const t=e.length;if(0!=(1&t))throw new Error("Buffer length must be even");for(let r=0;r<t;r+=2){const t=e[r];e[r]=e[r+1],e[r+1]=t}return e}function decodeString(e,t){if(255===e[0]&&254===e[1])return decodeString(e.subarray(2),t);if("utf16le"===t&&254===e[0]&&255===e[1]){if(0!=(1&e.length))throw new Error("Expected even number of octets for 16-bit unicode string");return decodeString(swapBytes(e),t)}return Buffer.from(e).toString(t)}function stripNulls(e){return(e=e.replace(/^\x00+/g,"")).replace(/\x00+$/g,"")}function getBitAllignedNumber(e,t,r,a){const i=r%8;let s=e[t+~~(r/8)];s&=255>>i;const n=8-i,o=a-n;return o<0?s>>=8-i-a:o>0&&(s<<=o,s|=getBitAllignedNumber(e,t,r+n,o)),s}function isBitSet(e,t,r){return 1===getBitAllignedNumber(e,t,r,1)}function a2hex(e){const t=[];for(let r=0,a=e.length;r<a;r++){const a=Number(e.charCodeAt(r)).toString(16);t.push(1===a.length?"0"+a:a)}return t.join(" ")}function ratioToDb(e){return 10*Math.log10(e)}function dbToRatio(e){return Math.pow(10,e/10)}function toRatio(e){const t=e.split(" ").map((e=>e.trim().toLowerCase()));if(t.length>=1){const e=parseFloat(t[0]);return 2===t.length&&"db"===t[1]?{dB:e,ratio:dbToRatio(e)}:{dB:ratioToDb(e),ratio:e}}}Object.defineProperty(Util,"t",{value:!0}),Util.toRatio=Util.dbToRatio=Util.ratioToDb=Util.a2hex=Util.isBitSet=Util.getBitAllignedNumber=Util.stripNulls=Util.decodeString=Util.trimRightNull=Util.findZero=Util.getBit=void 0,Util.getBit=getBit,Util.findZero=findZero,Util.trimRightNull=trimRightNull,Util.decodeString=decodeString,Util.stripNulls=stripNulls,Util.getBitAllignedNumber=getBitAllignedNumber,Util.isBitSet=isBitSet,Util.a2hex=a2hex,Util.ratioToDb=ratioToDb,Util.dbToRatio=dbToRatio,Util.toRatio=toRatio,Object.defineProperty(ID3v24TagMapper$1,"t",{value:!0}),ID3v24TagMapper$1.ID3v24TagMapper=void 0;const GenericTagMapper_1$3=GenericTagMapper,CaseInsensitiveTagMap_1$2=CaseInsensitiveTagMap$1,util$a=Util,id3v24TagMap={TIT2:"title",TPE1:"artist","TXXX:Artists":"artists",TPE2:"albumartist",TALB:"album",TDRV:"date",TORY:"originalyear",TPOS:"disk",TCON:"genre",APIC:"picture",TCOM:"composer","USLT:description":"lyrics",TSOA:"albumsort",TSOT:"titlesort",TOAL:"originalalbum",TSOP:"artistsort",TSO2:"albumartistsort",TSOC:"composersort",TEXT:"lyricist","TXXX:Writer":"writer",TPE3:"conductor",TPE4:"remixer","IPLS:arranger":"arranger","IPLS:engineer":"engineer","IPLS:producer":"producer","IPLS:DJ-mix":"djmixer","IPLS:mix":"mixer",TPUB:"label",TIT1:"grouping",TIT3:"subtitle",TRCK:"track",TCMP:"compilation",POPM:"rating",TBPM:"bpm",TMED:"media","TXXX:CATALOGNUMBER":"catalognumber","TXXX:MusicBrainz Album Status":"releasestatus","TXXX:MusicBrainz Album Type":"releasetype","TXXX:MusicBrainz Album Release Country":"releasecountry","TXXX:RELEASECOUNTRY":"releasecountry","TXXX:SCRIPT":"script",TLAN:"language",TCOP:"copyright",WCOP:"license",TENC:"encodedby",TSSE:"encodersettings","TXXX:BARCODE":"barcode","TXXX:ISRC":"isrc",TSRC:"isrc","TXXX:ASIN":"asin","TXXX:originalyear":"originalyear","UFID:http://musicbrainz.org":"musicbrainz_recordingid","TXXX:MusicBrainz Release Track Id":"musicbrainz_trackid","TXXX:MusicBrainz Album Id":"musicbrainz_albumid","TXXX:MusicBrainz Artist Id":"musicbrainz_artistid","TXXX:MusicBrainz Album Artist Id":"musicbrainz_albumartistid","TXXX:MusicBrainz Release Group Id":"musicbrainz_releasegroupid","TXXX:MusicBrainz Work Id":"musicbrainz_workid","TXXX:MusicBrainz TRM Id":"musicbrainz_trmid","TXXX:MusicBrainz Disc Id":"musicbrainz_discid","TXXX:ACOUSTID_ID":"acoustid_id","TXXX:Acoustid Id":"acoustid_id","TXXX:Acoustid Fingerprint":"acoustid_fingerprint","TXXX:MusicIP PUID":"musicip_puid","TXXX:MusicMagic Fingerprint":"musicip_fingerprint",WOAR:"website",TDRC:"date",TYER:"year",TDOR:"originaldate","TIPL:arranger":"arranger","TIPL:engineer":"engineer","TIPL:producer":"producer","TIPL:DJ-mix":"djmixer","TIPL:mix":"mixer",TMOO:"mood",SYLT:"lyrics",TSST:"discsubtitle",TKEY:"key",COMM:"comment",TOPE:"originalartist","PRIV:AverageLevel":"averageLevel","PRIV:PeakLevel":"peakLevel","TXXX:DISCOGS_ARTIST_ID":"discogs_artist_id","TXXX:DISCOGS_ARTISTS":"artists","TXXX:DISCOGS_ARTIST_NAME":"artists","TXXX:DISCOGS_ALBUM_ARTISTS":"albumartist","TXXX:DISCOGS_CATALOG":"catalognumber","TXXX:DISCOGS_COUNTRY":"releasecountry","TXXX:DISCOGS_DATE":"originaldate","TXXX:DISCOGS_LABEL":"label","TXXX:DISCOGS_LABEL_ID":"discogs_label_id","TXXX:DISCOGS_MASTER_RELEASE_ID":"discogs_master_release_id","TXXX:DISCOGS_RATING":"discogs_rating","TXXX:DISCOGS_RELEASED":"date","TXXX:DISCOGS_RELEASE_ID":"discogs_release_id","TXXX:DISCOGS_VOTES":"discogs_votes","TXXX:CATALOGID":"catalognumber","TXXX:STYLE":"genre","TXXX:REPLAYGAIN_TRACK_PEAK":"replaygain_track_peak","TXXX:REPLAYGAIN_TRACK_GAIN":"replaygain_track_gain","TXXX:REPLAYGAIN_ALBUM_PEAK":"replaygain_album_peak","TXXX:REPLAYGAIN_ALBUM_GAIN":"replaygain_album_gain","TXXX:MP3GAIN_MINMAX":"replaygain_track_minmax","TXXX:MP3GAIN_ALBUM_MINMAX":"replaygain_album_minmax","TXXX:MP3GAIN_UNDO":"replaygain_undo",MVNM:"movement",MVIN:"movementIndex",PCST:"podcast",TCAT:"category",TDES:"description",TDRL:"date",TGID:"podcastId",TKWD:"keywords",WFED:"podcasturl"};class ID3v24TagMapper extends CaseInsensitiveTagMap_1$2.CaseInsensitiveTagMap{static toRating(e){return{source:e.email,rating:e.rating>0?(e.rating-1)/254*GenericTagMapper_1$3.CommonTagMapper.maxRatingScore:void 0}}constructor(){super(["ID3v2.3","ID3v2.4"],id3v24TagMap)}postMap(e,t){switch(e.id){case"UFID":"http://musicbrainz.org"===e.value.owner_identifier&&(e.id+=":"+e.value.owner_identifier,e.value=util$a.decodeString(e.value.identifier,"latin1"));break;case"PRIV":switch(e.value.owner_identifier){case"AverageLevel":case"PeakValue":e.id+=":"+e.value.owner_identifier,e.value=4===e.value.data.length?e.value.data.readUInt32LE(0):null,null===e.value&&t.addWarning("Failed to parse PRIV:PeakValue");break;default:t.addWarning(`Unknown PRIV owner-identifier: ${e.value.owner_identifier}`)}break;case"COMM":e.value=e.value?e.value.text:null;break;case"POPM":e.value=ID3v24TagMapper.toRating(e.value)}}}ID3v24TagMapper$1.ID3v24TagMapper=ID3v24TagMapper;var AsfTagMapper$1={};Object.defineProperty(AsfTagMapper$1,"t",{value:!0}),AsfTagMapper$1.AsfTagMapper=void 0;const GenericTagMapper_1$2=GenericTagMapper,asfTagMap={Title:"title",Author:"artist","WM/AlbumArtist":"albumartist","WM/AlbumTitle":"album","WM/Year":"date","WM/OriginalReleaseTime":"originaldate","WM/OriginalReleaseYear":"originalyear",Description:"comment","WM/TrackNumber":"track","WM/PartOfSet":"disk","WM/Genre":"genre","WM/Composer":"composer","WM/Lyrics":"lyrics","WM/AlbumSortOrder":"albumsort","WM/TitleSortOrder":"titlesort","WM/ArtistSortOrder":"artistsort","WM/AlbumArtistSortOrder":"albumartistsort","WM/ComposerSortOrder":"composersort","WM/Writer":"lyricist","WM/Conductor":"conductor","WM/ModifiedBy":"remixer","WM/Engineer":"engineer","WM/Producer":"producer","WM/DJMixer":"djmixer","WM/Mixer":"mixer","WM/Publisher":"label","WM/ContentGroupDescription":"grouping","WM/SubTitle":"subtitle","WM/SetSubTitle":"discsubtitle","WM/IsCompilation":"compilation","WM/SharedUserRating":"rating","WM/BeatsPerMinute":"bpm","WM/Mood":"mood","WM/Media":"media","WM/CatalogNo":"catalognumber","MusicBrainz/Album Status":"releasestatus","MusicBrainz/Album Type":"releasetype","MusicBrainz/Album Release Country":"releasecountry","WM/Script":"script","WM/Language":"language",Copyright:"copyright",LICENSE:"license","WM/EncodedBy":"encodedby","WM/EncodingSettings":"encodersettings","WM/Barcode":"barcode","WM/ISRC":"isrc","MusicBrainz/Track Id":"musicbrainz_recordingid","MusicBrainz/Release Track Id":"musicbrainz_trackid","MusicBrainz/Album Id":"musicbrainz_albumid","MusicBrainz/Artist Id":"musicbrainz_artistid","MusicBrainz/Album Artist Id":"musicbrainz_albumartistid","MusicBrainz/Release Group Id":"musicbrainz_releasegroupid","MusicBrainz/Work Id":"musicbrainz_workid","MusicBrainz/TRM Id":"musicbrainz_trmid","MusicBrainz/Disc Id":"musicbrainz_discid","Acoustid/Id":"acoustid_id","Acoustid/Fingerprint":"acoustid_fingerprint","MusicIP/PUID":"musicip_puid","WM/ARTISTS":"artists","WM/InitialKey":"key",ASIN:"asin","WM/Work":"work","WM/AuthorURL":"website","WM/Picture":"picture"};class AsfTagMapper extends GenericTagMapper_1$2.CommonTagMapper{static toRating(e){return{rating:parseFloat(e+1)/5}}constructor(){super(["asf"],asfTagMap)}postMap(e){if("WM/SharedUserRating"===e.id){const t=e.id.split(":");e.value=AsfTagMapper.toRating(e.value),e.id=t[0]}}}AsfTagMapper$1.AsfTagMapper=AsfTagMapper;var ID3v22TagMapper={};!function(e){Object.defineProperty(e,"t",{value:!0}),e.ID3v22TagMapper=e.id3v22TagMap=void 0;const t=CaseInsensitiveTagMap$1;e.id3v22TagMap={TT2:"title",TP1:"artist",TP2:"albumartist",TAL:"album",TYE:"year",COM:"comment",TRK:"track",TPA:"disk",TCO:"genre",PIC:"picture",TCM:"composer",TOR:"originaldate",TOT:"originalalbum",TXT:"lyricist",TP3:"conductor",TPB:"label",TT1:"grouping",TT3:"subtitle",TLA:"language",TCR:"copyright",WCP:"license",TEN:"encodedby",TSS:"encodersettings",WAR:"website","COM:iTunPGAP":"gapless",PCS:"podcast",TCP:"compilation",TDR:"date",TS2:"albumartistsort",TSA:"albumsort",TSC:"composersort",TSP:"artistsort",TST:"titlesort",WFD:"podcasturl",TBP:"bpm"};class r extends t.CaseInsensitiveTagMap{constructor(){super(["ID3v2.2"],e.id3v22TagMap)}}e.ID3v22TagMapper=r}(ID3v22TagMapper);var APEv2TagMapper$1={};Object.defineProperty(APEv2TagMapper$1,"t",{value:!0}),APEv2TagMapper$1.APEv2TagMapper=void 0;const CaseInsensitiveTagMap_1$1=CaseInsensitiveTagMap$1,apev2TagMap={Title:"title",Artist:"artist",Artists:"artists","Album Artist":"albumartist",Album:"album",Year:"date",Originalyear:"originalyear",Originaldate:"originaldate",Comment:"comment",Track:"track",Disc:"disk",DISCNUMBER:"disk",Genre:"genre","Cover Art (Front)":"picture","Cover Art (Back)":"picture",Composer:"composer",Lyrics:"lyrics",ALBUMSORT:"albumsort",TITLESORT:"titlesort",WORK:"work",ARTISTSORT:"artistsort",ALBUMARTISTSORT:"albumartistsort",COMPOSERSORT:"composersort",Lyricist:"lyricist",Writer:"writer",Conductor:"conductor",MixArtist:"remixer",Arranger:"arranger",Engineer:"engineer",Producer:"producer",DJMixer:"djmixer",Mixer:"mixer",Label:"label",Grouping:"grouping",Subtitle:"subtitle",DiscSubtitle:"discsubtitle",Compilation:"compilation",BPM:"bpm",Mood:"mood",Media:"media",CatalogNumber:"catalognumber",MUSICBRAINZ_ALBUMSTATUS:"releasestatus",MUSICBRAINZ_ALBUMTYPE:"releasetype",RELEASECOUNTRY:"releasecountry",Script:"script",Language:"language",Copyright:"copyright",LICENSE:"license",EncodedBy:"encodedby",EncoderSettings:"encodersettings",Barcode:"barcode",ISRC:"isrc",ASIN:"asin",musicbrainz_trackid:"musicbrainz_recordingid",musicbrainz_releasetrackid:"musicbrainz_trackid",MUSICBRAINZ_ALBUMID:"musicbrainz_albumid",MUSICBRAINZ_ARTISTID:"musicbrainz_artistid",MUSICBRAINZ_ALBUMARTISTID:"musicbrainz_albumartistid",MUSICBRAINZ_RELEASEGROUPID:"musicbrainz_releasegroupid",MUSICBRAINZ_WORKID:"musicbrainz_workid",MUSICBRAINZ_TRMID:"musicbrainz_trmid",MUSICBRAINZ_DISCID:"musicbrainz_discid",Acoustid_Id:"acoustid_id",ACOUSTID_FINGERPRINT:"acoustid_fingerprint",MUSICIP_PUID:"musicip_puid",Weblink:"website",REPLAYGAIN_TRACK_GAIN:"replaygain_track_gain",REPLAYGAIN_TRACK_PEAK:"replaygain_track_peak",MP3GAIN_MINMAX:"replaygain_track_minmax",MP3GAIN_UNDO:"replaygain_undo"};class APEv2TagMapper extends CaseInsensitiveTagMap_1$1.CaseInsensitiveTagMap{constructor(){super(["APEv2"],apev2TagMap)}}APEv2TagMapper$1.APEv2TagMapper=APEv2TagMapper;var MP4TagMapper={};!function(e){Object.defineProperty(e,"t",{value:!0}),e.MP4TagMapper=e.tagType=void 0;const t=CaseInsensitiveTagMap$1,r={"©nam":"title","©ART":"artist",aART:"albumartist","----:com.apple.iTunes:Band":"albumartist","©alb":"album","©day":"date","©cmt":"comment","©com":"comment",trkn:"track",disk:"disk","©gen":"genre",covr:"picture","©wrt":"composer","©lyr":"lyrics",soal:"albumsort",sonm:"titlesort",soar:"artistsort",soaa:"albumartistsort",soco:"composersort","----:com.apple.iTunes:LYRICIST":"lyricist","----:com.apple.iTunes:CONDUCTOR":"conductor","----:com.apple.iTunes:REMIXER":"remixer","----:com.apple.iTunes:ENGINEER":"engineer","----:com.apple.iTunes:PRODUCER":"producer","----:com.apple.iTunes:DJMIXER":"djmixer","----:com.apple.iTunes:MIXER":"mixer","----:com.apple.iTunes:LABEL":"label","©grp":"grouping","----:com.apple.iTunes:SUBTITLE":"subtitle","----:com.apple.iTunes:DISCSUBTITLE":"discsubtitle",cpil:"compilation",tmpo:"bpm","----:com.apple.iTunes:MOOD":"mood","----:com.apple.iTunes:MEDIA":"media","----:com.apple.iTunes:CATALOGNUMBER":"catalognumber",tvsh:"tvShow",tvsn:"tvSeason",tves:"tvEpisode",sosn:"tvShowSort",tven:"tvEpisodeId",tvnn:"tvNetwork",pcst:"podcast",purl:"podcasturl","----:com.apple.iTunes:MusicBrainz Album Status":"releasestatus","----:com.apple.iTunes:MusicBrainz Album Type":"releasetype","----:com.apple.iTunes:MusicBrainz Album Release Country":"releasecountry","----:com.apple.iTunes:SCRIPT":"script","----:com.apple.iTunes:LANGUAGE":"language",cprt:"copyright","©cpy":"copyright","----:com.apple.iTunes:LICENSE":"license","©too":"encodedby",pgap:"gapless","----:com.apple.iTunes:BARCODE":"barcode","----:com.apple.iTunes:ISRC":"isrc","----:com.apple.iTunes:ASIN":"asin","----:com.apple.iTunes:NOTES":"comment","----:com.apple.iTunes:MusicBrainz Track Id":"musicbrainz_recordingid","----:com.apple.iTunes:MusicBrainz Release Track Id":"musicbrainz_trackid","----:com.apple.iTunes:MusicBrainz Album Id":"musicbrainz_albumid","----:com.apple.iTunes:MusicBrainz Artist Id":"musicbrainz_artistid","----:com.apple.iTunes:MusicBrainz Album Artist Id":"musicbrainz_albumartistid","----:com.apple.iTunes:MusicBrainz Release Group Id":"musicbrainz_releasegroupid","----:com.apple.iTunes:MusicBrainz Work Id":"musicbrainz_workid","----:com.apple.iTunes:MusicBrainz TRM Id":"musicbrainz_trmid","----:com.apple.iTunes:MusicBrainz Disc Id":"musicbrainz_discid","----:com.apple.iTunes:Acoustid Id":"acoustid_id","----:com.apple.iTunes:Acoustid Fingerprint":"acoustid_fingerprint","----:com.apple.iTunes:MusicIP PUID":"musicip_puid","----:com.apple.iTunes:fingerprint":"musicip_fingerprint","----:com.apple.iTunes:replaygain_track_gain":"replaygain_track_gain","----:com.apple.iTunes:replaygain_track_peak":"replaygain_track_peak","----:com.apple.iTunes:replaygain_album_gain":"replaygain_album_gain","----:com.apple.iTunes:replaygain_album_peak":"replaygain_album_peak","----:com.apple.iTunes:replaygain_track_minmax":"replaygain_track_minmax","----:com.apple.iTunes:replaygain_album_minmax":"replaygain_album_minmax","----:com.apple.iTunes:replaygain_undo":"replaygain_undo",gnre:"genre","----:com.apple.iTunes:ALBUMARTISTSORT":"albumartistsort","----:com.apple.iTunes:ARTISTS":"artists","----:com.apple.iTunes:ORIGINALDATE":"originaldate","----:com.apple.iTunes:ORIGINALYEAR":"originalyear",desc:"description",ldes:"longDescription","©mvn":"movement","©mvi":"movementIndex","©mvc":"movementTotal","©wrk":"work",catg:"category",egid:"podcastId",hdvd:"hdVideo",keyw:"keywords",shwm:"showMovement",stik:"stik"};e.tagType="iTunes";class a extends t.CaseInsensitiveTagMap{constructor(){super([e.tagType],r)}}e.MP4TagMapper=a}(MP4TagMapper);var VorbisTagMapper$1={};Object.defineProperty(VorbisTagMapper$1,"t",{value:!0}),VorbisTagMapper$1.VorbisTagMapper=void 0;const GenericTagMapper_1$1=GenericTagMapper,vorbisTagMap={TITLE:"title",ARTIST:"artist",ARTISTS:"artists",ALBUMARTIST:"albumartist","ALBUM ARTIST":"albumartist",ALBUM:"album",DATE:"date",ORIGINALDATE:"originaldate",ORIGINALYEAR:"originalyear",COMMENT:"comment",TRACKNUMBER:"track",DISCNUMBER:"disk",GENRE:"genre",METADATA_BLOCK_PICTURE:"picture",COMPOSER:"composer",LYRICS:"lyrics",ALBUMSORT:"albumsort",TITLESORT:"titlesort",WORK:"work",ARTISTSORT:"artistsort",ALBUMARTISTSORT:"albumartistsort",COMPOSERSORT:"composersort",LYRICIST:"lyricist",WRITER:"writer",CONDUCTOR:"conductor",REMIXER:"remixer",ARRANGER:"arranger",ENGINEER:"engineer",PRODUCER:"producer",DJMIXER:"djmixer",MIXER:"mixer",LABEL:"label",GROUPING:"grouping",SUBTITLE:"subtitle",DISCSUBTITLE:"discsubtitle",TRACKTOTAL:"totaltracks",DISCTOTAL:"totaldiscs",COMPILATION:"compilation",RATING:"rating",BPM:"bpm",KEY:"key",MOOD:"mood",MEDIA:"media",CATALOGNUMBER:"catalognumber",RELEASESTATUS:"releasestatus",RELEASETYPE:"releasetype",RELEASECOUNTRY:"releasecountry",SCRIPT:"script",LANGUAGE:"language",COPYRIGHT:"copyright",LICENSE:"license",ENCODEDBY:"encodedby",ENCODERSETTINGS:"encodersettings",BARCODE:"barcode",ISRC:"isrc",ASIN:"asin",MUSICBRAINZ_TRACKID:"musicbrainz_recordingid",MUSICBRAINZ_RELEASETRACKID:"musicbrainz_trackid",MUSICBRAINZ_ALBUMID:"musicbrainz_albumid",MUSICBRAINZ_ARTISTID:"musicbrainz_artistid",MUSICBRAINZ_ALBUMARTISTID:"musicbrainz_albumartistid",MUSICBRAINZ_RELEASEGROUPID:"musicbrainz_releasegroupid",MUSICBRAINZ_WORKID:"musicbrainz_workid",MUSICBRAINZ_TRMID:"musicbrainz_trmid",MUSICBRAINZ_DISCID:"musicbrainz_discid",ACOUSTID_ID:"acoustid_id",ACOUSTID_ID_FINGERPRINT:"acoustid_fingerprint",MUSICIP_PUID:"musicip_puid",WEBSITE:"website",NOTES:"notes",TOTALTRACKS:"totaltracks",TOTALDISCS:"totaldiscs",DISCOGS_ARTIST_ID:"discogs_artist_id",DISCOGS_ARTISTS:"artists",DISCOGS_ARTIST_NAME:"artists",DISCOGS_ALBUM_ARTISTS:"albumartist",DISCOGS_CATALOG:"catalognumber",DISCOGS_COUNTRY:"releasecountry",DISCOGS_DATE:"originaldate",DISCOGS_LABEL:"label",DISCOGS_LABEL_ID:"discogs_label_id",DISCOGS_MASTER_RELEASE_ID:"discogs_master_release_id",DISCOGS_RATING:"discogs_rating",DISCOGS_RELEASED:"date",DISCOGS_RELEASE_ID:"discogs_release_id",DISCOGS_VOTES:"discogs_votes",CATALOGID:"catalognumber",STYLE:"genre",REPLAYGAIN_TRACK_GAIN:"replaygain_track_gain",REPLAYGAIN_TRACK_PEAK:"replaygain_track_peak",REPLAYGAIN_ALBUM_GAIN:"replaygain_album_gain",REPLAYGAIN_ALBUM_PEAK:"replaygain_album_peak",REPLAYGAIN_MINMAX:"replaygain_track_minmax",REPLAYGAIN_ALBUM_MINMAX:"replaygain_album_minmax",REPLAYGAIN_UNDO:"replaygain_undo"};class VorbisTagMapper extends GenericTagMapper_1$1.CommonTagMapper{static toRating(e,t){return{source:e?e.toLowerCase():e,rating:parseFloat(t)*GenericTagMapper_1$1.CommonTagMapper.maxRatingScore}}constructor(){super(["vorbis"],vorbisTagMap)}postMap(e){if(0===e.id.indexOf("RATING:")){const t=e.id.split(":");e.value=VorbisTagMapper.toRating(t[1],e.value),e.id=t[0]}}}VorbisTagMapper$1.VorbisTagMapper=VorbisTagMapper;var RiffInfoTagMap={};!function(e){Object.defineProperty(e,"t",{value:!0}),e.RiffInfoTagMapper=e.riffInfoTagMap=void 0;const t=GenericTagMapper;e.riffInfoTagMap={IART:"artist",ICRD:"date",INAM:"title",TITL:"title",IPRD:"album",ITRK:"track",COMM:"comment",ICMT:"comment",ICNT:"releasecountry",GNRE:"genre",IWRI:"writer",RATE:"rating",YEAR:"year",ISFT:"encodedby",CODE:"encodedby",TURL:"website",IGNR:"genre",IENG:"engineer",ITCH:"technician",IMED:"media",IRPD:"album"};class r extends t.CommonTagMapper{constructor(){super(["exif"],e.riffInfoTagMap)}}e.RiffInfoTagMapper=r}(RiffInfoTagMap);var MatroskaTagMapper$1={};Object.defineProperty(MatroskaTagMapper$1,"t",{value:!0}),MatroskaTagMapper$1.MatroskaTagMapper=void 0;const CaseInsensitiveTagMap_1=CaseInsensitiveTagMap$1,ebmlTagMap={"segment:title":"title","album:ARTIST":"albumartist","album:ARTISTSORT":"albumartistsort","album:TITLE":"album","album:DATE_RECORDED":"originaldate","album:PART_NUMBER":"disk","album:TOTAL_PARTS":"totaltracks","track:ARTIST":"artist","track:ARTISTSORT":"artistsort","track:TITLE":"title","track:PART_NUMBER":"track","track:MUSICBRAINZ_TRACKID":"musicbrainz_recordingid","track:MUSICBRAINZ_ALBUMID":"musicbrainz_albumid","track:MUSICBRAINZ_ARTISTID":"musicbrainz_artistid","track:PUBLISHER":"label","track:GENRE":"genre","track:ENCODER":"encodedby","track:ENCODER_OPTIONS":"encodersettings","edition:TOTAL_PARTS":"totaldiscs",picture:"picture"};class MatroskaTagMapper extends CaseInsensitiveTagMap_1.CaseInsensitiveTagMap{constructor(){super(["matroska"],ebmlTagMap)}}MatroskaTagMapper$1.MatroskaTagMapper=MatroskaTagMapper,Object.defineProperty(CombinedTagMapper$1,"t",{value:!0}),CombinedTagMapper$1.CombinedTagMapper=void 0;const ID3v1TagMap_1=ID3v1TagMap,ID3v24TagMapper_1=ID3v24TagMapper$1,AsfTagMapper_1=AsfTagMapper$1,ID3v22TagMapper_1=ID3v22TagMapper,APEv2TagMapper_1=APEv2TagMapper$1,MP4TagMapper_1=MP4TagMapper,VorbisTagMapper_1=VorbisTagMapper$1,RiffInfoTagMap_1=RiffInfoTagMap,MatroskaTagMapper_1=MatroskaTagMapper$1;class CombinedTagMapper{constructor(){this.tagMappers={},[new ID3v1TagMap_1.ID3v1TagMapper,new ID3v22TagMapper_1.ID3v22TagMapper,new ID3v24TagMapper_1.ID3v24TagMapper,new MP4TagMapper_1.MP4TagMapper,new MP4TagMapper_1.MP4TagMapper,new VorbisTagMapper_1.VorbisTagMapper,new APEv2TagMapper_1.APEv2TagMapper,new AsfTagMapper_1.AsfTagMapper,new RiffInfoTagMap_1.RiffInfoTagMapper,new MatroskaTagMapper_1.MatroskaTagMapper].forEach((e=>{this.registerTagMapper(e)}))}mapTag(e,t,r){if(this.tagMappers[e])return this.tagMappers[e].mapGenericTag(t,r);throw new Error("No generic tag mapper defined for tag-format: "+e)}registerTagMapper(e){for(const t of e.tagTypes)this.tagMappers[t]=e}}CombinedTagMapper$1.CombinedTagMapper=CombinedTagMapper,Object.defineProperty(MetadataCollector$1,"t",{value:!0}),MetadataCollector$1.joinArtists=MetadataCollector$1.MetadataCollector=void 0;const type_1$2=type,debug_1$n=browser.exports,GenericTagTypes_1=GenericTagTypes,CombinedTagMapper_1=CombinedTagMapper$1,GenericTagMapper_1=GenericTagMapper,Util_1=Util,FileType$1=core,debug$n=(0,debug_1$n.default)("music-metadata:collector"),TagPriority=["matroska","APEv2","vorbis","ID3v2.4","ID3v2.3","ID3v2.2","exif","asf","iTunes","ID3v1"];class MetadataCollector{constructor(e){this.opts=e,this.format={tagTypes:[],trackInfo:[]},this.native={},this.common={track:{no:null,of:null},disk:{no:null,of:null},movementIndex:{}},this.quality={warnings:[]},this.commonOrigin={},this.originPriority={},this.tagMapper=new CombinedTagMapper_1.CombinedTagMapper;let t=1;for(const r of TagPriority)this.originPriority[r]=t++;this.originPriority.artificial=500,this.originPriority.id3v1=600}hasAny(){return Object.keys(this.native).length>0}addStreamInfo(e){debug$n(`streamInfo: type=${type_1$2.TrackType[e.type]}, codec=${e.codecName}`),this.format.trackInfo.push(e)}setFormat(e,t){debug$n(`format: ${e} = ${t}`),this.format[e]=t,this.opts.observer&&this.opts.observer({metadata:this,tag:{type:"format",id:e,value:t}})}addTag(e,t,r){debug$n(`tag ${e}.${t} = ${r}`),this.native[e]||(this.format.tagTypes.push(e),this.native[e]=[]),this.native[e].push({id:t,value:r}),this.toCommon(e,t,r)}addWarning(e){this.quality.warnings.push({message:e})}postMap(e,t){switch(t.id){case"artist":if(this.commonOrigin.artist===this.originPriority[e])return this.postMap("artificial",{id:"artists",value:t.value});this.common.artists||this.setGenericTag("artificial",{id:"artists",value:t.value});break;case"artists":if(!(this.common.artist&&this.commonOrigin.artist!==this.originPriority.artificial||this.common.artists&&-1!==this.common.artists.indexOf(t.value))){const e={id:"artist",value:joinArtists((this.common.artists||[]).concat([t.value]))};this.setGenericTag("artificial",e)}break;case"picture":return void this.postFixPicture(t.value).then((r=>{null!==r&&(t.value=r,this.setGenericTag(e,t))}));case"totaltracks":return void(this.common.track.of=GenericTagMapper_1.CommonTagMapper.toIntOrNull(t.value));case"totaldiscs":return void(this.common.disk.of=GenericTagMapper_1.CommonTagMapper.toIntOrNull(t.value));case"movementTotal":return void(this.common.movementIndex.of=GenericTagMapper_1.CommonTagMapper.toIntOrNull(t.value));case"track":case"disk":case"movementIndex":const r=this.common[t.id].of;return this.common[t.id]=GenericTagMapper_1.CommonTagMapper.normalizeTrack(t.value),void(this.common[t.id].of=null!=r?r:this.common[t.id].of);case"bpm":case"year":case"originalyear":t.value=parseInt(t.value,10);break;case"date":const a=parseInt(t.value.substr(0,4),10);isNaN(a)||(this.common.year=a);break;case"discogs_label_id":case"discogs_release_id":case"discogs_master_release_id":case"discogs_artist_id":case"discogs_votes":t.value="string"==typeof t.value?parseInt(t.value,10):t.value;break;case"replaygain_track_gain":case"replaygain_track_peak":case"replaygain_album_gain":case"replaygain_album_peak":t.value=(0,Util_1.toRatio)(t.value);break;case"replaygain_track_minmax":t.value=t.value.split(",").map((e=>parseInt(e,10)));break;case"replaygain_undo":const i=t.value.split(",").map((e=>parseInt(e,10)));t.value={leftChannel:i[0],rightChannel:i[1]};break;case"gapless":case"compilation":case"podcast":case"showMovement":t.value="1"===t.value||1===t.value;break;case"isrc":if(this.common[t.id]&&-1!==this.common[t.id].indexOf(t.value))return}null!==t.value&&this.setGenericTag(e,t)}toCommonMetadata(){return{format:this.format,native:this.native,quality:this.quality,common:this.common}}async postFixPicture(e){if(e.data&&e.data.length>0){if(!e.format){const t=await FileType$1.fromBuffer(e.data);if(!t)return null;e.format=t.mime}return e.format=e.format.toLocaleLowerCase(),"image/jpg"===e.format&&(e.format="image/jpeg"),e}return this.addWarning("Empty picture tag found"),null}toCommon(e,t,r){const a={id:t,value:r},i=this.tagMapper.mapTag(e,a,this);i&&this.postMap(e,i)}setGenericTag(e,t){debug$n(`common.${t.id} = ${t.value}`);const r=this.commonOrigin[t.id]||1e3,a=this.originPriority[e];if((0,GenericTagTypes_1.isSingleton)(t.id)){if(!(a<=r))return debug$n(`Ignore native tag (singleton): ${e}.${t.id} = ${t.value}`);this.common[t.id]=t.value,this.commonOrigin[t.id]=a}else if(a===r)(0,GenericTagTypes_1.isUnique)(t.id)&&-1!==this.common[t.id].indexOf(t.value)?debug$n(`Ignore duplicate value: ${e}.${t.id} = ${t.value}`):this.common[t.id].push(t.value);else{if(!(a<r))return debug$n(`Ignore native tag (list): ${e}.${t.id} = ${t.value}`);this.common[t.id]=[t.value],this.commonOrigin[t.id]=a}this.opts.observer&&this.opts.observer({metadata:this,tag:{type:"common",id:t.id,value:t.value}})}}function joinArtists(e){return e.length>2?e.slice(0,e.length-1).join(", ")+" & "+e[e.length-1]:e.join(" & ")}MetadataCollector$1.MetadataCollector=MetadataCollector,MetadataCollector$1.joinArtists=joinArtists;var AiffParser={},ID3v2Parser$1={},FrameParser$1={},ID3v2Token={};!function(e){Object.defineProperty(e,"t",{value:!0}),e.TextEncodingToken=e.ExtendedHeader=e.ID3v2Header=e.UINT32SYNCSAFE=e.AttachedPictureType=void 0;const t=lib,r=Util;var a;(a=e.AttachedPictureType||(e.AttachedPictureType={}))[a.Other=0]="Other",a[a["32x32 pixels 'file icon' (PNG only)"]=1]="32x32 pixels 'file icon' (PNG only)",a[a["Other file icon"]=2]="Other file icon",a[a["Cover (front)"]=3]="Cover (front)",a[a["Cover (back)"]=4]="Cover (back)",a[a["Leaflet page"]=5]="Leaflet page",a[a["Media (e.g. label side of CD)"]=6]="Media (e.g. label side of CD)",a[a["Lead artist/lead performer/soloist"]=7]="Lead artist/lead performer/soloist",a[a["Artist/performer"]=8]="Artist/performer",a[a.Conductor=9]="Conductor",a[a["Band/Orchestra"]=10]="Band/Orchestra",a[a.Composer=11]="Composer",a[a["Lyricist/text writer"]=12]="Lyricist/text writer",a[a["Recording Location"]=13]="Recording Location",a[a["During recording"]=14]="During recording",a[a["During performance"]=15]="During performance",a[a["Movie/video screen capture"]=16]="Movie/video screen capture",a[a["A bright coloured fish"]=17]="A bright coloured fish",a[a.Illustration=18]="Illustration",a[a["Band/artist logotype"]=19]="Band/artist logotype",a[a["Publisher/Studio logotype"]=20]="Publisher/Studio logotype",e.UINT32SYNCSAFE={get:(e,t)=>127&e[t+3]|e[t+2]<<7|e[t+1]<<14|e[t]<<21,len:4},e.ID3v2Header={len:10,get:(a,i)=>({fileIdentifier:new t.StringType(3,"ascii").get(a,i),version:{major:t.INT8.get(a,i+3),revision:t.INT8.get(a,i+4)},flags:{unsynchronisation:r.getBit(a,i+5,7),isExtendedHeader:r.getBit(a,i+5,6),expIndicator:r.getBit(a,i+5,5),footer:r.getBit(a,i+5,4)},size:e.UINT32SYNCSAFE.get(a,i+6)})},e.ExtendedHeader={len:10,get:(e,a)=>({size:t.UINT32_BE.get(e,a),extendedFlags:t.UINT16_BE.get(e,a+4),sizeOfPadding:t.UINT32_BE.get(e,a+6),crcDataPresent:r.getBit(e,a+4,31)})},e.TextEncodingToken={len:1,get:(e,t)=>{switch(e[t]){case 0:return{encoding:"latin1"};case 1:return{encoding:"utf16le",bom:!0};case 2:return{encoding:"utf16le",bom:!1};default:return{encoding:"utf8",bom:!1}}}}}(ID3v2Token);var ID3v1Parser={},BasicParser$1={};Object.defineProperty(BasicParser$1,"t",{value:!0}),BasicParser$1.BasicParser=void 0;class BasicParser{init(e,t,r){return this.metadata=e,this.tokenizer=t,this.options=r,this}}BasicParser$1.BasicParser=BasicParser;var APEv2Parser$1={},APEv2Token={},FourCC={};!function(e){Object.defineProperty(e,"t",{value:!0}),e.FourCcToken=void 0;const t=Util,r=/^[\x21-\x7e©][\x20-\x7e\x00()]{3}/;e.FourCcToken={len:4,get:(a,i)=>{const s=a.toString("binary",i,i+e.FourCcToken.len);if(!s.match(r))throw new Error(`FourCC contains invalid characters: ${t.a2hex(s)} "${s}"`);return s},put:(e,t,r)=>{const a=Buffer.from(r,"binary");if(4!==a.length)throw new Error("Invalid length");return a.copy(e,t)}}}(FourCC),function(e){Object.defineProperty(e,"t",{value:!0}),e.isBitSet=e.parseTagFlags=e.TagField=e.TagItemHeader=e.TagFooter=e.Header=e.DescriptorParser=e.DataType=void 0;const t=lib,r=FourCC;function a(e){return{containsHeader:i(e,31),containsFooter:i(e,30),isHeader:i(e,31),readOnly:i(e,0),dataType:(6&e)>>1}}function i(e,t){return 0!=(e&1<<t)}!function(e){e[e.text_utf8=0]="text_utf8",e[e.binary=1]="binary",e[e.external_info=2]="external_info",e[e.reserved=3]="reserved"}(e.DataType||(e.DataType={})),e.DescriptorParser={len:52,get:(e,a)=>({ID:r.FourCcToken.get(e,a),version:t.UINT32_LE.get(e,a+4)/1e3,descriptorBytes:t.UINT32_LE.get(e,a+8),headerBytes:t.UINT32_LE.get(e,a+12),seekTableBytes:t.UINT32_LE.get(e,a+16),headerDataBytes:t.UINT32_LE.get(e,a+20),apeFrameDataBytes:t.UINT32_LE.get(e,a+24),apeFrameDataBytesHigh:t.UINT32_LE.get(e,a+28),terminatingDataBytes:t.UINT32_LE.get(e,a+32),fileMD5:new t.Uint8ArrayType(16).get(e,a+36)})},e.Header={len:24,get:(e,r)=>({compressionLevel:t.UINT16_LE.get(e,r),formatFlags:t.UINT16_LE.get(e,r+2),blocksPerFrame:t.UINT32_LE.get(e,r+4),finalFrameBlocks:t.UINT32_LE.get(e,r+8),totalFrames:t.UINT32_LE.get(e,r+12),bitsPerSample:t.UINT16_LE.get(e,r+16),channel:t.UINT16_LE.get(e,r+18),sampleRate:t.UINT32_LE.get(e,r+20)})},e.TagFooter={len:32,get:(e,r)=>({ID:new t.StringType(8,"ascii").get(e,r),version:t.UINT32_LE.get(e,r+8),size:t.UINT32_LE.get(e,r+12),fields:t.UINT32_LE.get(e,r+16),flags:a(t.UINT32_LE.get(e,r+20))})},e.TagItemHeader={len:8,get:(e,r)=>({size:t.UINT32_LE.get(e,r),flags:a(t.UINT32_LE.get(e,r+4))})},e.TagField=r=>new t.Uint8ArrayType(r.size-e.TagFooter.len),e.parseTagFlags=a,e.isBitSet=i}(APEv2Token),Object.defineProperty(APEv2Parser$1,"t",{value:!0}),APEv2Parser$1.APEv2Parser=void 0;const debug_1$m=browser.exports,strtok3$4=core$2,token_types_1$2=lib,util$9=Util,BasicParser_1$b=BasicParser$1,APEv2Token_1=APEv2Token,debug$m=(0,debug_1$m.default)("music-metadata:parser:APEv2"),tagFormat$1="APEv2",preamble="APETAGEX";class APEv2Parser extends BasicParser_1$b.BasicParser{constructor(){super(...arguments),this.ape={}}static tryParseApeHeader(e,t,r){const a=new APEv2Parser;return a.init(e,t,r),a.tryParseApeHeader()}static calculateDuration(e){let t=e.totalFrames>1?e.blocksPerFrame*(e.totalFrames-1):0;return t+=e.finalFrameBlocks,t/e.sampleRate}static async findApeFooterOffset(e,t){const r=Buffer.alloc(APEv2Token_1.TagFooter.len);await e.randomRead(r,0,APEv2Token_1.TagFooter.len,t-APEv2Token_1.TagFooter.len);const a=APEv2Token_1.TagFooter.get(r,0);if("APETAGEX"===a.ID)return debug$m(`APE footer header at offset=${t}`),{footer:a,offset:t-a.size}}static parseTagFooter(e,t,r){const a=APEv2Token_1.TagFooter.get(t,t.length-APEv2Token_1.TagFooter.len);if(a.ID!==preamble)throw new Error("Unexpected APEv2 Footer ID preamble value.");strtok3$4.fromBuffer(t);const i=new APEv2Parser;return i.init(e,strtok3$4.fromBuffer(t),r),i.parseTags(a)}async tryParseApeHeader(){if(this.tokenizer.fileInfo.size&&this.tokenizer.fileInfo.size-this.tokenizer.position<APEv2Token_1.TagFooter.len)return void debug$m("No APEv2 header found, end-of-file reached");const e=await this.tokenizer.peekToken(APEv2Token_1.TagFooter);if(e.ID===preamble)return await this.tokenizer.ignore(APEv2Token_1.TagFooter.len),this.parseTags(e);if(debug$m(`APEv2 header not found at offset=${this.tokenizer.position}`),this.tokenizer.fileInfo.size){const e=this.tokenizer.fileInfo.size-this.tokenizer.position,t=Buffer.alloc(e);return await this.tokenizer.readBuffer(t),APEv2Parser.parseTagFooter(this.metadata,t,this.options)}}async parse(){const e=await this.tokenizer.readToken(APEv2Token_1.DescriptorParser);if("MAC "!==e.ID)throw new Error("Unexpected descriptor ID");this.ape.descriptor=e;const t=e.descriptorBytes-APEv2Token_1.DescriptorParser.len,r=await(t>0?this.parseDescriptorExpansion(t):this.parseHeader());return await this.tokenizer.ignore(r.forwardBytes),this.tryParseApeHeader()}async parseTags(e){const t=Buffer.alloc(256);let r=e.size-APEv2Token_1.TagFooter.len;debug$m(`Parse APE tags at offset=${this.tokenizer.position}, size=${r}`);for(let a=0;a<e.fields;a++){if(r<APEv2Token_1.TagItemHeader.len){this.metadata.addWarning(`APEv2 Tag-header: ${e.fields-a} items remaining, but no more tag data to read.`);break}const i=await this.tokenizer.readToken(APEv2Token_1.TagItemHeader);r-=APEv2Token_1.TagItemHeader.len+i.size,await this.tokenizer.peekBuffer(t,{length:Math.min(t.length,r)});let s=util$9.findZero(t,0,t.length);const n=await this.tokenizer.readToken(new token_types_1$2.StringType(s,"ascii"));switch(await this.tokenizer.ignore(1),r-=n.length+1,i.flags.dataType){case APEv2Token_1.DataType.text_utf8:{const e=(await this.tokenizer.readToken(new token_types_1$2.StringType(i.size,"utf8"))).split(/\x00/g);for(const t of e)this.metadata.addTag(tagFormat$1,n,t);break}case APEv2Token_1.DataType.binary:if(this.options.skipCovers)await this.tokenizer.ignore(i.size);else{const e=Buffer.alloc(i.size);await this.tokenizer.readBuffer(e),s=util$9.findZero(e,0,e.length);const t=e.toString("utf8",0,s),r=Buffer.from(e.slice(s+1));this.metadata.addTag(tagFormat$1,n,{description:t,data:r})}break;case APEv2Token_1.DataType.external_info:debug$m(`Ignore external info ${n}`),await this.tokenizer.ignore(i.size);break;case APEv2Token_1.DataType.reserved:debug$m(`Ignore external info ${n}`),this.metadata.addWarning(`APEv2 header declares a reserved datatype for "${n}"`),await this.tokenizer.ignore(i.size)}}}async parseDescriptorExpansion(e){return await this.tokenizer.ignore(e),this.parseHeader()}async parseHeader(){const e=await this.tokenizer.readToken(APEv2Token_1.Header);return this.metadata.setFormat("lossless",!0),this.metadata.setFormat("container","Monkey's Audio"),this.metadata.setFormat("bitsPerSample",e.bitsPerSample),this.metadata.setFormat("sampleRate",e.sampleRate),this.metadata.setFormat("numberOfChannels",e.channel),this.metadata.setFormat("duration",APEv2Parser.calculateDuration(e)),{forwardBytes:this.ape.descriptor.seekTableBytes+this.ape.descriptor.headerDataBytes+this.ape.descriptor.apeFrameDataBytes+this.ape.descriptor.terminatingDataBytes}}}APEv2Parser$1.APEv2Parser=APEv2Parser,function(e){Object.defineProperty(e,"t",{value:!0}),e.hasID3v1Header=e.ID3v1Parser=e.Genres=void 0;const t=browser.exports,r=lib,a=Util,i=BasicParser$1,s=APEv2Parser$1,n=(0,t.default)("music-metadata:parser:ID3v1");e.Genres=["Blues","Classic Rock","Country","Dance","Disco","Funk","Grunge","Hip-Hop","Jazz","Metal","New Age","Oldies","Other","Pop","R&B","Rap","Reggae","Rock","Techno","Industrial","Alternative","Ska","Death Metal","Pranks","Soundtrack","Euro-Techno","Ambient","Trip-Hop","Vocal","Jazz+Funk","Fusion","Trance","Classical","Instrumental","Acid","House","Game","Sound Clip","Gospel","Noise","Alt. Rock","Bass","Soul","Punk","Space","Meditative","Instrumental Pop","Instrumental Rock","Ethnic","Gothic","Darkwave","Techno-Industrial","Electronic","Pop-Folk","Eurodance","Dream","Southern Rock","Comedy","Cult","Gangsta Rap","Top 40","Christian Rap","Pop/Funk","Jungle","Native American","Cabaret","New Wave","Psychedelic","Rave","Showtunes","Trailer","Lo-Fi","Tribal","Acid Punk","Acid Jazz","Polka","Retro","Musical","Rock & Roll","Hard Rock","Folk","Folk/Rock","National Folk","Swing","Fast-Fusion","Bebob","Latin","Revival","Celtic","Bluegrass","Avantgarde","Gothic Rock","Progressive Rock","Psychedelic Rock","Symphonic Rock","Slow Rock","Big Band","Chorus","Easy Listening","Acoustic","Humour","Speech","Chanson","Opera","Chamber Music","Sonata","Symphony","Booty Bass","Primus","Porn Groove","Satire","Slow Jam","Club","Tango","Samba","Folklore","Ballad","Power Ballad","Rhythmic Soul","Freestyle","Duet","Punk Rock","Drum Solo","A Cappella","Euro-House","Dance Hall","Goa","Drum & Bass","Club-House","Hardcore","Terror","Indie","BritPop","Negerpunk","Polsk Punk","Beat","Christian Gangsta Rap","Heavy Metal","Black Metal","Crossover","Contemporary Christian","Christian Rock","Merengue","Salsa","Thrash Metal","Anime","JPop","Synthpop","Abstract","Art Rock","Baroque","Bhangra","Big Beat","Breakbeat","Chillout","Downtempo","Dub","EBM","Eclectic","Electro","Electroclash","Emo","Experimental","Garage","Global","IDM","Illbient","Industro-Goth","Jam Band","Krautrock","Leftfield","Lounge","Math Rock","New Romantic","Nu-Breakz","Post-Punk","Post-Rock","Psytrance","Shoegaze","Space Rock","Trop Rock","World Music","Neoclassical","Audiobook","Audio Theatre","Neue Deutsche Welle","Podcast","Indie Rock","G-Funk","Dubstep","Garage Rock","Psybient"];const o={len:128,get:(e,t)=>{const a=new c(3).get(e,t);return"TAG"===a?{header:a,title:new c(30).get(e,t+3),artist:new c(30).get(e,t+33),album:new c(30).get(e,t+63),year:new c(4).get(e,t+93),comment:new c(28).get(e,t+97),zeroByte:r.UINT8.get(e,t+127),track:r.UINT8.get(e,t+126),genre:r.UINT8.get(e,t+127)}:null}};class c extends r.StringType{constructor(e){super(e,"binary")}get(e,t){let r=super.get(e,t);return r=a.trimRightNull(r),r=r.trim(),r.length>0?r:void 0}}class u extends i.BasicParser{static getGenre(t){if(t<e.Genres.length)return e.Genres[t]}async parse(){if(!this.tokenizer.fileInfo.size)return void n("Skip checking for ID3v1 because the file-size is unknown");if(this.options.apeHeader){this.tokenizer.ignore(this.options.apeHeader.offset-this.tokenizer.position);const e=new s.APEv2Parser;e.init(this.metadata,this.tokenizer,this.options),await e.parseTags(this.options.apeHeader.footer)}const e=this.tokenizer.fileInfo.size-o.len;if(this.tokenizer.position>e)return void n("Already consumed the last 128 bytes");const t=await this.tokenizer.readToken(o,e);if(t){n("ID3v1 header found at: pos=%s",this.tokenizer.fileInfo.size-o.len);for(const r of["title","artist","album","comment","track","year"])t[r]&&""!==t[r]&&this.addTag(r,t[r]);const e=u.getGenre(t.genre);e&&this.addTag("genre",e)}else n("ID3v1 header not found at: pos=%s",this.tokenizer.fileInfo.size-o.len)}addTag(e,t){this.metadata.addTag("ID3v1",e,t)}}e.ID3v1Parser=u,e.hasID3v1Header=async function(e){if(e.fileSize>=128){const t=Buffer.alloc(3);return await e.randomRead(t,0,t.length,e.fileSize-128),"TAG"===t.toString("binary")}return!1}}(ID3v1Parser),Object.defineProperty(FrameParser$1,"t",{value:!0}),FrameParser$1.FrameParser=FrameParser$1.parseGenre=void 0;const debug_1$l=browser.exports,Token$r=lib,util$8=Util,ID3v2Token_1$3=ID3v2Token,ID3v1Parser_1$3=ID3v1Parser,debug$l=(0,debug_1$l.default)("music-metadata:id3v2:frame-parser"),defaultEnc="latin1";function parseGenre(e){const t=[];let r,a="";for(const i of e)if("string"==typeof r)if("("===i&&""===r)a+="(",r=void 0;else if(")"===i){""!==a&&(t.push(a),a="");const e=parseGenreCode(r);e&&t.push(e),r=void 0}else r+=i;else"("===i?r="":a+=i;return a&&(0===t.length&&a.match(/^\d*$/)&&(a=ID3v1Parser_1$3.Genres[a]),t.push(a)),t}function parseGenreCode(e){return"RX"===e?"Remix":"CR"===e?"Cover":e.match(/^\d*$/)?ID3v1Parser_1$3.Genres[e]:void 0}FrameParser$1.parseGenre=parseGenre;class FrameParser{constructor(e,t){this.major=e,this.warningCollector=t}readData(e,t,r){if(0===e.length)return void this.warningCollector.addWarning(`id3v2.${this.major} header has empty tag type=${t}`);const{encoding:a,bom:i}=ID3v2Token_1$3.TextEncodingToken.get(e,0),s=e.length;let n=0,o=[];const c=FrameParser.getNullTerminatorLength(a);let u;const l={};switch(debug$l(`Parsing tag type=${t}, encoding=${a}, bom=${i}`),"TXXX"!==t&&"T"===t[0]?"T*":t){case"T*":case"IPLS":case"MVIN":case"MVNM":case"PCS":case"PCST":let i;try{i=util$8.decodeString(e.slice(1),a).replace(/\x00+$/,"")}catch(f){this.warningCollector.addWarning(`id3v2.${this.major} type=${t} header has invalid string value: ${f.message}`)}switch(t){case"TMCL":case"TIPL":case"IPLS":o=this.splitValue(t,i),o=FrameParser.functionList(o);break;case"TRK":case"TRCK":case"TPOS":o=i;break;case"TCOM":case"TEXT":case"TOLY":case"TOPE":case"TPE1":case"TSRC":o=this.splitValue(t,i);break;case"TCO":case"TCON":o=this.splitValue(t,i).map((e=>parseGenre(e))).reduce(((e,t)=>e.concat(t)),[]);break;case"PCS":case"PCST":o=this.major>=4?this.splitValue(t,i):[i],o=Array.isArray(o)&&""===o[0]?1:0;break;default:o=this.major>=4?this.splitValue(t,i):[i]}break;case"TXXX":o=FrameParser.readIdentifierAndData(e,n+1,s,a),o={description:o.id,text:this.splitValue(t,util$8.decodeString(o.data,a).replace(/\x00+$/,""))};break;case"PIC":case"APIC":if(r){const t={};switch(n+=1,this.major){case 2:t.format=util$8.decodeString(e.slice(n,n+3),"latin1"),n+=3;break;case 3:case 4:u=util$8.findZero(e,n,s,defaultEnc),t.format=util$8.decodeString(e.slice(n,u),defaultEnc),n=u+1;break;default:throw new Error("Warning: unexpected major versionIndex: "+this.major)}t.format=FrameParser.fixPictureMimeType(t.format),t.type=ID3v2Token_1$3.AttachedPictureType[e[n]],n+=1,u=util$8.findZero(e,n,s,a),t.description=util$8.decodeString(e.slice(n,u),a),n=u+c,t.data=Buffer.from(e.slice(n,s)),o=t}break;case"CNT":case"PCNT":o=Token$r.UINT32_BE.get(e,0);break;case"SYLT":for(n+=7,o=[];n<s;){const t=e.slice(n,n=util$8.findZero(e,n,s,a));n+=5,o.push(util$8.decodeString(t,a))}break;case"ULT":case"USLT":case"COM":case"COMM":n+=1,l.language=util$8.decodeString(e.slice(n,n+3),defaultEnc),n+=3,u=util$8.findZero(e,n,s,a),l.description=util$8.decodeString(e.slice(n,u),a),n=u+c,l.text=util$8.decodeString(e.slice(n,s),a).replace(/\x00+$/,""),o=[l];break;case"UFID":o=FrameParser.readIdentifierAndData(e,n,s,defaultEnc),o={owner_identifier:o.id,identifier:o.data};break;case"PRIV":o=FrameParser.readIdentifierAndData(e,n,s,defaultEnc),o={owner_identifier:o.id,data:o.data};break;case"POPM":u=util$8.findZero(e,n,s,defaultEnc);const h=util$8.decodeString(e.slice(n,u),defaultEnc);n=u+1;const m=s-n;o={email:h,rating:Token$r.UINT8.get(e,n),counter:m>=5?Token$r.UINT32_BE.get(e,n+1):void 0};break;case"GEOB":{u=util$8.findZero(e,n+1,s,a);const t=util$8.decodeString(e.slice(n+1,u),defaultEnc);n=u+1,u=util$8.findZero(e,n,s-n,a);const r=util$8.decodeString(e.slice(n,u),defaultEnc);n=u+1,u=util$8.findZero(e,n,s-n,a),o={type:t,filename:r,description:util$8.decodeString(e.slice(n,u),defaultEnc),data:e.slice(n+1,s)};break}case"WCOM":case"WCOP":case"WOAF":case"WOAR":case"WOAS":case"WORS":case"WPAY":case"WPUB":o=util$8.decodeString(e.slice(n,u),defaultEnc);break;case"WXXX":{u=util$8.findZero(e,n+1,s,a);const t=util$8.decodeString(e.slice(n+1,u),a);n=u+("utf16le"===a?2:1),o={description:t,url:util$8.decodeString(e.slice(n,s),defaultEnc)};break}case"WFD":case"WFED":o=util$8.decodeString(e.slice(n+1,util$8.findZero(e,n+1,s,a)),a);break;case"MCDI":o=e.slice(0,s);break;default:debug$l("Warning: unsupported id3v2-tag-type: "+t)}return o}static fixPictureMimeType(e){switch(e=e.toLocaleLowerCase()){case"jpg":return"image/jpeg";case"png":return"image/png"}return e}static functionList(e){const t={};for(let r=0;r+1<e.length;r+=2){const a=e[r+1].split(",");t[e[r]]=t.hasOwnProperty(e[r])?t[e[r]].concat(a):a}return t}splitValue(e,t){let r;return this.major<4?(r=t.split(/\x00/g),r.length>1?this.warningCollector.addWarning(`ID3v2.${this.major} ${e} uses non standard null-separator.`):r=t.split(/\//g)):r=t.split(/\x00/g),FrameParser.trimArray(r)}static trimArray(e){return e.map((e=>e.replace(/\x00+$/,"").trim()))}static readIdentifierAndData(e,t,r,a){const i=util$8.findZero(e,t,r,a),s=util$8.decodeString(e.slice(t,i),a);return t=i+FrameParser.getNullTerminatorLength(a),{id:s,data:e.slice(t,r)}}static getNullTerminatorLength(e){return"utf16le"===e?2:1}}FrameParser$1.FrameParser=FrameParser,Object.defineProperty(ID3v2Parser$1,"t",{value:!0}),ID3v2Parser$1.ID3v2Parser=void 0;const Token$q=lib,util$7=Util,FrameParser_1=FrameParser$1,ID3v2Token_1$2=ID3v2Token;class ID3v2Parser{static removeUnsyncBytes(e){let t=0,r=0;for(;t<e.length-1;)t!==r&&(e[r]=e[t]),t+=255===e[t]&&0===e[t+1]?2:1,r++;return t<e.length&&(e[r++]=e[t]),e.slice(0,r)}static getFrameHeaderLength(e){switch(e){case 2:return 6;case 3:case 4:return 10;default:throw new Error("header versionIndex is incorrect")}}static readFrameFlags(e){return{status:{tag_alter_preservation:util$7.getBit(e,0,6),file_alter_preservation:util$7.getBit(e,0,5),read_only:util$7.getBit(e,0,4)},format:{grouping_identity:util$7.getBit(e,1,7),compression:util$7.getBit(e,1,3),encryption:util$7.getBit(e,1,2),unsynchronisation:util$7.getBit(e,1,1),data_length_indicator:util$7.getBit(e,1,0)}}}static readFrameData(e,t,r,a,i){const s=new FrameParser_1.FrameParser(r,i);switch(r){case 2:return s.readData(e,t.id,a);case 3:case 4:return t.flags.format.unsynchronisation&&(e=ID3v2Parser.removeUnsyncBytes(e)),t.flags.format.data_length_indicator&&(e=e.slice(4,e.length)),s.readData(e,t.id,a);default:throw new Error("Unexpected majorVer: "+r)}}static makeDescriptionTagName(e,t){return e+(t?":"+t:"")}async parse(e,t,r){this.tokenizer=t,this.metadata=e,this.options=r;const a=await this.tokenizer.readToken(ID3v2Token_1$2.ID3v2Header);if("ID3"!==a.fileIdentifier)throw new Error("expected ID3-header file-identifier 'ID3' was not found");return this.id3Header=a,this.headerType="ID3v2."+a.version.major,a.flags.isExtendedHeader?this.parseExtendedHeader():this.parseId3Data(a.size)}async parseExtendedHeader(){const e=await this.tokenizer.readToken(ID3v2Token_1$2.ExtendedHeader),t=e.size-ID3v2Token_1$2.ExtendedHeader.len;return t>0?this.parseExtendedHeaderData(t,e.size):this.parseId3Data(this.id3Header.size-e.size)}async parseExtendedHeaderData(e,t){return await this.tokenizer.ignore(e),this.parseId3Data(this.id3Header.size-t)}async parseId3Data(e){const t=await this.tokenizer.readToken(new Token$q.Uint8ArrayType(e));for(const r of this.parseMetadata(t))if("TXXX"===r.id){if(r.value)for(const e of r.value.text)this.addTag(ID3v2Parser.makeDescriptionTagName(r.id,r.value.description),e)}else if("COM"===r.id)for(const e of r.value)this.addTag(ID3v2Parser.makeDescriptionTagName(r.id,e.description),e.text);else if("COMM"===r.id)for(const e of r.value)this.addTag(ID3v2Parser.makeDescriptionTagName(r.id,e.description),e);else if(Array.isArray(r.value))for(const e of r.value)this.addTag(r.id,e);else this.addTag(r.id,r.value)}addTag(e,t){this.metadata.addTag(this.headerType,e,t)}parseMetadata(e){let t=0;const r=[];for(;t!==e.length;){const a=ID3v2Parser.getFrameHeaderLength(this.id3Header.version.major);if(t+a>e.length){this.metadata.addWarning("Illegal ID3v2 tag length");break}const i=e.slice(t,t+=a),s=this.readFrameHeader(i,this.id3Header.version.major),n=e.slice(t,t+=s.length),o=ID3v2Parser.readFrameData(n,s,this.id3Header.version.major,!this.options.skipCovers,this.metadata);o&&r.push({id:s.id,value:o})}return r}readFrameHeader(e,t){let r;switch(t){case 2:r={id:Buffer.from(e.slice(0,3)).toString("ascii"),length:Token$q.UINT24_BE.get(e,3)},r.id.match(/[A-Z0-9]{3}/g)||this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${r.id}`);break;case 3:case 4:r={id:Buffer.from(e.slice(0,4)).toString("ascii"),length:(4===t?ID3v2Token_1$2.UINT32SYNCSAFE:Token$q.UINT32_BE).get(e,4),flags:ID3v2Parser.readFrameFlags(e.slice(8,10))},r.id.match(/[A-Z0-9]{4}/g)||this.metadata.addWarning(`Invalid ID3v2.${this.id3Header.version.major} frame-header-ID: ${r.id}`);break;default:throw new Error("Unexpected majorVer: "+t)}return r}}ID3v2Parser$1.ID3v2Parser=ID3v2Parser;var AiffToken$1={};Object.defineProperty(AiffToken$1,"t",{value:!0}),AiffToken$1.Common=void 0;const Token$p=lib,FourCC_1$a=FourCC;class Common{constructor(e,t){this.isAifc=t;const r=t?22:18;if(e.chunkSize<r)throw new Error(`COMMON CHUNK size should always be at least ${r}`);this.len=e.chunkSize}get(e,t){const r=e.readUInt16BE(t+8)-16398,a=e.readUInt16BE(t+8+2),i={numChannels:e.readUInt16BE(t),numSampleFrames:e.readUInt32BE(t+2),sampleSize:e.readUInt16BE(t+6),sampleRate:r<0?a>>Math.abs(r):a<<r};if(this.isAifc){if(i.compressionType=FourCC_1$a.FourCcToken.get(e,t+18),this.len>22){const r=e.readInt8(t+22);if(23+r+(r+1)%2!==this.len)throw new Error("Illegal pstring length");i.compressionName=new Token$p.StringType(r,"binary").get(e,t+23)}}else i.compressionName="PCM";return i}}AiffToken$1.Common=Common;var iff$1={};Object.defineProperty(iff$1,"t",{value:!0}),iff$1.Header=void 0;const Token$o=lib,FourCC_1$9=FourCC;iff$1.Header={len:8,get:(e,t)=>({chunkID:FourCC_1$9.FourCcToken.get(e,t),chunkSize:Number(BigInt(Token$o.UINT32_BE.get(e,t+4)))})},Object.defineProperty(AiffParser,"t",{value:!0}),AiffParser.AIFFParser=void 0;const Token$n=lib,debug_1$k=browser.exports,strtok3$3=core$2,ID3v2Parser_1$4=ID3v2Parser$1,FourCC_1$8=FourCC,BasicParser_1$a=BasicParser$1,AiffToken=AiffToken$1,iff=iff$1,debug$k=(0,debug_1$k.default)("music-metadata:parser:aiff");class AIFFParser extends BasicParser_1$a.BasicParser{async parse(){if("FORM"!==(await this.tokenizer.readToken(iff.Header)).chunkID)throw new Error("Invalid Chunk-ID, expected 'FORM'");const e=await this.tokenizer.readToken(FourCC_1$8.FourCcToken);switch(e){case"AIFF":this.metadata.setFormat("container",e),this.isCompressed=!1;break;case"AIFC":this.metadata.setFormat("container","AIFF-C"),this.isCompressed=!0;break;default:throw Error("Unsupported AIFF type: "+e)}this.metadata.setFormat("lossless",!this.isCompressed);try{for(;!this.tokenizer.fileInfo.size||this.tokenizer.fileInfo.size-this.tokenizer.position>=iff.Header.len;){debug$k("Reading AIFF chunk at offset="+this.tokenizer.position);const e=await this.tokenizer.readToken(iff.Header);debug$k(`Chunk id=${e.chunkID}`);const t=2*Math.round(e.chunkSize/2),r=await this.readData(e);await this.tokenizer.ignore(t-r)}}catch(t){if(!(t instanceof strtok3$3.EndOfStreamError))throw t;debug$k("End-of-stream")}}async readData(e){switch(e.chunkID){case"COMM":const t=await this.tokenizer.readToken(new AiffToken.Common(e,this.isCompressed));return this.metadata.setFormat("bitsPerSample",t.sampleSize),this.metadata.setFormat("sampleRate",t.sampleRate),this.metadata.setFormat("numberOfChannels",t.numChannels),this.metadata.setFormat("numberOfSamples",t.numSampleFrames),this.metadata.setFormat("duration",t.numSampleFrames/t.sampleRate),this.metadata.setFormat("codec",t.compressionName),e.chunkSize;case"ID3 ":const r=await this.tokenizer.readToken(new Token$n.Uint8ArrayType(e.chunkSize)),a=strtok3$3.fromBuffer(r);return await(new ID3v2Parser_1$4.ID3v2Parser).parse(this.metadata,a,this.options),e.chunkSize;case"SSND":return this.metadata.format.duration&&this.metadata.setFormat("bitrate",8*e.chunkSize/this.metadata.format.duration),0;default:return 0}}}AiffParser.AIFFParser=AIFFParser;var AsfParser$1={},GUID$1={};Object.defineProperty(GUID$1,"t",{value:!0});class GUID{constructor(e){this.str=e}static fromBin(e,t=0){return new GUID(this.decode(e,t))}static decode(e,t=0){return(e.readUInt32LE(t).toString(16)+"-"+e.readUInt16LE(t+4).toString(16)+"-"+e.readUInt16LE(t+6).toString(16)+"-"+e.readUInt16BE(t+8).toString(16)+"-"+e.slice(t+10,t+16).toString("hex")).toUpperCase()}static decodeMediaType(e){switch(e.str){case GUID.AudioMedia.str:return"audio";case GUID.VideoMedia.str:return"video";case GUID.CommandMedia.str:return"command";case GUID.Degradable_JPEG_Media.str:return"degradable-jpeg";case GUID.FileTransferMedia.str:return"file-transfer";case GUID.BinaryMedia.str:return"binary"}}static encode(e){const t=Buffer.alloc(16);return t.writeUInt32LE(parseInt(e.slice(0,8),16),0),t.writeUInt16LE(parseInt(e.slice(9,13),16),4),t.writeUInt16LE(parseInt(e.slice(14,18),16),6),Buffer.from(e.slice(19,23),"hex").copy(t,8),Buffer.from(e.slice(24),"hex").copy(t,10),t}equals(e){return this.str===e.str}toBin(){return GUID.encode(this.str)}}GUID$1.default=GUID,GUID.HeaderObject=new GUID("75B22630-668E-11CF-A6D9-00AA0062CE6C"),GUID.DataObject=new GUID("75B22636-668E-11CF-A6D9-00AA0062CE6C"),GUID.SimpleIndexObject=new GUID("33000890-E5B1-11CF-89F4-00A0C90349CB"),GUID.IndexObject=new GUID("D6E229D3-35DA-11D1-9034-00A0C90349BE"),GUID.MediaObjectIndexObject=new GUID("FEB103F8-12AD-4C64-840F-2A1D2F7AD48C"),GUID.TimecodeIndexObject=new GUID("3CB73FD0-0C4A-4803-953D-EDF7B6228F0C"),GUID.FilePropertiesObject=new GUID("8CABDCA1-A947-11CF-8EE4-00C00C205365"),GUID.StreamPropertiesObject=new GUID("B7DC0791-A9B7-11CF-8EE6-00C00C205365"),GUID.HeaderExtensionObject=new GUID("5FBF03B5-A92E-11CF-8EE3-00C00C205365"),GUID.CodecListObject=new GUID("86D15240-311D-11D0-A3A4-00A0C90348F6"),GUID.ScriptCommandObject=new GUID("1EFB1A30-0B62-11D0-A39B-00A0C90348F6"),GUID.MarkerObject=new GUID("F487CD01-A951-11CF-8EE6-00C00C205365"),GUID.BitrateMutualExclusionObject=new GUID("D6E229DC-35DA-11D1-9034-00A0C90349BE"),GUID.ErrorCorrectionObject=new GUID("75B22635-668E-11CF-A6D9-00AA0062CE6C"),GUID.ContentDescriptionObject=new GUID("75B22633-668E-11CF-A6D9-00AA0062CE6C"),GUID.ExtendedContentDescriptionObject=new GUID("D2D0A440-E307-11D2-97F0-00A0C95EA850"),GUID.ContentBrandingObject=new GUID("2211B3FA-BD23-11D2-B4B7-00A0C955FC6E"),GUID.StreamBitratePropertiesObject=new GUID("7BF875CE-468D-11D1-8D82-006097C9A2B2"),GUID.ContentEncryptionObject=new GUID("2211B3FB-BD23-11D2-B4B7-00A0C955FC6E"),GUID.ExtendedContentEncryptionObject=new GUID("298AE614-2622-4C17-B935-DAE07EE9289C"),GUID.DigitalSignatureObject=new GUID("2211B3FC-BD23-11D2-B4B7-00A0C955FC6E"),GUID.PaddingObject=new GUID("1806D474-CADF-4509-A4BA-9AABCB96AAE8"),GUID.ExtendedStreamPropertiesObject=new GUID("14E6A5CB-C672-4332-8399-A96952065B5A"),GUID.AdvancedMutualExclusionObject=new GUID("A08649CF-4775-4670-8A16-6E35357566CD"),GUID.GroupMutualExclusionObject=new GUID("D1465A40-5A79-4338-B71B-E36B8FD6C249"),GUID.StreamPrioritizationObject=new GUID("D4FED15B-88D3-454F-81F0-ED5C45999E24"),GUID.BandwidthSharingObject=new GUID("A69609E6-517B-11D2-B6AF-00C04FD908E9"),GUID.LanguageListObject=new GUID("7C4346A9-EFE0-4BFC-B229-393EDE415C85"),GUID.MetadataObject=new GUID("C5F8CBEA-5BAF-4877-8467-AA8C44FA4CCA"),GUID.MetadataLibraryObject=new GUID("44231C94-9498-49D1-A141-1D134E457054"),GUID.IndexParametersObject=new GUID("D6E229DF-35DA-11D1-9034-00A0C90349BE"),GUID.MediaObjectIndexParametersObject=new GUID("6B203BAD-3F11-48E4-ACA8-D7613DE2CFA7"),GUID.TimecodeIndexParametersObject=new GUID("F55E496D-9797-4B5D-8C8B-604DFE9BFB24"),GUID.CompatibilityObject=new GUID("26F18B5D-4584-47EC-9F5F-0E651F0452C9"),GUID.AdvancedContentEncryptionObject=new GUID("43058533-6981-49E6-9B74-AD12CB86D58C"),GUID.AudioMedia=new GUID("F8699E40-5B4D-11CF-A8FD-00805F5C442B"),GUID.VideoMedia=new GUID("BC19EFC0-5B4D-11CF-A8FD-00805F5C442B"),GUID.CommandMedia=new GUID("59DACFC0-59E6-11D0-A3AC-00A0C90348F6"),GUID.JFIF_Media=new GUID("B61BE100-5B4E-11CF-A8FD-00805F5C442B"),GUID.Degradable_JPEG_Media=new GUID("35907DE0-E415-11CF-A917-00805F5C442B"),GUID.FileTransferMedia=new GUID("91BD222C-F21C-497A-8B6D-5AA86BFC0185"),GUID.BinaryMedia=new GUID("3AFB65E2-47EF-40F2-AC2C-70A90D71D343"),GUID.ASF_Index_Placeholder_Object=new GUID("D9AADE20-7C17-4F9C-BC28-8555DD98E2A2");var AsfObject$1={},AsfUtil$1={};Object.defineProperty(AsfUtil$1,"t",{value:!0}),AsfUtil$1.AsfUtil=void 0;const Token$m=lib,util$6=Util;class AsfUtil{static getParserForAttr(e){return AsfUtil.attributeParsers[e]}static parseUnicodeAttr(e){return util$6.stripNulls(util$6.decodeString(e,"utf16le"))}static parseByteArrayAttr(e){return Buffer.from(e)}static parseBoolAttr(e,t=0){return 1===AsfUtil.parseWordAttr(e,t)}static parseDWordAttr(e,t=0){return e.readUInt32LE(t)}static parseQWordAttr(e,t=0){return Token$m.UINT64_LE.get(e,t)}static parseWordAttr(e,t=0){return e.readUInt16LE(t)}}AsfUtil$1.AsfUtil=AsfUtil,AsfUtil.attributeParsers=[AsfUtil.parseUnicodeAttr,AsfUtil.parseByteArrayAttr,AsfUtil.parseBoolAttr,AsfUtil.parseDWordAttr,AsfUtil.parseQWordAttr,AsfUtil.parseWordAttr,AsfUtil.parseByteArrayAttr],function(e){Object.defineProperty(e,"t",{value:!0}),e.WmPictureToken=e.MetadataLibraryObjectState=e.MetadataObjectState=e.ExtendedStreamPropertiesObjectState=e.ExtendedContentDescriptionObjectState=e.ContentDescriptionObjectState=e.readCodecEntries=e.HeaderExtensionObject=e.StreamPropertiesObject=e.FilePropertiesObject=e.IgnoreObjectState=e.State=e.HeaderObjectToken=e.TopLevelHeaderObjectToken=e.DataType=void 0;const t=Util,r=lib,a=GUID$1,i=AsfUtil$1,s=ID3v2Token;!function(e){e[e.UnicodeString=0]="UnicodeString",e[e.ByteArray=1]="ByteArray",e[e.Bool=2]="Bool",e[e.DWord=3]="DWord",e[e.QWord=4]="QWord",e[e.Word=5]="Word"}(e.DataType||(e.DataType={})),e.TopLevelHeaderObjectToken={len:30,get:(e,t)=>({objectId:a.default.fromBin(new r.BufferType(16).get(e,t)),objectSize:Number(r.UINT64_LE.get(e,t+16)),numberOfHeaderObjects:r.UINT32_LE.get(e,t+24)})},e.HeaderObjectToken={len:24,get:(e,t)=>({objectId:a.default.fromBin(new r.BufferType(16).get(e,t)),objectSize:Number(r.UINT64_LE.get(e,t+16))})};class n{constructor(t){this.len=Number(t.objectSize)-e.HeaderObjectToken.len}postProcessTag(e,t,r,a){if("WM/Picture"===t)e.push({id:t,value:$.fromBuffer(a)});else{const s=i.AsfUtil.getParserForAttr(r);if(!s)throw new Error("unexpected value headerType: "+r);e.push({id:t,value:s(a)})}}}e.State=n,e.IgnoreObjectState=class extends n{constructor(e){super(e)}get(e,t){return null}};class o extends n{constructor(e){super(e)}get(e,i){return{fileId:a.default.fromBin(e,i),fileSize:r.UINT64_LE.get(e,i+16),creationDate:r.UINT64_LE.get(e,i+24),dataPacketsCount:r.UINT64_LE.get(e,i+32),playDuration:r.UINT64_LE.get(e,i+40),sendDuration:r.UINT64_LE.get(e,i+48),preroll:r.UINT64_LE.get(e,i+56),flags:{broadcast:t.getBit(e,i+64,24),seekable:t.getBit(e,i+64,25)},minimumDataPacketSize:r.UINT32_LE.get(e,i+68),maximumDataPacketSize:r.UINT32_LE.get(e,i+72),maximumBitrate:r.UINT32_LE.get(e,i+76)}}}e.FilePropertiesObject=o,o.guid=a.default.FilePropertiesObject;class c extends n{constructor(e){super(e)}get(e,t){return{streamType:a.default.decodeMediaType(a.default.fromBin(e,t)),errorCorrectionType:a.default.fromBin(e,t+8)}}}e.StreamPropertiesObject=c,c.guid=a.default.StreamPropertiesObject;class u{constructor(){this.len=22}get(e,t){return{reserved1:a.default.fromBin(e,t),reserved2:e.readUInt16LE(t+16),extensionDataSize:e.readUInt32LE(t+18)}}}e.HeaderExtensionObject=u,u.guid=a.default.HeaderExtensionObject;const l={len:20,get:(e,t)=>({entryCount:e.readUInt16LE(t+16)})};async function f(e){const t=await e.readNumber(r.UINT16_LE);return(await e.readToken(new r.StringType(2*t,"utf16le"))).replace("\0","")}async function h(e){const t=await e.readNumber(r.UINT16_LE),a=Buffer.alloc(t);return await e.readBuffer(a),a}async function m(e){const t=await e.readNumber(r.UINT16_LE);return{type:{videoCodec:1==(1&t),audioCodec:2==(2&t)},codecName:await f(e),description:await f(e),information:await h(e)}}e.readCodecEntries=async function(e){const t=await e.readToken(l),r=[];for(let a=0;a<t.entryCount;++a)r.push(await m(e));return r};class p extends n{constructor(e){super(e)}get(e,t){const r=[];let a=t+10;for(let s=0;s<p.contentDescTags.length;++s){const n=e.readUInt16LE(t+2*s);if(n>0){const t=p.contentDescTags[s],o=a+n;r.push({id:t,value:i.AsfUtil.parseUnicodeAttr(e.slice(a,o))}),a=o}}return r}}e.ContentDescriptionObjectState=p,p.guid=a.default.ContentDescriptionObject,p.contentDescTags=["Title","Author","Copyright","Description","Rating"];class d extends n{constructor(e){super(e)}get(e,t){const r=[],a=e.readUInt16LE(t);let s=t+2;for(let n=0;n<a;n+=1){const t=e.readUInt16LE(s);s+=2;const a=i.AsfUtil.parseUnicodeAttr(e.slice(s,s+t));s+=t;const n=e.readUInt16LE(s);s+=2;const o=e.readUInt16LE(s);s+=2;const c=e.slice(s,s+o);s+=o,this.postProcessTag(r,a,n,c)}return r}}e.ExtendedContentDescriptionObjectState=d,d.guid=a.default.ExtendedContentDescriptionObject;class g extends n{constructor(e){super(e)}get(e,a){return{startTime:r.UINT64_LE.get(e,a),endTime:r.UINT64_LE.get(e,a+8),dataBitrate:e.readInt32LE(a+12),bufferSize:e.readInt32LE(a+16),initialBufferFullness:e.readInt32LE(a+20),alternateDataBitrate:e.readInt32LE(a+24),alternateBufferSize:e.readInt32LE(a+28),alternateInitialBufferFullness:e.readInt32LE(a+32),maximumObjectSize:e.readInt32LE(a+36),flags:{reliableFlag:t.getBit(e,a+40,0),seekableFlag:t.getBit(e,a+40,1),resendLiveCleanpointsFlag:t.getBit(e,a+40,2)},streamNumber:e.readInt16LE(a+42),streamLanguageId:e.readInt16LE(a+44),averageTimePerFrame:e.readInt32LE(a+52),streamNameCount:e.readInt32LE(a+54),payloadExtensionSystems:e.readInt32LE(a+56),streamNames:[],streamPropertiesObject:null}}}e.ExtendedStreamPropertiesObjectState=g,g.guid=a.default.ExtendedStreamPropertiesObject;class b extends n{constructor(e){super(e)}get(e,t){const r=[],a=Buffer.from(e),s=a.readUInt16LE(t);let n=t+2;for(let o=0;o<s;o+=1){n+=4;const e=a.readUInt16LE(n);n+=2;const t=a.readUInt16LE(n);n+=2;const s=a.readUInt32LE(n);n+=4;const o=i.AsfUtil.parseUnicodeAttr(a.slice(n,n+e));n+=e;const c=a.slice(n,n+s);n+=s,this.postProcessTag(r,o,t,c)}return r}}e.MetadataObjectState=b,b.guid=a.default.MetadataObject;class T extends b{constructor(e){super(e)}}e.MetadataLibraryObjectState=T,T.guid=a.default.MetadataLibraryObject;class ${constructor(e){this.len=e}static fromBase64(e){return this.fromBuffer(Buffer.from(e,"base64"))}static fromBuffer(e){return new $(e.length).get(e,0)}get(e,t){const r=e.readUInt8(t++),a=e.readInt32LE(t);let i=5;for(;0!==e.readUInt16BE(i);)i+=2;const n=e.slice(5,i).toString("utf16le");for(;0!==e.readUInt16BE(i);)i+=2;const o=e.slice(5,i).toString("utf16le");return{type:s.AttachedPictureType[r],format:n,description:o,size:a,data:e.slice(i+4)}}}e.WmPictureToken=$}(AsfObject$1),Object.defineProperty(AsfParser$1,"t",{value:!0}),AsfParser$1.AsfParser=void 0;const debug_1$j=browser.exports,type_1$1=type,GUID_1=GUID$1,AsfObject=AsfObject$1,BasicParser_1$9=BasicParser$1,debug$j=(0,debug_1$j.default)("music-metadata:parser:ASF"),headerType="asf";class AsfParser extends BasicParser_1$9.BasicParser{async parse(){const e=await this.tokenizer.readToken(AsfObject.TopLevelHeaderObjectToken);if(!e.objectId.equals(GUID_1.default.HeaderObject))throw new Error("expected asf header; but was not found; got: "+e.objectId.str);try{await this.parseObjectHeader(e.numberOfHeaderObjects)}catch(t){debug$j("Error while parsing ASF: %s",t)}}async parseObjectHeader(e){let t;do{const e=await this.tokenizer.readToken(AsfObject.HeaderObjectToken);switch(debug$j("header GUID=%s",e.objectId.str),e.objectId.str){case AsfObject.FilePropertiesObject.guid.str:const r=await this.tokenizer.readToken(new AsfObject.FilePropertiesObject(e));this.metadata.setFormat("duration",Number(r.playDuration/BigInt(1e3))/1e4-Number(r.preroll)/1e3),this.metadata.setFormat("bitrate",r.maximumBitrate);break;case AsfObject.StreamPropertiesObject.guid.str:const a=await this.tokenizer.readToken(new AsfObject.StreamPropertiesObject(e));this.metadata.setFormat("container","ASF/"+a.streamType);break;case AsfObject.HeaderExtensionObject.guid.str:const i=await this.tokenizer.readToken(new AsfObject.HeaderExtensionObject);await this.parseExtensionObject(i.extensionDataSize);break;case AsfObject.ContentDescriptionObjectState.guid.str:t=await this.tokenizer.readToken(new AsfObject.ContentDescriptionObjectState(e)),this.addTags(t);break;case AsfObject.ExtendedContentDescriptionObjectState.guid.str:t=await this.tokenizer.readToken(new AsfObject.ExtendedContentDescriptionObjectState(e)),this.addTags(t);break;case GUID_1.default.CodecListObject.str:const s=await AsfObject.readCodecEntries(this.tokenizer);s.forEach((e=>{this.metadata.addStreamInfo({type:e.type.videoCodec?type_1$1.TrackType.video:type_1$1.TrackType.audio,codecName:e.codecName})}));const n=s.filter((e=>e.type.audioCodec)).map((e=>e.codecName)).join("/");this.metadata.setFormat("codec",n);break;case GUID_1.default.StreamBitratePropertiesObject.str:await this.tokenizer.ignore(e.objectSize-AsfObject.HeaderObjectToken.len);break;case GUID_1.default.PaddingObject.str:debug$j("Padding: %s bytes",e.objectSize-AsfObject.HeaderObjectToken.len),await this.tokenizer.ignore(e.objectSize-AsfObject.HeaderObjectToken.len);break;default:this.metadata.addWarning("Ignore ASF-Object-GUID: "+e.objectId.str),debug$j("Ignore ASF-Object-GUID: %s",e.objectId.str),await this.tokenizer.readToken(new AsfObject.IgnoreObjectState(e))}}while(--e)}addTags(e){e.forEach((e=>{this.metadata.addTag(headerType,e.id,e.value)}))}async parseExtensionObject(e){do{const t=await this.tokenizer.readToken(AsfObject.HeaderObjectToken),r=t.objectSize-AsfObject.HeaderObjectToken.len;switch(t.objectId.str){case AsfObject.ExtendedStreamPropertiesObjectState.guid.str:await this.tokenizer.readToken(new AsfObject.ExtendedStreamPropertiesObjectState(t));break;case AsfObject.MetadataObjectState.guid.str:const e=await this.tokenizer.readToken(new AsfObject.MetadataObjectState(t));this.addTags(e);break;case AsfObject.MetadataLibraryObjectState.guid.str:const a=await this.tokenizer.readToken(new AsfObject.MetadataLibraryObjectState(t));this.addTags(a);break;case GUID_1.default.PaddingObject.str:await this.tokenizer.ignore(r);break;case GUID_1.default.CompatibilityObject.str:this.tokenizer.ignore(r);break;case GUID_1.default.ASF_Index_Placeholder_Object.str:await this.tokenizer.ignore(r);break;default:this.metadata.addWarning("Ignore ASF-Object-GUID: "+t.objectId.str),await this.tokenizer.readToken(new AsfObject.IgnoreObjectState(t))}e-=t.objectSize}while(e>0)}}AsfParser$1.AsfParser=AsfParser;var FlacParser$1={},Vorbis={};Object.defineProperty(Vorbis,"t",{value:!0}),Vorbis.IdentificationHeader=Vorbis.CommonHeader=Vorbis.VorbisPictureToken=void 0;const Token$l=lib,ID3v2Token_1$1=ID3v2Token;class VorbisPictureToken{constructor(e){this.len=e}static fromBase64(e){return this.fromBuffer(Buffer.from(e,"base64"))}static fromBuffer(e){return new VorbisPictureToken(e.length).get(e,0)}get(e,t){const r=ID3v2Token_1$1.AttachedPictureType[Token$l.UINT32_BE.get(e,t)],a=Token$l.UINT32_BE.get(e,t+=4),i=e.toString("utf-8",t+=4,t+a),s=Token$l.UINT32_BE.get(e,t+=a),n=e.toString("utf-8",t+=4,t+s),o=Token$l.UINT32_BE.get(e,t+=s),c=Token$l.UINT32_BE.get(e,t+=4),u=Token$l.UINT32_BE.get(e,t+=4),l=Token$l.UINT32_BE.get(e,t+=4),f=Token$l.UINT32_BE.get(e,t+=4);return{type:r,format:i,description:n,width:o,height:c,colour_depth:u,indexed_color:l,data:Buffer.from(e.slice(t+=4,t+f))}}}Vorbis.VorbisPictureToken=VorbisPictureToken,Vorbis.CommonHeader={len:7,get:(e,t)=>({packetType:e.readUInt8(t),vorbis:new Token$l.StringType(6,"ascii").get(e,t+1)})},Vorbis.IdentificationHeader={len:23,get:(e,t)=>{const r=new DataView(e.buffer,e.byteOffset);return{version:r.getUint32(t+0,!0),channelMode:r.getUint8(t+4),sampleRate:r.getUint32(t+5,!0),bitrateMax:r.getUint32(t+9,!0),bitrateNominal:r.getUint32(t+13,!0),bitrateMin:r.getUint32(t+17,!0)}}};var AbstractID3Parser$1={};Object.defineProperty(AbstractID3Parser$1,"t",{value:!0}),AbstractID3Parser$1.AbstractID3Parser=void 0;const core_1$2=core$2,debug_1$i=browser.exports,ID3v2Token_1=ID3v2Token,ID3v2Parser_1$3=ID3v2Parser$1,ID3v1Parser_1$2=ID3v1Parser,BasicParser_1$8=BasicParser$1,debug$i=(0,debug_1$i.default)("music-metadata:parser:ID3");class AbstractID3Parser extends BasicParser_1$8.BasicParser{constructor(){super(...arguments),this.id3parser=new ID3v2Parser_1$3.ID3v2Parser}static async startsWithID3v2Header(e){return"ID3"===(await e.peekToken(ID3v2Token_1.ID3v2Header)).fileIdentifier}async parse(){try{await this.parseID3v2()}catch(e){if(!(e instanceof core_1$2.EndOfStreamError))throw e;debug$i("End-of-stream")}}finalize(){}async parseID3v2(){if(await this.tryReadId3v2Headers(),debug$i("End of ID3v2 header, go to MPEG-parser: pos=%s",this.tokenizer.position),await this.postId3v2Parse(),this.options.skipPostHeaders&&this.metadata.hasAny())this.finalize();else{const e=new ID3v1Parser_1$2.ID3v1Parser;await e.init(this.metadata,this.tokenizer,this.options).parse(),this.finalize()}}async tryReadId3v2Headers(){if("ID3"===(await this.tokenizer.peekToken(ID3v2Token_1.ID3v2Header)).fileIdentifier)return debug$i("Found ID3v2 header, pos=%s",this.tokenizer.position),await this.id3parser.parse(this.metadata,this.tokenizer,this.options),this.tryReadId3v2Headers()}}AbstractID3Parser$1.AbstractID3Parser=AbstractID3Parser;var VorbisParser$1={},VorbisDecoder$1={};Object.defineProperty(VorbisDecoder$1,"t",{value:!0}),VorbisDecoder$1.VorbisDecoder=void 0;const Token$k=lib;class VorbisDecoder{constructor(e,t){this.data=e,this.offset=t}readInt32(){const e=Token$k.UINT32_LE.get(this.data,this.offset);return this.offset+=4,e}readStringUtf8(){const e=this.readInt32(),t=Buffer.from(this.data).toString("utf-8",this.offset,this.offset+e);return this.offset+=e,t}parseUserComment(){const e=this.offset,t=this.readStringUtf8(),r=t.indexOf("=");return{key:t.slice(0,r).toUpperCase(),value:t.slice(r+1),len:this.offset-e}}}VorbisDecoder$1.VorbisDecoder=VorbisDecoder,Object.defineProperty(VorbisParser$1,"t",{value:!0}),VorbisParser$1.VorbisParser=void 0;const Token$j=lib,debug_1$h=browser.exports,VorbisDecoder_1$1=VorbisDecoder$1,Vorbis_1$1=Vorbis,debug$h=(0,debug_1$h.default)("music-metadata:parser:ogg:vorbis1");class VorbisParser{constructor(e,t){this.metadata=e,this.options=t,this.pageSegments=[]}parsePage(e,t){if(e.headerType.firstPage)this.parseFirstPage(e,t);else{if(e.headerType.continued){if(0===this.pageSegments.length)throw new Error("Cannot continue on previous page");this.pageSegments.push(t)}if(e.headerType.lastPage||!e.headerType.continued){if(this.pageSegments.length>0){const e=Buffer.concat(this.pageSegments);this.parseFullPage(e)}this.pageSegments=e.headerType.lastPage?[]:[t]}}e.headerType.lastPage&&this.calculateDuration(e)}flush(){this.parseFullPage(Buffer.concat(this.pageSegments))}parseUserComment(e,t){const r=new VorbisDecoder_1$1.VorbisDecoder(e,t).parseUserComment();return this.addTag(r.key,r.value),r.len}addTag(e,t){if("METADATA_BLOCK_PICTURE"===e&&"string"==typeof t){if(this.options.skipCovers)return void debug$h("Ignore picture");t=Vorbis_1$1.VorbisPictureToken.fromBase64(t),debug$h(`Push picture: id=${e}, format=${t.format}`)}else debug$h(`Push tag: id=${e}, value=${t}`);this.metadata.addTag("vorbis",e,t)}calculateDuration(e){this.metadata.format.sampleRate&&e.absoluteGranulePosition>=0&&(this.metadata.setFormat("numberOfSamples",e.absoluteGranulePosition),this.metadata.setFormat("duration",this.metadata.format.numberOfSamples/this.metadata.format.sampleRate))}parseFirstPage(e,t){this.metadata.setFormat("codec","Vorbis I"),debug$h("Parse first page");const r=Vorbis_1$1.CommonHeader.get(t,0);if("vorbis"!==r.vorbis)throw new Error("Metadata does not look like Vorbis");if(1!==r.packetType)throw new Error("First Ogg page should be type 1: the identification header");{const e=Vorbis_1$1.IdentificationHeader.get(t,Vorbis_1$1.CommonHeader.len);this.metadata.setFormat("sampleRate",e.sampleRate),this.metadata.setFormat("bitrate",e.bitrateNominal),this.metadata.setFormat("numberOfChannels",e.channelMode),debug$h("sample-rate=%s[hz], bitrate=%s[b/s], channel-mode=%s",e.sampleRate,e.bitrateNominal,e.channelMode)}}parseFullPage(e){const t=Vorbis_1$1.CommonHeader.get(e,0);if(debug$h("Parse full page: type=%s, byteLength=%s",t.packetType,e.byteLength),3===t.packetType)return this.parseUserCommentList(e,Vorbis_1$1.CommonHeader.len)}parseUserCommentList(e,t){const r=Token$j.UINT32_LE.get(e,t);t+=4,t+=r;let a=Token$j.UINT32_LE.get(e,t);for(t+=4;a-- >0;)t+=this.parseUserComment(e,t)}}VorbisParser$1.VorbisParser=VorbisParser,Object.defineProperty(FlacParser$1,"t",{value:!0}),FlacParser$1.FlacParser=void 0;const token_types_1$1=lib,debug_1$g=browser.exports,util$5=Util,Vorbis_1=Vorbis,AbstractID3Parser_1$3=AbstractID3Parser$1,FourCC_1$7=FourCC,VorbisParser_1$3=VorbisParser$1,VorbisDecoder_1=VorbisDecoder$1,debug$g=(0,debug_1$g.default)("music-metadata:parser:FLAC");var BlockType,BlockType2;BlockType2=BlockType||(BlockType={}),BlockType2[BlockType2.STREAMINFO=0]="STREAMINFO",BlockType2[BlockType2.PADDING=1]="PADDING",BlockType2[BlockType2.APPLICATION=2]="APPLICATION",BlockType2[BlockType2.SEEKTABLE=3]="SEEKTABLE",BlockType2[BlockType2.VORBIS_COMMENT=4]="VORBIS_COMMENT",BlockType2[BlockType2.CUESHEET=5]="CUESHEET",BlockType2[BlockType2.PICTURE=6]="PICTURE";class FlacParser extends AbstractID3Parser_1$3.AbstractID3Parser{constructor(){super(...arguments),this.padding=0}init(e,t,r){return super.init(e,t,r),this.vorbisParser=new VorbisParser_1$3.VorbisParser(e,r),this}async postId3v2Parse(){if("fLaC"!==(await this.tokenizer.readToken(FourCC_1$7.FourCcToken)).toString())throw new Error("Invalid FLAC preamble");let e;do{e=await this.tokenizer.readToken(Metadata.BlockHeader),await this.parseDataBlock(e)}while(!e.lastBlock);if(this.tokenizer.fileInfo.size&&this.metadata.format.duration){const e=this.tokenizer.fileInfo.size-this.tokenizer.position;this.metadata.setFormat("bitrate",8*e/this.metadata.format.duration)}}parseDataBlock(e){switch(debug$g(`blockHeader type=${e.type}, length=${e.length}`),e.type){case BlockType.STREAMINFO:return this.parseBlockStreamInfo(e.length);case BlockType.PADDING:this.padding+=e.length;break;case BlockType.APPLICATION:case BlockType.SEEKTABLE:break;case BlockType.VORBIS_COMMENT:return this.parseComment(e.length);case BlockType.CUESHEET:break;case BlockType.PICTURE:return this.parsePicture(e.length).then();default:this.metadata.addWarning("Unknown block type: "+e.type)}return this.tokenizer.ignore(e.length).then()}async parseBlockStreamInfo(e){if(e!==Metadata.BlockStreamInfo.len)throw new Error("Unexpected block-stream-info length");const t=await this.tokenizer.readToken(Metadata.BlockStreamInfo);this.metadata.setFormat("container","FLAC"),this.metadata.setFormat("codec","FLAC"),this.metadata.setFormat("lossless",!0),this.metadata.setFormat("numberOfChannels",t.channels),this.metadata.setFormat("bitsPerSample",t.bitsPerSample),this.metadata.setFormat("sampleRate",t.sampleRate),t.totalSamples>0&&this.metadata.setFormat("duration",t.totalSamples/t.sampleRate)}async parseComment(e){const t=await this.tokenizer.readToken(new token_types_1$1.Uint8ArrayType(e)),r=new VorbisDecoder_1.VorbisDecoder(t,0);r.readStringUtf8();const a=r.readInt32();for(let i=0;i<a;i++){const e=r.parseUserComment();this.vorbisParser.addTag(e.key,e.value)}}async parsePicture(e){if(this.options.skipCovers)return this.tokenizer.ignore(e);{const t=await this.tokenizer.readToken(new Vorbis_1.VorbisPictureToken(e));this.vorbisParser.addTag("METADATA_BLOCK_PICTURE",t)}}}FlacParser$1.FlacParser=FlacParser;class Metadata{}Metadata.BlockHeader={len:4,get:(e,t)=>({lastBlock:util$5.getBit(e,t,7),type:util$5.getBitAllignedNumber(e,t,1,7),length:token_types_1$1.UINT24_BE.get(e,t+1)})},Metadata.BlockStreamInfo={len:34,get:(e,t)=>({minimumBlockSize:token_types_1$1.UINT16_BE.get(e,t),maximumBlockSize:token_types_1$1.UINT16_BE.get(e,t+2)/1e3,minimumFrameSize:token_types_1$1.UINT24_BE.get(e,t+4),maximumFrameSize:token_types_1$1.UINT24_BE.get(e,t+7),sampleRate:token_types_1$1.UINT24_BE.get(e,t+10)>>4,channels:util$5.getBitAllignedNumber(e,t+12,4,3)+1,bitsPerSample:util$5.getBitAllignedNumber(e,t+12,7,5)+1,totalSamples:util$5.getBitAllignedNumber(e,t+13,4,36),fileMD5:new token_types_1$1.Uint8ArrayType(16).get(e,t+18)})};var MP4Parser$1={},Atom$1={},AtomToken$2={};!function(e){Object.defineProperty(e,"t",{value:!0}),e.ChapterText=e.StcoAtom=e.StszAtom=e.StscAtom=e.SampleToChunkToken=e.SttsAtom=e.TimeToSampleToken=e.SoundSampleDescriptionV0=e.SoundSampleDescriptionVersion=e.StsdAtom=e.TrackHeaderAtom=e.NameAtom=e.DataAtom=e.MvhdAtom=e.MdhdAtom=e.FixedLengthAtom=e.mhdr=e.tkhd=e.ftyp=e.ExtendedSize=e.Header=void 0;const t=lib,r=browser.exports,a=FourCC,i=(0,r.default)("music-metadata:parser:MP4:atom");e.Header={len:8,get:(e,r)=>{const a=t.UINT32_BE.get(e,r);if(a<0)throw new Error("Invalid atom header length");return{length:BigInt(a),name:new t.StringType(4,"binary").get(e,r+4)}},put:(e,r,i)=>(t.UINT32_BE.put(e,r,Number(i.length)),a.FourCcToken.put(e,r+4,i.name))},e.ExtendedSize=t.UINT64_BE,e.ftyp={len:4,get:(e,r)=>({type:new t.StringType(4,"ascii").get(e,r)})},e.tkhd={len:4,get:(e,r)=>({type:new t.StringType(4,"ascii").get(e,r)})},e.mhdr={len:8,get:(e,r)=>({version:t.UINT8.get(e,r),flags:t.UINT24_BE.get(e,r+1),nextItemID:t.UINT32_BE.get(e,r+4)})};class s{constructor(e,t,r){if(this.len=e,e<t)throw new Error(`Atom ${r} expected to be ${t}, but specifies ${e} bytes long.`);e>t&&i(`Warning: atom ${r} expected to be ${t}, but was actually ${e} bytes long.`)}}e.FixedLengthAtom=s;const n=(e,r)=>{const a=t.UINT32_BE.get(e,r)-2082844800;return new Date(1e3*a)};e.MdhdAtom=class extends s{constructor(e){super(e,24,"mdhd"),this.len=e}get(e,r){return{version:t.UINT8.get(e,r+0),flags:t.UINT24_BE.get(e,r+1),creationTime:n(e,r+4),modificationTime:n(e,r+8),timeScale:t.UINT32_BE.get(e,r+12),duration:t.UINT32_BE.get(e,r+16),language:t.UINT16_BE.get(e,r+20),quality:t.UINT16_BE.get(e,r+22)}}},e.MvhdAtom=class extends s{constructor(e){super(e,100,"mvhd"),this.len=e}get(e,r){return{version:t.UINT8.get(e,r),flags:t.UINT24_BE.get(e,r+1),creationTime:n(e,r+4),modificationTime:n(e,r+8),timeScale:t.UINT32_BE.get(e,r+12),duration:t.UINT32_BE.get(e,r+16),preferredRate:t.UINT32_BE.get(e,r+20),preferredVolume:t.UINT16_BE.get(e,r+24),previewTime:t.UINT32_BE.get(e,r+72),previewDuration:t.UINT32_BE.get(e,r+76),posterTime:t.UINT32_BE.get(e,r+80),selectionTime:t.UINT32_BE.get(e,r+84),selectionDuration:t.UINT32_BE.get(e,r+88),currentTime:t.UINT32_BE.get(e,r+92),nextTrackID:t.UINT32_BE.get(e,r+96)}}},e.DataAtom=class{constructor(e){this.len=e}get(e,r){return{type:{set:t.UINT8.get(e,r+0),type:t.UINT24_BE.get(e,r+1)},locale:t.UINT24_BE.get(e,r+4),value:Buffer.from(new t.Uint8ArrayType(this.len-8).get(e,r+8))}}},e.NameAtom=class{constructor(e){this.len=e}get(e,r){return{version:t.UINT8.get(e,r),flags:t.UINT24_BE.get(e,r+1),name:new t.StringType(this.len-4,"utf-8").get(e,r+4)}}},e.TrackHeaderAtom=class{constructor(e){this.len=e}get(e,r){return{version:t.UINT8.get(e,r),flags:t.UINT24_BE.get(e,r+1),creationTime:n(e,r+4),modificationTime:n(e,r+8),trackId:t.UINT32_BE.get(e,r+12),duration:t.UINT32_BE.get(e,r+20),layer:t.UINT16_BE.get(e,r+24),alternateGroup:t.UINT16_BE.get(e,r+26),volume:t.UINT16_BE.get(e,r+28)}}};class o{constructor(e){this.len=e}get(e,r){return{dataFormat:a.FourCcToken.get(e,r),dataReferenceIndex:t.UINT16_BE.get(e,r+10),description:new t.Uint8ArrayType(this.len-12).get(e,r+12)}}}e.StsdAtom=class{constructor(e){this.len=e}get(e,r){const a=((e,r)=>({version:t.UINT8.get(e,r),flags:t.UINT24_BE.get(e,r+1),numberOfEntries:t.UINT32_BE.get(e,r+4)}))(e,r);r+=8;const i=[];for(let s=0;s<a.numberOfEntries;++s){const a=t.UINT32_BE.get(e,r);r+=t.UINT32_BE.len,i.push(new o(a).get(e,r)),r+=a}return{header:a,table:i}}},e.SoundSampleDescriptionVersion={len:8,get:(e,r)=>({version:t.INT16_BE.get(e,r),revision:t.INT16_BE.get(e,r+2),vendor:t.INT32_BE.get(e,r+4)})},e.SoundSampleDescriptionV0={len:12,get:(e,r)=>({numAudioChannels:t.INT16_BE.get(e,r+0),sampleSize:t.INT16_BE.get(e,r+2),compressionId:t.INT16_BE.get(e,r+4),packetSize:t.INT16_BE.get(e,r+6),sampleRate:t.UINT16_BE.get(e,r+8)+t.UINT16_BE.get(e,r+10)/1e4})};class c{constructor(e,t){this.len=e,this.token=t}get(e,r){const a=t.INT32_BE.get(e,r+4);return{version:t.INT8.get(e,r+0),flags:t.INT24_BE.get(e,r+1),numberOfEntries:a,entries:u(e,this.token,r+8,this.len-8,a)}}}function u(e,t,r,a,s){if(i(`remainingLen=${a}, numberOfEntries=${s} * token-len=${t.len}`),0===a)return[];if(a!==s*t.len)throw new Error("mismatch number-of-entries with remaining atom-length");const n=[];for(let i=0;i<s;++i)n.push(t.get(e,r)),r+=t.len;return n}e.TimeToSampleToken={len:8,get:(e,r)=>({count:t.INT32_BE.get(e,r+0),duration:t.INT32_BE.get(e,r+4)})},e.SttsAtom=class extends c{constructor(t){super(t,e.TimeToSampleToken),this.len=t}},e.SampleToChunkToken={len:12,get:(e,r)=>({firstChunk:t.INT32_BE.get(e,r),samplesPerChunk:t.INT32_BE.get(e,r+4),sampleDescriptionId:t.INT32_BE.get(e,r+8)})},e.StscAtom=class extends c{constructor(t){super(t,e.SampleToChunkToken),this.len=t}},e.StszAtom=class{constructor(e){this.len=e}get(e,r){const a=t.INT32_BE.get(e,r+8);return{version:t.INT8.get(e,r),flags:t.INT24_BE.get(e,r+1),sampleSize:t.INT32_BE.get(e,r+4),numberOfEntries:a,entries:u(e,t.INT32_BE,r+12,this.len-12,a)}}},e.StcoAtom=class extends c{constructor(e){super(e,t.INT32_BE),this.len=e}},e.ChapterText=class{constructor(e){this.len=e}get(e,r){const a=t.INT16_BE.get(e,r+0);return new t.StringType(a,"utf-8").get(e,r+2)}}}(AtomToken$2),Object.defineProperty(Atom$1,"t",{value:!0}),Atom$1.Atom=void 0;const debug_1$f=browser.exports,AtomToken$1=AtomToken$2,debug$f=(0,debug_1$f.default)("music-metadata:parser:MP4:Atom");class Atom{constructor(e,t,r){this.header=e,this.extended=t,this.parent=r,this.children=[],this.atomPath=(this.parent?this.parent.atomPath+".":"")+this.header.name}static async readAtom(e,t,r,a){const i=e.position,s=await e.readToken(AtomToken$1.Header);s.length===BigInt(1)&&(s.length=await e.readToken(AtomToken$1.ExtendedSize));const n=new Atom(s,s.length===BigInt(1),r),o=n.getPayloadLength(a);return debug$f(`parse atom name=${n.atomPath}, extended=${n.extended}, offset=${i}, len=${n.header.length}`),await n.readData(e,t,o),n}getHeaderLength(){return this.extended?16:8}getPayloadLength(e){return(this.header.length===BigInt(0)?e:Number(this.header.length))-this.getHeaderLength()}async readAtoms(e,t,r){for(;r>0;){const a=await Atom.readAtom(e,t,this,r);this.children.push(a),r-=a.header.length===BigInt(0)?r:Number(a.header.length)}}async readData(e,t,r){switch(this.header.name){case"moov":case"udta":case"trak":case"mdia":case"minf":case"stbl":case"<id>":case"ilst":case"tref":return this.readAtoms(e,t,this.getPayloadLength(r));case"meta":return await e.ignore(4),this.readAtoms(e,t,this.getPayloadLength(r)-4);default:return t(this,r)}}}Atom$1.Atom=Atom,Object.defineProperty(MP4Parser$1,"t",{value:!0}),MP4Parser$1.MP4Parser=void 0;const debug_1$e=browser.exports,Token$i=lib,BasicParser_1$7=BasicParser$1,ID3v1Parser_1$1=ID3v1Parser,type_1=type,Atom_1=Atom$1,AtomToken=AtomToken$2,debug$e=(0,debug_1$e.default)("music-metadata:parser:MP4"),tagFormat="iTunes",encoderDict={raw:{lossy:!1,format:"raw"},MAC3:{lossy:!0,format:"MACE 3:1"},MAC6:{lossy:!0,format:"MACE 6:1"},ima4:{lossy:!0,format:"IMA 4:1"},ulaw:{lossy:!0,format:"uLaw 2:1"},alaw:{lossy:!0,format:"uLaw 2:1"},Qclp:{lossy:!0,format:"QUALCOMM PureVoice"},".mp3":{lossy:!0,format:"MPEG-1 layer 3"},alac:{lossy:!1,format:"ALAC"},"ac-3":{lossy:!0,format:"AC-3"},mp4a:{lossy:!0,format:"MPEG-4/AAC"},mp4s:{lossy:!0,format:"MP4S"},c608:{lossy:!0,format:"CEA-608"},c708:{lossy:!0,format:"CEA-708"}};function distinct(e,t,r){return r.indexOf(e)===t}class MP4Parser extends BasicParser_1$7.BasicParser{constructor(){super(...arguments),this.atomParsers={mvhd:async e=>{const t=await this.tokenizer.readToken(new AtomToken.MvhdAtom(e));this.metadata.setFormat("creationTime",t.creationTime),this.metadata.setFormat("modificationTime",t.modificationTime)},mdhd:async e=>{const t=await this.tokenizer.readToken(new AtomToken.MdhdAtom(e)),r=this.getTrackDescription();r.creationTime=t.creationTime,r.modificationTime=t.modificationTime,r.timeScale=t.timeScale,r.duration=t.duration},chap:async e=>{const t=this.getTrackDescription(),r=[];for(;e>=Token$i.UINT32_BE.len;)r.push(await this.tokenizer.readNumber(Token$i.UINT32_BE)),e-=Token$i.UINT32_BE.len;t.chapterList=r},tkhd:async e=>{const t=await this.tokenizer.readToken(new AtomToken.TrackHeaderAtom(e));this.tracks.push(t)},mdat:async e=>{if(this.audioLengthInBytes=e,this.calculateBitRate(),this.options.includeChapters){const t=this.tracks.filter((e=>e.chapterList));if(1===t.length){const r=t[0].chapterList,a=this.tracks.filter((e=>-1!==r.indexOf(e.trackId)));if(1===a.length)return this.parseChapterTrack(a[0],t[0],e)}}await this.tokenizer.ignore(e)},ftyp:async e=>{const t=[];for(;e>0;){const r=await this.tokenizer.readToken(AtomToken.ftyp);e-=AtomToken.ftyp.len;const a=r.type.replace(/\W/g,"");a.length>0&&t.push(a)}debug$e(`ftyp: ${t.join("/")}`);const r=t.filter(distinct).join("/");this.metadata.setFormat("container",r)},stsd:async e=>{const t=await this.tokenizer.readToken(new AtomToken.StsdAtom(e));this.getTrackDescription().soundSampleDescription=t.table.map((e=>this.parseSoundSampleDescription(e)))},stsc:async e=>{const t=await this.tokenizer.readToken(new AtomToken.StscAtom(e));this.getTrackDescription().sampleToChunkTable=t.entries},stts:async e=>{const t=await this.tokenizer.readToken(new AtomToken.SttsAtom(e));this.getTrackDescription().timeToSampleTable=t.entries},stsz:async e=>{const t=await this.tokenizer.readToken(new AtomToken.StszAtom(e)),r=this.getTrackDescription();r.sampleSize=t.sampleSize,r.sampleSizeTable=t.entries},stco:async e=>{const t=await this.tokenizer.readToken(new AtomToken.StcoAtom(e));this.getTrackDescription().chunkOffsetTable=t.entries},date:async e=>{const t=await this.tokenizer.readToken(new Token$i.StringType(e,"utf-8"));this.addTag("date",t)}}}static read_BE_Integer(e,t){const r=(t?"INT":"UINT")+8*e.length+(e.length>1?"_BE":""),a=Token$i[r];if(!a)throw new Error('Token for integer type not found: "'+r+'"');return Number(a.get(e,0))}async parse(){this.tracks=[];let e=this.tokenizer.fileInfo.size;for(;!this.tokenizer.fileInfo.size||e>0;){try{if("\0\0\0\0"===(await this.tokenizer.peekToken(AtomToken.Header)).name){const e=`Error at offset=${this.tokenizer.position}: box.id=0`;debug$e(e),this.addWarning(e);break}}catch(a){const e=`Error at offset=${this.tokenizer.position}: ${a.message}`;debug$e(e),this.addWarning(e);break}const t=await Atom_1.Atom.readAtom(this.tokenizer,((e,t)=>this.handleAtom(e,t)),null,e);e-=t.header.length===BigInt(0)?e:Number(t.header.length)}const t=[];this.tracks.forEach((e=>{const r=[];e.soundSampleDescription.forEach((e=>{const t={},a=encoderDict[e.dataFormat];if(a?(r.push(a.format),t.codecName=a.format):t.codecName=`<${e.dataFormat}>`,e.description){const{description:r}=e;r.sampleRate>0&&(t.type=type_1.TrackType.audio,t.audio={samplingFrequency:r.sampleRate,bitDepth:r.sampleSize,channels:r.numAudioChannels})}this.metadata.addStreamInfo(t)})),r.length>=1&&t.push(r.join("/"))})),t.length>0&&this.metadata.setFormat("codec",t.filter(distinct).join("+"));const r=this.tracks.filter((e=>e.soundSampleDescription.length>=1&&e.soundSampleDescription[0].description&&e.soundSampleDescription[0].description.numAudioChannels>0));if(r.length>=1){const e=r[0],t=e.duration/e.timeScale;this.metadata.setFormat("duration",t);const a=e.soundSampleDescription[0];a.description&&(this.metadata.setFormat("sampleRate",a.description.sampleRate),this.metadata.setFormat("bitsPerSample",a.description.sampleSize),this.metadata.setFormat("numberOfChannels",a.description.numAudioChannels));const i=encoderDict[a.dataFormat];i&&this.metadata.setFormat("lossless",!i.lossy),this.calculateBitRate()}}async handleAtom(e,t){if(e.parent)switch(e.parent.header.name){case"ilst":case"<id>":return this.parseMetadataItemData(e)}if(this.atomParsers[e.header.name])return this.atomParsers[e.header.name](t);debug$e(`No parser for atom path=${e.atomPath}, payload-len=${t}, ignoring atom`),await this.tokenizer.ignore(t)}getTrackDescription(){return this.tracks[this.tracks.length-1]}calculateBitRate(){this.audioLengthInBytes&&this.metadata.format.duration&&this.metadata.setFormat("bitrate",8*this.audioLengthInBytes/this.metadata.format.duration)}addTag(e,t){this.metadata.addTag(tagFormat,e,t)}addWarning(e){debug$e("Warning: "+e),this.metadata.addWarning(e)}parseMetadataItemData(e){let t=e.header.name;return e.readAtoms(this.tokenizer,(async(e,r)=>{const a=e.getPayloadLength(r);switch(e.header.name){case"data":return this.parseValueAtom(t,e);case"name":const r=await this.tokenizer.readToken(new AtomToken.NameAtom(a));t+=":"+r.name;break;case"mean":const i=await this.tokenizer.readToken(new AtomToken.NameAtom(a));t+=":"+i.name;break;default:const s=await this.tokenizer.readToken(new Token$i.BufferType(a));this.addWarning("Unsupported meta-item: "+t+"["+e.header.name+"] => value="+s.toString("hex")+" ascii="+s.toString("ascii"))}}),e.getPayloadLength(0))}async parseValueAtom(e,t){const r=await this.tokenizer.readToken(new AtomToken.DataAtom(Number(t.header.length)-AtomToken.Header.len));if(0!==r.type.set)throw new Error("Unsupported type-set != 0: "+r.type.set);switch(r.type.type){case 0:switch(e){case"trkn":case"disk":const t=Token$i.UINT8.get(r.value,3),a=Token$i.UINT8.get(r.value,5);this.addTag(e,t+"/"+a);break;case"gnre":const i=Token$i.UINT8.get(r.value,1),s=ID3v1Parser_1$1.Genres[i-1];this.addTag(e,s)}break;case 1:case 18:this.addTag(e,r.value.toString("utf-8"));break;case 13:if(this.options.skipCovers)break;this.addTag(e,{format:"image/jpeg",data:Buffer.from(r.value)});break;case 14:if(this.options.skipCovers)break;this.addTag(e,{format:"image/png",data:Buffer.from(r.value)});break;case 21:this.addTag(e,MP4Parser.read_BE_Integer(r.value,!0));break;case 22:this.addTag(e,MP4Parser.read_BE_Integer(r.value,!1));break;case 65:this.addTag(e,r.value.readInt8(0));break;case 66:this.addTag(e,r.value.readInt16BE(0));break;case 67:this.addTag(e,r.value.readInt32BE(0));break;default:this.addWarning(`atom key=${e}, has unknown well-known-type (data-type): ${r.type.type}`)}}parseSoundSampleDescription(e){const t={dataFormat:e.dataFormat,dataReferenceIndex:e.dataReferenceIndex};let r=0;const a=AtomToken.SoundSampleDescriptionVersion.get(e.description,r);return r+=AtomToken.SoundSampleDescriptionVersion.len,0===a.version||1===a.version?t.description=AtomToken.SoundSampleDescriptionV0.get(e.description,r):debug$e(`Warning: sound-sample-description ${a} not implemented`),t}async parseChapterTrack(e,t,r){if(!e.sampleSize&&e.chunkOffsetTable.length!==e.sampleSizeTable.length)throw new Error("Expected equal chunk-offset-table & sample-size-table length.");const a=[];for(let i=0;i<e.chunkOffsetTable.length&&r>0;++i){const s=e.chunkOffsetTable[i]-this.tokenizer.position,n=e.sampleSize>0?e.sampleSize:e.sampleSizeTable[i];if((r-=s+n)<0)throw new Error("Chapter chunk exceeding token length");await this.tokenizer.ignore(s);const o=await this.tokenizer.readToken(new AtomToken.ChapterText(n));debug$e(`Chapter ${i+1}: ${o}`);const c={title:o,sampleOffset:this.findSampleOffset(t,this.tokenizer.position)};debug$e(`Chapter title=${c.title}, offset=${c.sampleOffset}/${this.tracks[0].duration}`),a.push(c)}this.metadata.setFormat("chapters",a),await this.tokenizer.ignore(r)}findSampleOffset(e,t){let r=0;e.timeToSampleTable.forEach((e=>{r+=e.count*e.duration})),debug$e(`Total duration=${r}`);let a=0;for(;a<e.chunkOffsetTable.length&&e.chunkOffsetTable[a]<t;)++a;return this.getChunkDuration(a+1,e)}getChunkDuration(e,t){let r=0,a=t.timeToSampleTable[r].count,i=t.timeToSampleTable[r].duration,s=1,n=this.getSamplesPerChunk(s,t.sampleToChunkTable),o=0;for(;s<e;){const e=Math.min(a,n);o+=e*i,a-=e,n-=e,0===n?(++s,n=this.getSamplesPerChunk(s,t.sampleToChunkTable)):(++r,a=t.timeToSampleTable[r].count,i=t.timeToSampleTable[r].duration)}return o}getSamplesPerChunk(e,t){for(let r=0;r<t.length-1;++r)if(e>=t[r].firstChunk&&e<t[r+1].firstChunk)return t[r].samplesPerChunk;return t[t.length-1].samplesPerChunk}}MP4Parser$1.MP4Parser=MP4Parser;var MpegParser$1={},XingTag={},ExtendedLameHeader={},ReplayGainDataFormat={};Object.defineProperty(ReplayGainDataFormat,"t",{value:!0}),ReplayGainDataFormat.ReplayGain=void 0;const common$2=Util;var NameCode,NameCode2,ReplayGainOriginator,ReplayGainOriginator2;NameCode2=NameCode||(NameCode={}),NameCode2[NameCode2.not_set=0]="not_set",NameCode2[NameCode2.radio=1]="radio",NameCode2[NameCode2.audiophile=2]="audiophile",ReplayGainOriginator2=ReplayGainOriginator||(ReplayGainOriginator={}),ReplayGainOriginator2[ReplayGainOriginator2.unspecified=0]="unspecified",ReplayGainOriginator2[ReplayGainOriginator2.engineer=1]="engineer",ReplayGainOriginator2[ReplayGainOriginator2.user=2]="user",ReplayGainOriginator2[ReplayGainOriginator2.automatic=3]="automatic",ReplayGainOriginator2[ReplayGainOriginator2.rms_average=4]="rms_average",ReplayGainDataFormat.ReplayGain={len:2,get:(e,t)=>{const r=common$2.getBitAllignedNumber(e,t,0,3),a=common$2.getBitAllignedNumber(e,t,6,1),i=common$2.getBitAllignedNumber(e,t,7,9)/10;if(r>0)return{type:common$2.getBitAllignedNumber(e,t,0,3),origin:common$2.getBitAllignedNumber(e,t,3,3),adjustment:a?-i:i}}},Object.defineProperty(ExtendedLameHeader,"t",{value:!0}),ExtendedLameHeader.ExtendedLameHeader=void 0;const Token$h=lib,common$1=Util,ReplayGainDataFormat_1=ReplayGainDataFormat;ExtendedLameHeader.ExtendedLameHeader={len:27,get:(e,t)=>{const r=Token$h.UINT32_BE.get(e,t+2);return{revision:common$1.getBitAllignedNumber(e,t,0,4),vbr_method:common$1.getBitAllignedNumber(e,t,4,4),lowpass_filter:100*Token$h.UINT8.get(e,t+1),track_peak:0===r?void 0:r/Math.pow(2,23),track_gain:ReplayGainDataFormat_1.ReplayGain.get(e,6),album_gain:ReplayGainDataFormat_1.ReplayGain.get(e,8),music_length:Token$h.UINT32_BE.get(e,t+20),music_crc:Token$h.UINT8.get(e,t+24),header_crc:Token$h.UINT16_BE.get(e,t+24)}}},function(e){Object.defineProperty(e,"t",{value:!0}),e.readXingHeader=e.XingHeaderFlags=e.LameEncoderVersion=e.InfoTagHeaderTag=void 0;const t=lib,r=Util,a=ExtendedLameHeader;e.InfoTagHeaderTag=new t.StringType(4,"ascii"),e.LameEncoderVersion=new t.StringType(6,"ascii"),e.XingHeaderFlags={len:4,get:(e,t)=>({frames:r.isBitSet(e,t,31),bytes:r.isBitSet(e,t,30),toc:r.isBitSet(e,t,29),vbrScale:r.isBitSet(e,t,28)})},e.readXingHeader=async function(r){const i=await r.readToken(e.XingHeaderFlags),s={};if(i.frames&&(s.numFrames=await r.readToken(t.UINT32_BE)),i.bytes&&(s.streamSize=await r.readToken(t.UINT32_BE)),i.toc&&(s.toc=Buffer.alloc(100),await r.readBuffer(s.toc)),i.vbrScale&&(s.vbrScale=await r.readToken(t.UINT32_BE)),"LAME"===await r.peekToken(new t.StringType(4,"ascii"))&&(await r.ignore(4),s.lame={version:await r.readToken(new t.StringType(5,"ascii"))},s.lame.version.match(/\d+.\d+/g))){const e=s.lame.version.match(/\d+.\d+/g)[0].split(".").map((e=>parseInt(e,10)));e[0]>=3&&e[1]>=90&&(s.lame.extended=await r.readToken(a.ExtendedLameHeader))}return s}}(XingTag),Object.defineProperty(MpegParser$1,"t",{value:!0}),MpegParser$1.MpegParser=void 0;const Token$g=lib,core_1$1=core$2,debug_1$d=browser.exports,common=Util,AbstractID3Parser_1$2=AbstractID3Parser$1,XingTag_1=XingTag,debug$d=(0,debug_1$d.default)("music-metadata:parser:mpeg"),maxPeekLen=1024,MPEG4={AudioObjectTypes:["AAC Main","AAC LC","AAC SSR","AAC LTP"],SamplingFrequencies:[96e3,88200,64e3,48e3,44100,32e3,24e3,22050,16e3,12e3,11025,8e3,7350,void 0,void 0,-1]},MPEG4_ChannelConfigurations=[void 0,["front-center"],["front-left","front-right"],["front-center","front-left","front-right"],["front-center","front-left","front-right","back-center"],["front-center","front-left","front-right","back-left","back-right"],["front-center","front-left","front-right","back-left","back-right","LFE-channel"],["front-center","front-left","front-right","side-left","side-right","back-left","back-right","LFE-channel"]];class MpegFrameHeader{constructor(e,t){this.versionIndex=common.getBitAllignedNumber(e,t+1,3,2),this.layer=MpegFrameHeader.LayerDescription[common.getBitAllignedNumber(e,t+1,5,2)],this.versionIndex>1&&0===this.layer?this.parseAdtsHeader(e,t):this.parseMpegHeader(e,t),this.isProtectedByCRC=!common.isBitSet(e,t+1,7)}calcDuration(e){return e*this.calcSamplesPerFrame()/this.samplingRate}calcSamplesPerFrame(){return MpegFrameHeader.samplesInFrameTable[1===this.version?0:1][this.layer]}calculateSideInfoLength(){if(3!==this.layer)return 2;if(3===this.channelModeIndex){if(1===this.version)return 17;if(2===this.version||2.5===this.version)return 9}else{if(1===this.version)return 32;if(2===this.version||2.5===this.version)return 17}}calcSlotSize(){return[null,4,1,1][this.layer]}parseMpegHeader(e,t){this.container="MPEG",this.bitrateIndex=common.getBitAllignedNumber(e,t+2,0,4),this.sampRateFreqIndex=common.getBitAllignedNumber(e,t+2,4,2),this.padding=common.isBitSet(e,t+2,6),this.privateBit=common.isBitSet(e,t+2,7),this.channelModeIndex=common.getBitAllignedNumber(e,t+3,0,2),this.modeExtension=common.getBitAllignedNumber(e,t+3,2,2),this.isCopyrighted=common.isBitSet(e,t+3,4),this.isOriginalMedia=common.isBitSet(e,t+3,5),this.emphasis=common.getBitAllignedNumber(e,t+3,7,2),this.version=MpegFrameHeader.VersionID[this.versionIndex],this.channelMode=MpegFrameHeader.ChannelMode[this.channelModeIndex],this.codec=`MPEG ${this.version} Layer ${this.layer}`;const r=this.calcBitrate();if(!r)throw new Error("Cannot determine bit-rate");if(this.bitrate=1e3*r,this.samplingRate=this.calcSamplingRate(),null==this.samplingRate)throw new Error("Cannot determine sampling-rate")}parseAdtsHeader(e,t){debug$d("layer=0 => ADTS"),this.version=2===this.versionIndex?4:2,this.container="ADTS/MPEG-"+this.version;const r=common.getBitAllignedNumber(e,t+2,0,2);this.codec="AAC",this.codecProfile=MPEG4.AudioObjectTypes[r],debug$d(`MPEG-4 audio-codec=${this.codec}`);const a=common.getBitAllignedNumber(e,t+2,2,4);this.samplingRate=MPEG4.SamplingFrequencies[a],debug$d(`sampling-rate=${this.samplingRate}`);const i=common.getBitAllignedNumber(e,t+2,7,3);this.mp4ChannelConfig=MPEG4_ChannelConfigurations[i],debug$d(`channel-config=${this.mp4ChannelConfig.join("+")}`),this.frameLength=common.getBitAllignedNumber(e,t+3,6,2)<<11}calcBitrate(){if(0===this.bitrateIndex||15===this.bitrateIndex)return;const e=`${Math.floor(this.version)}${this.layer}`;return MpegFrameHeader.bitrate_index[this.bitrateIndex][e]}calcSamplingRate(){return 3===this.sampRateFreqIndex?null:MpegFrameHeader.sampling_rate_freq_index[this.version][this.sampRateFreqIndex]}}MpegFrameHeader.SyncByte1=255,MpegFrameHeader.SyncByte2=224,MpegFrameHeader.VersionID=[2.5,null,2,1],MpegFrameHeader.LayerDescription=[0,3,2,1],MpegFrameHeader.ChannelMode=["stereo","joint_stereo","dual_channel","mono"],MpegFrameHeader.bitrate_index={1:{11:32,12:32,13:32,21:32,22:8,23:8},2:{11:64,12:48,13:40,21:48,22:16,23:16},3:{11:96,12:56,13:48,21:56,22:24,23:24},4:{11:128,12:64,13:56,21:64,22:32,23:32},5:{11:160,12:80,13:64,21:80,22:40,23:40},6:{11:192,12:96,13:80,21:96,22:48,23:48},7:{11:224,12:112,13:96,21:112,22:56,23:56},8:{11:256,12:128,13:112,21:128,22:64,23:64},9:{11:288,12:160,13:128,21:144,22:80,23:80},10:{11:320,12:192,13:160,21:160,22:96,23:96},11:{11:352,12:224,13:192,21:176,22:112,23:112},12:{11:384,12:256,13:224,21:192,22:128,23:128},13:{11:416,12:320,13:256,21:224,22:144,23:144},14:{11:448,12:384,13:320,21:256,22:160,23:160}},MpegFrameHeader.sampling_rate_freq_index={1:{0:44100,1:48e3,2:32e3},2:{0:22050,1:24e3,2:16e3},2.5:{0:11025,1:12e3,2:8e3}},MpegFrameHeader.samplesInFrameTable=[[0,384,1152,1152],[0,384,1152,576]];const FrameHeader={len:4,get:(e,t)=>new MpegFrameHeader(e,t)};function getVbrCodecProfile(e){return"V"+Math.floor((100-e)/10)}class MpegParser extends AbstractID3Parser_1$2.AbstractID3Parser{constructor(){super(...arguments),this.frameCount=0,this.syncFrameCount=-1,this.countSkipFrameData=0,this.totalDataLength=0,this.bitrates=[],this.calculateEofDuration=!1,this.buf_frame_header=Buffer.alloc(4),this.syncPeek={buf:Buffer.alloc(maxPeekLen),len:0}}async postId3v2Parse(){this.metadata.setFormat("lossless",!1);try{let e=!1;for(;!e;)await this.sync(),e=await this.parseCommonMpegHeader()}catch(e){if(!(e instanceof core_1$1.EndOfStreamError))throw e;if(debug$d("End-of-stream"),this.calculateEofDuration){const e=this.frameCount*this.samplesPerFrame;this.metadata.setFormat("numberOfSamples",e);const t=e/this.metadata.format.sampleRate;debug$d(`Calculate duration at EOF: ${t} sec.`,t),this.metadata.setFormat("duration",t)}}}finalize(){const e=this.metadata.format,t=this.metadata.native.hasOwnProperty("ID3v1");if(e.duration&&this.tokenizer.fileInfo.size){const r=this.tokenizer.fileInfo.size-this.mpegOffset-(t?128:0);e.codecProfile&&"V"===e.codecProfile[0]&&this.metadata.setFormat("bitrate",8*r/e.duration)}else if(this.tokenizer.fileInfo.size&&"CBR"===e.codecProfile){const r=this.tokenizer.fileInfo.size-this.mpegOffset-(t?128:0),a=Math.round(r/this.frame_size)*this.samplesPerFrame;this.metadata.setFormat("numberOfSamples",a);const i=a/e.sampleRate;debug$d("Calculate CBR duration based on file size: %s",i),this.metadata.setFormat("duration",i)}}async sync(){let e=!1;for(;;){let t=0;if(this.syncPeek.len=await this.tokenizer.peekBuffer(this.syncPeek.buf,{length:maxPeekLen,mayBeLess:!0}),this.syncPeek.len<=163)throw new core_1$1.EndOfStreamError;for(;;){if(e&&224==(224&this.syncPeek.buf[t]))return this.buf_frame_header[0]=MpegFrameHeader.SyncByte1,this.buf_frame_header[1]=this.syncPeek.buf[t],await this.tokenizer.ignore(t),debug$d(`Sync at offset=${this.tokenizer.position-1}, frameCount=${this.frameCount}`),this.syncFrameCount===this.frameCount&&(debug$d(`Re-synced MPEG stream, frameCount=${this.frameCount}`),this.frameCount=0,this.frame_size=0),void(this.syncFrameCount=this.frameCount);if(e=!1,t=this.syncPeek.buf.indexOf(MpegFrameHeader.SyncByte1,t),-1===t){if(this.syncPeek.len<this.syncPeek.buf.length)throw new core_1$1.EndOfStreamError;await this.tokenizer.ignore(this.syncPeek.len);break}++t,e=!0}}}async parseCommonMpegHeader(){let e;0===this.frameCount&&(this.mpegOffset=this.tokenizer.position-1),await this.tokenizer.peekBuffer(this.buf_frame_header,{offset:1,length:3});try{e=FrameHeader.get(this.buf_frame_header,0)}catch(t){return await this.tokenizer.ignore(1),this.metadata.addWarning("Parse error: "+t.message),!1}return await this.tokenizer.ignore(3),this.metadata.setFormat("container",e.container),this.metadata.setFormat("codec",e.codec),this.metadata.setFormat("lossless",!1),this.metadata.setFormat("sampleRate",e.samplingRate),this.frameCount++,e.version>=2&&0===e.layer?this.parseAdts(e):this.parseAudioFrameHeader(e)}async parseAudioFrameHeader(e){this.metadata.setFormat("numberOfChannels","mono"===e.channelMode?1:2),this.metadata.setFormat("bitrate",e.bitrate),this.frameCount<2e5&&debug$d("offset=%s MP%s bitrate=%s sample-rate=%s",this.tokenizer.position-4,e.layer,e.bitrate,e.samplingRate);const t=e.calcSlotSize();if(null===t)throw new Error("invalid slot_size");const r=e.calcSamplesPerFrame();debug$d(`samples_per_frame=${r}`);const a=r/8*e.bitrate/e.samplingRate+(e.padding?t:0);if(this.frame_size=Math.floor(a),this.audioFrameHeader=e,this.bitrates.push(e.bitrate),1===this.frameCount)return this.offset=FrameHeader.len,await this.skipSideInformation(),!1;if(3===this.frameCount){if(this.areAllSame(this.bitrates)){if(this.samplesPerFrame=r,this.metadata.setFormat("codecProfile","CBR"),this.tokenizer.fileInfo.size)return!0}else if(this.metadata.format.duration)return!0;if(!this.options.duration)return!0}return this.options.duration&&4===this.frameCount&&(this.samplesPerFrame=r,this.calculateEofDuration=!0),this.offset=4,e.isProtectedByCRC?(await this.parseCrc(),!1):(await this.skipSideInformation(),!1)}async parseAdts(e){const t=Buffer.alloc(3);await this.tokenizer.readBuffer(t),e.frameLength+=common.getBitAllignedNumber(t,0,0,11),this.totalDataLength+=e.frameLength,this.samplesPerFrame=1024;const r=e.samplingRate/this.samplesPerFrame,a=8*(0===this.frameCount?0:this.totalDataLength/this.frameCount)*r+.5;if(this.metadata.setFormat("bitrate",a),debug$d(`frame-count=${this.frameCount}, size=${e.frameLength} bytes, bit-rate=${a}`),await this.tokenizer.ignore(e.frameLength>7?e.frameLength-7:1),3===this.frameCount){if(this.metadata.setFormat("codecProfile",e.codecProfile),e.mp4ChannelConfig&&this.metadata.setFormat("numberOfChannels",e.mp4ChannelConfig.length),!this.options.duration)return!0;this.calculateEofDuration=!0}return!1}async parseCrc(){return this.crc=await this.tokenizer.readNumber(Token$g.INT16_BE),this.offset+=2,this.skipSideInformation()}async skipSideInformation(){const e=this.audioFrameHeader.calculateSideInfoLength();await this.tokenizer.readToken(new Token$g.Uint8ArrayType(e)),this.offset+=e,await this.readXtraInfoHeader()}async readXtraInfoHeader(){const e=await this.tokenizer.readToken(XingTag_1.InfoTagHeaderTag);switch(this.offset+=XingTag_1.InfoTagHeaderTag.len,e){case"Info":return this.metadata.setFormat("codecProfile","CBR"),this.readXingInfoHeader();case"Xing":const e=getVbrCodecProfile((await this.readXingInfoHeader()).vbrScale);return this.metadata.setFormat("codecProfile",e),null;case"Xtra":break;case"LAME":const t=await this.tokenizer.readToken(XingTag_1.LameEncoderVersion);if(this.frame_size>=this.offset+XingTag_1.LameEncoderVersion.len)return this.offset+=XingTag_1.LameEncoderVersion.len,this.metadata.setFormat("tool","LAME "+t),await this.skipFrameData(this.frame_size-this.offset),null;this.metadata.addWarning("Corrupt LAME header")}const t=this.frame_size-this.offset;return t<0?this.metadata.addWarning("Frame "+this.frameCount+"corrupt: negative frameDataLeft"):await this.skipFrameData(t),null}async readXingInfoHeader(){const e=this.tokenizer.position,t=await(0,XingTag_1.readXingHeader)(this.tokenizer);if(this.offset+=this.tokenizer.position-e,t.lame&&(this.metadata.setFormat("tool","LAME "+common.stripNulls(t.lame.version)),t.lame.extended&&(this.metadata.setFormat("trackPeakLevel",t.lame.extended.track_peak),t.lame.extended.track_gain&&this.metadata.setFormat("trackGain",t.lame.extended.track_gain.adjustment),t.lame.extended.album_gain&&this.metadata.setFormat("albumGain",t.lame.extended.album_gain.adjustment),this.metadata.setFormat("duration",t.lame.extended.music_length/1e3))),t.streamSize){const e=this.audioFrameHeader.calcDuration(t.numFrames);return this.metadata.setFormat("duration",e),debug$d("Get duration from Xing header: %s",this.metadata.format.duration),t}const r=this.frame_size-this.offset;return await this.skipFrameData(r),t}async skipFrameData(e){if(e<0)throw new Error("frame-data-left cannot be negative");await this.tokenizer.ignore(e),this.countSkipFrameData+=e}areAllSame(e){const t=e[0];return e.every((e=>e===t))}}MpegParser$1.MpegParser=MpegParser;var musepack={},MpcSv8Parser$1={},StreamVersion8={};Object.defineProperty(StreamVersion8,"t",{value:!0}),StreamVersion8.StreamReader=void 0;const Token$f=lib,debug_1$c=browser.exports,util$4=Util,debug$c=(0,debug_1$c.default)("music-metadata:parser:musepack:sv8"),PacketKey=new Token$f.StringType(2,"binary"),SH_part1={len:5,get:(e,t)=>({crc:Token$f.UINT32_LE.get(e,t),streamVersion:Token$f.UINT8.get(e,t+4)})},SH_part3={len:2,get:(e,t)=>({sampleFrequency:[44100,48e3,37800,32e3][util$4.getBitAllignedNumber(e,t,0,3)],maxUsedBands:util$4.getBitAllignedNumber(e,t,3,5),channelCount:util$4.getBitAllignedNumber(e,t+1,0,4)+1,msUsed:util$4.isBitSet(e,t+1,4),audioBlockFrames:util$4.getBitAllignedNumber(e,t+1,5,3)})};class StreamReader{constructor(e){this.tokenizer=e}async readPacketHeader(){const e=await this.tokenizer.readToken(PacketKey),t=await this.readVariableSizeField();return{key:e,payloadLength:t.value-2-t.len}}async readStreamHeader(e){const t={};debug$c(`Reading SH at offset=${this.tokenizer.position}`);const r=await this.tokenizer.readToken(SH_part1);e-=SH_part1.len,Object.assign(t,r),debug$c(`SH.streamVersion = ${r.streamVersion}`);const a=await this.readVariableSizeField();e-=a.len,t.sampleCount=a.value;const i=await this.readVariableSizeField();e-=i.len,t.beginningOfSilence=i.value;const s=await this.tokenizer.readToken(SH_part3);return e-=SH_part3.len,Object.assign(t,s),await this.tokenizer.ignore(e),t}async readVariableSizeField(e=1,t=0){let r=await this.tokenizer.readNumber(Token$f.UINT8);return 0==(128&r)?{len:e,value:t+r}:(r&=127,r+=t,this.readVariableSizeField(e+1,r<<7))}}StreamVersion8.StreamReader=StreamReader,Object.defineProperty(MpcSv8Parser$1,"t",{value:!0}),MpcSv8Parser$1.MpcSv8Parser=void 0;const debug_1$b=browser.exports,BasicParser_1$6=BasicParser$1,APEv2Parser_1$4=APEv2Parser$1,FourCC_1$6=FourCC,SV8=StreamVersion8,debug$b=(0,debug_1$b.default)("music-metadata:parser:musepack");class MpcSv8Parser extends BasicParser_1$6.BasicParser{constructor(){super(...arguments),this.audioLength=0}async parse(){if("MPCK"!==await this.tokenizer.readToken(FourCC_1$6.FourCcToken))throw new Error("Invalid Magic number");return this.metadata.setFormat("container","Musepack, SV8"),this.parsePacket()}async parsePacket(){const e=new SV8.StreamReader(this.tokenizer);for(;;){const t=await e.readPacketHeader();switch(debug$b(`packet-header key=${t.key}, payloadLength=${t.payloadLength}`),t.key){case"SH":const r=await e.readStreamHeader(t.payloadLength);this.metadata.setFormat("numberOfSamples",r.sampleCount),this.metadata.setFormat("sampleRate",r.sampleFrequency),this.metadata.setFormat("duration",r.sampleCount/r.sampleFrequency),this.metadata.setFormat("numberOfChannels",r.channelCount);break;case"AP":this.audioLength+=t.payloadLength,await this.tokenizer.ignore(t.payloadLength);break;case"RG":case"EI":case"SO":case"ST":case"CT":await this.tokenizer.ignore(t.payloadLength);break;case"SE":return this.metadata.setFormat("bitrate",8*this.audioLength/this.metadata.format.duration),APEv2Parser_1$4.APEv2Parser.tryParseApeHeader(this.metadata,this.tokenizer,this.options);default:throw new Error(`Unexpected header: ${t.key}`)}}}}MpcSv8Parser$1.MpcSv8Parser=MpcSv8Parser;var MpcSv7Parser$1={},BitReader$1={};Object.defineProperty(BitReader$1,"t",{value:!0}),BitReader$1.BitReader=void 0;const Token$e=lib;class BitReader{constructor(e){this.tokenizer=e,this.pos=0,this.dword=void 0}async read(e){for(;void 0===this.dword;)this.dword=await this.tokenizer.readToken(Token$e.UINT32_LE);let t=this.dword;return this.pos+=e,this.pos<32?(t>>>=32-this.pos,t&(1<<e)-1):(this.pos-=32,0===this.pos?(this.dword=void 0,t&(1<<e)-1):(this.dword=await this.tokenizer.readToken(Token$e.UINT32_LE),this.pos&&(t<<=this.pos,t|=this.dword>>>32-this.pos),t&(1<<e)-1))}async ignore(e){if(this.pos>0){const t=32-this.pos;this.dword=void 0,e-=t,this.pos=0}const t=e%32,r=(e-t)/32;return await this.tokenizer.ignore(4*r),this.read(t)}}BitReader$1.BitReader=BitReader;var StreamVersion7={};Object.defineProperty(StreamVersion7,"t",{value:!0}),StreamVersion7.Header=void 0;const Token$d=lib,util$3=Util;StreamVersion7.Header={len:24,get:(e,t)=>{const r={signature:Buffer.from(e).toString("latin1",t,t+3),streamMinorVersion:util$3.getBitAllignedNumber(e,t+3,0,4),streamMajorVersion:util$3.getBitAllignedNumber(e,t+3,4,4),frameCount:Token$d.UINT32_LE.get(e,t+4),maxLevel:Token$d.UINT16_LE.get(e,t+8),sampleFrequency:[44100,48e3,37800,32e3][util$3.getBitAllignedNumber(e,t+10,0,2)],link:util$3.getBitAllignedNumber(e,t+10,2,2),profile:util$3.getBitAllignedNumber(e,t+10,4,4),maxBand:util$3.getBitAllignedNumber(e,t+11,0,6),intensityStereo:util$3.isBitSet(e,t+11,6),midSideStereo:util$3.isBitSet(e,t+11,7),titlePeak:Token$d.UINT16_LE.get(e,t+12),titleGain:Token$d.UINT16_LE.get(e,t+14),albumPeak:Token$d.UINT16_LE.get(e,t+16),albumGain:Token$d.UINT16_LE.get(e,t+18),lastFrameLength:Token$d.UINT32_LE.get(e,t+20)>>>20&2047,trueGapless:util$3.isBitSet(e,t+23,0)};return r.lastFrameLength=r.trueGapless?Token$d.UINT32_LE.get(e,20)>>>20&2047:0,r}},Object.defineProperty(MpcSv7Parser$1,"t",{value:!0}),MpcSv7Parser$1.MpcSv7Parser=void 0;const debug_1$a=browser.exports,BasicParser_1$5=BasicParser$1,APEv2Parser_1$3=APEv2Parser$1,BitReader_1=BitReader$1,SV7=StreamVersion7,debug$a=(0,debug_1$a.default)("music-metadata:parser:musepack");class MpcSv7Parser extends BasicParser_1$5.BasicParser{constructor(){super(...arguments),this.audioLength=0}async parse(){const e=await this.tokenizer.readToken(SV7.Header);if("MP+"!==e.signature)throw new Error("Unexpected magic number");debug$a(`stream-version=${e.streamMajorVersion}.${e.streamMinorVersion}`),this.metadata.setFormat("container","Musepack, SV7"),this.metadata.setFormat("sampleRate",e.sampleFrequency);const t=1152*(e.frameCount-1)+e.lastFrameLength;this.metadata.setFormat("numberOfSamples",t),this.duration=t/e.sampleFrequency,this.metadata.setFormat("duration",this.duration),this.bitreader=new BitReader_1.BitReader(this.tokenizer),this.metadata.setFormat("numberOfChannels",e.midSideStereo||e.intensityStereo?2:1);const r=await this.bitreader.read(8);return this.metadata.setFormat("codec",(r/100).toFixed(2)),await this.skipAudioData(e.frameCount),debug$a(`End of audio stream, switching to APEv2, offset=${this.tokenizer.position}`),APEv2Parser_1$3.APEv2Parser.tryParseApeHeader(this.metadata,this.tokenizer,this.options)}async skipAudioData(e){for(;e-- >0;){const e=await this.bitreader.read(20);this.audioLength+=20+e,await this.bitreader.ignore(e)}const t=await this.bitreader.read(11);this.audioLength+=t,this.metadata.setFormat("bitrate",this.audioLength/this.duration)}}MpcSv7Parser$1.MpcSv7Parser=MpcSv7Parser,Object.defineProperty(musepack,"t",{value:!0});const debug_1$9=browser.exports,Token$c=lib,AbstractID3Parser_1$1=AbstractID3Parser$1,MpcSv8Parser_1=MpcSv8Parser$1,MpcSv7Parser_1=MpcSv7Parser$1,debug$9=(0,debug_1$9.default)("music-metadata:parser:musepack");class MusepackParser extends AbstractID3Parser_1$1.AbstractID3Parser{async postId3v2Parse(){let e;switch(await this.tokenizer.peekToken(new Token$c.StringType(3,"binary"))){case"MP+":debug$9("Musepack stream-version 7"),e=new MpcSv7Parser_1.MpcSv7Parser;break;case"MPC":debug$9("Musepack stream-version 8"),e=new MpcSv8Parser_1.MpcSv8Parser;break;default:throw new Error("Invalid Musepack signature prefix")}return e.init(this.metadata,this.tokenizer,this.options),e.parse()}}musepack.default=MusepackParser;var OggParser$1={},OpusParser$1={},Opus$1={};Object.defineProperty(Opus$1,"t",{value:!0}),Opus$1.IdHeader=void 0;const Token$b=lib;class IdHeader{constructor(e){if(this.len=e,e<19)throw new Error("ID-header-page 0 should be at least 19 bytes long")}get(e,t){return{magicSignature:new Token$b.StringType(8,"ascii").get(e,t+0),version:e.readUInt8(t+8),channelCount:e.readUInt8(t+9),preSkip:e.readInt16LE(t+10),inputSampleRate:e.readInt32LE(t+12),outputGain:e.readInt16LE(t+16),channelMapping:e.readUInt8(t+18)}}}Opus$1.IdHeader=IdHeader,Object.defineProperty(OpusParser$1,"t",{value:!0}),OpusParser$1.OpusParser=void 0;const Token$a=lib,VorbisParser_1$2=VorbisParser$1,Opus=Opus$1;class OpusParser extends VorbisParser_1$2.VorbisParser{constructor(e,t,r){super(e,t),this.tokenizer=r,this.lastPos=-1}parseFirstPage(e,t){if(this.metadata.setFormat("codec","Opus"),this.idHeader=new Opus.IdHeader(t.length).get(t,0),"OpusHead"!==this.idHeader.magicSignature)throw new Error("Illegal ogg/Opus magic-signature");this.metadata.setFormat("sampleRate",this.idHeader.inputSampleRate),this.metadata.setFormat("numberOfChannels",this.idHeader.channelCount)}parseFullPage(e){"OpusTags"===new Token$a.StringType(8,"ascii").get(e,0)&&(this.parseUserCommentList(e,8),this.lastPos=this.tokenizer.position-e.length)}calculateDuration(e){if(this.metadata.format.sampleRate&&e.absoluteGranulePosition>=0){const t=e.absoluteGranulePosition-this.idHeader.preSkip;if(this.metadata.setFormat("numberOfSamples",t),this.metadata.setFormat("duration",t/48e3),-1!==this.lastPos&&this.tokenizer.fileInfo.size&&this.metadata.format.duration){const e=this.tokenizer.fileInfo.size-this.lastPos;this.metadata.setFormat("bitrate",8*e/this.metadata.format.duration)}}}}OpusParser$1.OpusParser=OpusParser;var SpeexParser$1={},Speex$1={};Object.defineProperty(Speex$1,"t",{value:!0}),Speex$1.Header=void 0;const Token$9=lib,util$2=Util;Speex$1.Header={len:80,get:(e,t)=>({speex:new Token$9.StringType(8,"ascii").get(e,t+0),version:util$2.trimRightNull(new Token$9.StringType(20,"ascii").get(e,t+8)),version_id:e.readInt32LE(t+28),header_size:e.readInt32LE(t+32),rate:e.readInt32LE(t+36),mode:e.readInt32LE(t+40),mode_bitstream_version:e.readInt32LE(t+44),nb_channels:e.readInt32LE(t+48),bitrate:e.readInt32LE(t+52),frame_size:e.readInt32LE(t+56),vbr:e.readInt32LE(t+60),frames_per_packet:e.readInt32LE(t+64),extra_headers:e.readInt32LE(t+68),reserved1:e.readInt32LE(t+72),reserved2:e.readInt32LE(t+76)})},Object.defineProperty(SpeexParser$1,"t",{value:!0}),SpeexParser$1.SpeexParser=void 0;const debug_1$8=browser.exports,VorbisParser_1$1=VorbisParser$1,Speex=Speex$1,debug$8=(0,debug_1$8.default)("music-metadata:parser:ogg:speex");class SpeexParser extends VorbisParser_1$1.VorbisParser{constructor(e,t,r){super(e,t),this.tokenizer=r}parseFirstPage(e,t){debug$8("First Ogg/Speex page");const r=Speex.Header.get(t,0);this.metadata.setFormat("codec",`Speex ${r.version}`),this.metadata.setFormat("numberOfChannels",r.nb_channels),this.metadata.setFormat("sampleRate",r.rate),-1!==r.bitrate&&this.metadata.setFormat("bitrate",r.bitrate)}}SpeexParser$1.SpeexParser=SpeexParser;var TheoraParser$1={},Theora={};Object.defineProperty(Theora,"t",{value:!0}),Theora.IdentificationHeader=void 0;const Token$8=lib;Theora.IdentificationHeader={len:42,get:(e,t)=>({id:new Token$8.StringType(7,"ascii").get(e,t),vmaj:e.readUInt8(t+7),vmin:e.readUInt8(t+8),vrev:e.readUInt8(t+9),vmbw:e.readUInt16BE(t+10),vmbh:e.readUInt16BE(t+17),nombr:Token$8.UINT24_BE.get(e,t+37),nqual:e.readUInt8(t+40)})},Object.defineProperty(TheoraParser$1,"t",{value:!0}),TheoraParser$1.TheoraParser=void 0;const debug_1$7=browser.exports,Theora_1=Theora,debug$7=(0,debug_1$7.default)("music-metadata:parser:ogg:theora");class TheoraParser{constructor(e,t,r){this.metadata=e,this.tokenizer=r}parsePage(e,t){e.headerType.firstPage&&this.parseFirstPage(e,t)}flush(){debug$7("flush")}calculateDuration(e){debug$7("duration calculation not implemented")}parseFirstPage(e,t){debug$7("First Ogg/Theora page"),this.metadata.setFormat("codec","Theora");const r=Theora_1.IdentificationHeader.get(t,0);this.metadata.setFormat("bitrate",r.nombr)}}TheoraParser$1.TheoraParser=TheoraParser,Object.defineProperty(OggParser$1,"t",{value:!0}),OggParser$1.OggParser=OggParser$1.SegmentTable=void 0;const Token$7=lib,core_1=core$2,debug_1$6=browser.exports,util$1=Util,FourCC_1$5=FourCC,BasicParser_1$4=BasicParser$1,VorbisParser_1=VorbisParser$1,OpusParser_1=OpusParser$1,SpeexParser_1=SpeexParser$1,TheoraParser_1=TheoraParser$1,debug$6=(0,debug_1$6.default)("music-metadata:parser:ogg");class SegmentTable{constructor(e){this.len=e.page_segments}static sum(e,t,r){let a=0;for(let i=t;i<t+r;++i)a+=e[i];return a}get(e,t){return{totalPageSize:SegmentTable.sum(e,t,this.len)}}}OggParser$1.SegmentTable=SegmentTable;class OggParser extends BasicParser_1$4.BasicParser{async parse(){debug$6("pos=%s, parsePage()",this.tokenizer.position);try{let e;do{if(e=await this.tokenizer.readToken(OggParser.Header),"OggS"!==e.capturePattern)throw new Error("Invalid Ogg capture pattern");this.metadata.setFormat("container","Ogg"),this.header=e,this.pageNumber=e.pageSequenceNo,debug$6("page#=%s, Ogg.id=%s",e.pageSequenceNo,e.capturePattern);const t=await this.tokenizer.readToken(new SegmentTable(e));debug$6("totalPageSize=%s",t.totalPageSize);const r=await this.tokenizer.readToken(new Token$7.Uint8ArrayType(t.totalPageSize));if(debug$6("firstPage=%s, lastPage=%s, continued=%s",e.headerType.firstPage,e.headerType.lastPage,e.headerType.continued),e.headerType.firstPage){const e=new Token$7.StringType(7,"ascii").get(Buffer.from(r),0);switch(e){case"vorbis":debug$6("Set page consumer to Ogg/Vorbis"),this.pageConsumer=new VorbisParser_1.VorbisParser(this.metadata,this.options);break;case"OpusHea":debug$6("Set page consumer to Ogg/Opus"),this.pageConsumer=new OpusParser_1.OpusParser(this.metadata,this.options,this.tokenizer);break;case"Speex  ":debug$6("Set page consumer to Ogg/Speex"),this.pageConsumer=new SpeexParser_1.SpeexParser(this.metadata,this.options,this.tokenizer);break;case"fishead":case"\0theora":debug$6("Set page consumer to Ogg/Theora"),this.pageConsumer=new TheoraParser_1.TheoraParser(this.metadata,this.options,this.tokenizer);break;default:throw new Error("gg audio-codec not recognized (id="+e+")")}}this.pageConsumer.parsePage(e,r)}while(!e.headerType.lastPage)}catch(e){if(e instanceof core_1.EndOfStreamError)this.metadata.addWarning("Last OGG-page is not marked with last-page flag"),debug$6("End-of-stream"),this.metadata.addWarning("Last OGG-page is not marked with last-page flag"),this.header&&this.pageConsumer.calculateDuration(this.header);else{if(!e.message.startsWith("FourCC"))throw e;this.pageNumber>0&&(this.metadata.addWarning("Invalid FourCC ID, maybe last OGG-page is not marked with last-page flag"),this.pageConsumer.flush())}}}}OggParser$1.OggParser=OggParser,OggParser.Header={len:27,get:(e,t)=>({capturePattern:FourCC_1$5.FourCcToken.get(e,t),version:Token$7.UINT8.get(e,t+4),headerType:{continued:util$1.getBit(e,t+5,0),firstPage:util$1.getBit(e,t+5,1),lastPage:util$1.getBit(e,t+5,2)},absoluteGranulePosition:Number(Token$7.UINT64_LE.get(e,t+6)),streamSerialNumber:Token$7.UINT32_LE.get(e,t+14),pageSequenceNo:Token$7.UINT32_LE.get(e,t+18),pageChecksum:Token$7.UINT32_LE.get(e,t+22),page_segments:Token$7.UINT8.get(e,t+26)})};var WaveParser$1={},RiffChunk={};Object.defineProperty(RiffChunk,"t",{value:!0}),RiffChunk.ListInfoTagValue=RiffChunk.Header=void 0;const Token$6=lib;RiffChunk.Header={len:8,get:(e,t)=>({chunkID:e.toString("binary",t,t+4),chunkSize:Token$6.UINT32_LE.get(e,4)})};class ListInfoTagValue{constructor(e){this.tagHeader=e,this.len=e.chunkSize,this.len+=1&this.len}get(e,t){return new Token$6.StringType(this.tagHeader.chunkSize,"ascii").get(e,t)}}RiffChunk.ListInfoTagValue=ListInfoTagValue;var WaveChunk$1={};!function(e){var t;Object.defineProperty(e,"t",{value:!0}),e.FactChunk=e.Format=e.WaveFormat=void 0,(t=e.WaveFormat||(e.WaveFormat={}))[t.PCM=1]="PCM",t[t.ADPCM=2]="ADPCM",t[t.IEEE_FLOAT=3]="IEEE_FLOAT",t[t.MPEG_ADTS_AAC=5632]="MPEG_ADTS_AAC",t[t.MPEG_LOAS=5634]="MPEG_LOAS",t[t.RAW_AAC1=255]="RAW_AAC1",t[t.DOLBY_AC3_SPDIF=146]="DOLBY_AC3_SPDIF",t[t.DVM=8192]="DVM",t[t.RAW_SPORT=576]="RAW_SPORT",t[t.ESST_AC3=577]="ESST_AC3",t[t.DRM=9]="DRM",t[t.DTS2=8193]="DTS2",t[t.MPEG=80]="MPEG",e.Format=class{constructor(e){if(e.chunkSize<16)throw new Error("Invalid chunk size");this.len=e.chunkSize}get(e,t){return{wFormatTag:e.readUInt16LE(t),nChannels:e.readUInt16LE(t+2),nSamplesPerSec:e.readUInt32LE(t+4),nAvgBytesPerSec:e.readUInt32LE(t+8),nBlockAlign:e.readUInt16LE(t+12),wBitsPerSample:e.readUInt16LE(t+14)}}},e.FactChunk=class{constructor(e){if(e.chunkSize<4)throw new Error("Invalid fact chunk size.");this.len=e.chunkSize}get(e,t){return{dwSampleLength:e.readUInt32LE(t)}}}}(WaveChunk$1);var BwfChunk={};Object.defineProperty(BwfChunk,"t",{value:!0}),BwfChunk.BroadcastAudioExtensionChunk=void 0;const Token$5=lib;BwfChunk.BroadcastAudioExtensionChunk={len:420,get:(e,t)=>({description:new Token$5.StringType(256,"ascii").get(e,t).trim(),originator:new Token$5.StringType(32,"ascii").get(e,t+256).trim(),originatorReference:new Token$5.StringType(32,"ascii").get(e,t+288).trim(),originationDate:new Token$5.StringType(10,"ascii").get(e,t+320).trim(),originationTime:new Token$5.StringType(8,"ascii").get(e,t+330).trim(),timeReferenceLow:Token$5.UINT32_LE.get(e,t+338),timeReferenceHigh:Token$5.UINT32_LE.get(e,t+342),version:Token$5.UINT16_LE.get(e,t+346),umid:new Token$5.Uint8ArrayType(64).get(e,t+348),loudnessValue:Token$5.UINT16_LE.get(e,t+412),maxTruePeakLevel:Token$5.UINT16_LE.get(e,t+414),maxMomentaryLoudness:Token$5.UINT16_LE.get(e,t+416),maxShortTermLoudness:Token$5.UINT16_LE.get(e,t+418)})},Object.defineProperty(WaveParser$1,"t",{value:!0}),WaveParser$1.WaveParser=void 0;const strtok3$2=core$2,Token$4=lib,debug_1$5=browser.exports,riff=RiffChunk,WaveChunk=WaveChunk$1,ID3v2Parser_1$2=ID3v2Parser$1,util=Util,FourCC_1$4=FourCC,BasicParser_1$3=BasicParser$1,BwfChunk_1=BwfChunk,debug$5=(0,debug_1$5.default)("music-metadata:parser:RIFF");class WaveParser extends BasicParser_1$3.BasicParser{async parse(){const e=await this.tokenizer.readToken(riff.Header);if(debug$5(`pos=${this.tokenizer.position}, parse: chunkID=${e.chunkID}`),"RIFF"===e.chunkID)return this.parseRiffChunk(e.chunkSize).catch((e=>{if(!(e instanceof strtok3$2.EndOfStreamError))throw e}))}async parseRiffChunk(e){const t=await this.tokenizer.readToken(FourCC_1$4.FourCcToken);if(this.metadata.setFormat("container",t),"WAVE"===t)return this.readWaveChunk(e-FourCC_1$4.FourCcToken.len);throw new Error(`Unsupported RIFF format: RIFF/${t}`)}async readWaveChunk(e){for(;e>=riff.Header.len;){const t=await this.tokenizer.readToken(riff.Header);switch(e-=riff.Header.len+t.chunkSize,t.chunkSize>e&&this.metadata.addWarning("Data chunk size exceeds file size"),this.header=t,debug$5(`pos=${this.tokenizer.position}, readChunk: chunkID=RIFF/WAVE/${t.chunkID}`),t.chunkID){case"LIST":await this.parseListTag(t);break;case"fact":this.metadata.setFormat("lossless",!1),this.fact=await this.tokenizer.readToken(new WaveChunk.FactChunk(t));break;case"fmt ":const e=await this.tokenizer.readToken(new WaveChunk.Format(t));let r=WaveChunk.WaveFormat[e.wFormatTag];r||(debug$5("WAVE/non-PCM format="+e.wFormatTag),r="non-PCM ("+e.wFormatTag+")"),this.metadata.setFormat("codec",r),this.metadata.setFormat("bitsPerSample",e.wBitsPerSample),this.metadata.setFormat("sampleRate",e.nSamplesPerSec),this.metadata.setFormat("numberOfChannels",e.nChannels),this.metadata.setFormat("bitrate",e.nBlockAlign*e.nSamplesPerSec*8),this.blockAlign=e.nBlockAlign;break;case"id3 ":case"ID3 ":const a=await this.tokenizer.readToken(new Token$4.Uint8ArrayType(t.chunkSize)),i=strtok3$2.fromBuffer(a);await(new ID3v2Parser_1$2.ID3v2Parser).parse(this.metadata,i,this.options);break;case"data":!1!==this.metadata.format.lossless&&this.metadata.setFormat("lossless",!0);let s=t.chunkSize;if(this.tokenizer.fileInfo.size){const e=this.tokenizer.fileInfo.size-this.tokenizer.position;e<s&&(this.metadata.addWarning("data chunk length exceeding file length"),s=e)}const n=this.fact?this.fact.dwSampleLength:4294967295===s?void 0:s/this.blockAlign;n&&(this.metadata.setFormat("numberOfSamples",n),this.metadata.setFormat("duration",n/this.metadata.format.sampleRate)),this.metadata.setFormat("bitrate",this.metadata.format.numberOfChannels*this.blockAlign*this.metadata.format.sampleRate),await this.tokenizer.ignore(t.chunkSize);break;case"bext":const o=await this.tokenizer.readToken(BwfChunk_1.BroadcastAudioExtensionChunk);Object.keys(o).forEach((e=>{this.metadata.addTag("exif","bext."+e,o[e])}));break;case"\0\0\0\0":debug$5(`Ignore padding chunk: RIFF/${t.chunkID} of ${t.chunkSize} bytes`),this.metadata.addWarning("Ignore chunk: RIFF/"+t.chunkID),await this.tokenizer.ignore(t.chunkSize);break;default:debug$5(`Ignore chunk: RIFF/${t.chunkID} of ${t.chunkSize} bytes`),this.metadata.addWarning("Ignore chunk: RIFF/"+t.chunkID),await this.tokenizer.ignore(t.chunkSize)}this.header.chunkSize%2==1&&(debug$5("Read odd padding byte"),await this.tokenizer.ignore(1))}}async parseListTag(e){const t=await this.tokenizer.readToken(new Token$4.StringType(4,"binary"));return debug$5("pos=%s, parseListTag: chunkID=RIFF/WAVE/LIST/%s",this.tokenizer.position,t),"INFO"===t?this.parseRiffInfoTags(e.chunkSize-4):(this.metadata.addWarning("Ignore chunk: RIFF/WAVE/LIST/"+t),debug$5("Ignoring chunkID=RIFF/WAVE/LIST/"+t),this.tokenizer.ignore(e.chunkSize-4).then())}async parseRiffInfoTags(e){for(;e>=8;){const t=await this.tokenizer.readToken(riff.Header),r=new riff.ListInfoTagValue(t),a=await this.tokenizer.readToken(r);this.addTag(t.chunkID,util.stripNulls(a)),e-=8+r.len}if(0!==e)throw Error("Illegal remaining size: "+e)}addTag(e,t){this.metadata.addTag("exif",e,t)}}WaveParser$1.WaveParser=WaveParser;var WavPackParser$1={},WavPackToken={};Object.defineProperty(WavPackToken,"t",{value:!0}),WavPackToken.WavPack=void 0;const Token$3=lib,FourCC_1$3=FourCC,SampleRates=[6e3,8e3,9600,11025,12e3,16e3,22050,24e3,32e3,44100,48e3,64e3,88200,96e3,192e3,-1];class WavPack{static isBitSet(e,t){return 1===WavPack.getBitAllignedNumber(e,t,1)}static getBitAllignedNumber(e,t,r){return e>>>t&4294967295>>>32-r}}WavPackToken.WavPack=WavPack,WavPack.BlockHeaderToken={len:32,get:(e,t)=>{const r=Token$3.UINT32_LE.get(e,t+24),a={BlockID:FourCC_1$3.FourCcToken.get(e,t),blockSize:Token$3.UINT32_LE.get(e,t+4),version:Token$3.UINT16_LE.get(e,t+8),totalSamples:Token$3.UINT32_LE.get(e,t+12),blockIndex:Token$3.UINT32_LE.get(e,t+16),blockSamples:Token$3.UINT32_LE.get(e,t+20),flags:{bitsPerSample:8*(1+WavPack.getBitAllignedNumber(r,0,2)),isMono:WavPack.isBitSet(r,2),isHybrid:WavPack.isBitSet(r,3),isJointStereo:WavPack.isBitSet(r,4),crossChannel:WavPack.isBitSet(r,5),hybridNoiseShaping:WavPack.isBitSet(r,6),floatingPoint:WavPack.isBitSet(r,7),samplingRate:SampleRates[WavPack.getBitAllignedNumber(r,23,4)],isDSD:WavPack.isBitSet(r,31)},crc:new Token$3.Uint8ArrayType(4).get(e,t+28)};return a.flags.isDSD&&(a.totalSamples*=8),a}},WavPack.MetadataIdToken={len:1,get:(e,t)=>({functionId:WavPack.getBitAllignedNumber(e[t],0,6),isOptional:WavPack.isBitSet(e[t],5),isOddSize:WavPack.isBitSet(e[t],6),largeBlock:WavPack.isBitSet(e[t],7)})},Object.defineProperty(WavPackParser$1,"t",{value:!0}),WavPackParser$1.WavPackParser=void 0;const Token$2=lib,APEv2Parser_1$2=APEv2Parser$1,FourCC_1$2=FourCC,BasicParser_1$2=BasicParser$1,WavPackToken_1=WavPackToken,debug_1$4=browser.exports,debug$4=(0,debug_1$4.default)("music-metadata:parser:WavPack");class WavPackParser extends BasicParser_1$2.BasicParser{async parse(){return this.audioDataSize=0,await this.parseWavPackBlocks(),APEv2Parser_1$2.APEv2Parser.tryParseApeHeader(this.metadata,this.tokenizer,this.options)}async parseWavPackBlocks(){do{if("wvpk"!==await this.tokenizer.peekToken(FourCC_1$2.FourCcToken))break;const e=await this.tokenizer.readToken(WavPackToken_1.WavPack.BlockHeaderToken);if("wvpk"!==e.BlockID)throw new Error("Invalid WavPack Block-ID");debug$4(`WavPack header blockIndex=${e.blockIndex}, len=${WavPackToken_1.WavPack.BlockHeaderToken.len}`),0!==e.blockIndex||this.metadata.format.container||(this.metadata.setFormat("container","WavPack"),this.metadata.setFormat("lossless",!e.flags.isHybrid),this.metadata.setFormat("bitsPerSample",e.flags.bitsPerSample),e.flags.isDSD||(this.metadata.setFormat("sampleRate",e.flags.samplingRate),this.metadata.setFormat("duration",e.totalSamples/e.flags.samplingRate)),this.metadata.setFormat("numberOfChannels",e.flags.isMono?1:2),this.metadata.setFormat("numberOfSamples",e.totalSamples),this.metadata.setFormat("codec",e.flags.isDSD?"DSD":"PCM"));const t=e.blockSize-(WavPackToken_1.WavPack.BlockHeaderToken.len-8);await(0===e.blockIndex?this.parseMetadataSubBlock(e,t):this.tokenizer.ignore(t)),e.blockSamples>0&&(this.audioDataSize+=e.blockSize)}while(!this.tokenizer.fileInfo.size||this.tokenizer.fileInfo.size-this.tokenizer.position>=WavPackToken_1.WavPack.BlockHeaderToken.len);this.metadata.setFormat("bitrate",8*this.audioDataSize/this.metadata.format.duration)}async parseMetadataSubBlock(e,t){for(;t>WavPackToken_1.WavPack.MetadataIdToken.len;){const r=await this.tokenizer.readToken(WavPackToken_1.WavPack.MetadataIdToken),a=await this.tokenizer.readNumber(r.largeBlock?Token$2.UINT24_LE:Token$2.UINT8),i=Buffer.alloc(2*a-(r.isOddSize?1:0));switch(await this.tokenizer.readBuffer(i),debug$4(`Metadata Sub-Blocks functionId=0x${r.functionId.toString(16)}, id.largeBlock=${r.largeBlock},data-size=${i.length}`),r.functionId){case 0:break;case 14:debug$4("ID_DSD_BLOCK");const t=1<<i.readUInt8(0),a=e.flags.samplingRate*t*8;if(!e.flags.isDSD)throw new Error("Only expect DSD block if DSD-flag is set");this.metadata.setFormat("sampleRate",a),this.metadata.setFormat("duration",e.totalSamples/a);break;case 36:debug$4("ID_ALT_TRAILER: trailer for non-wav files");break;case 38:this.metadata.setFormat("audioMD5",i);break;case 47:debug$4(`ID_BLOCK_CHECKSUM: checksum=${i.toString("hex")}`);break;default:debug$4(`Ignore unsupported meta-sub-block-id functionId=0x${r.functionId.toString(16)}`)}t-=WavPackToken_1.WavPack.MetadataIdToken.len+(r.largeBlock?Token$2.UINT24_LE.len:Token$2.UINT8.len)+2*a,debug$4(`remainingLength=${t}`),r.isOddSize&&this.tokenizer.ignore(1)}if(0!==t)throw new Error("metadata-sub-block should fit it remaining length")}}WavPackParser$1.WavPackParser=WavPackParser;var DsfParser$1={},DsfChunk={};!function(e){Object.defineProperty(e,"t",{value:!0}),e.FormatChunk=e.ChannelType=e.DsdChunk=e.ChunkHeader=void 0;const t=lib,r=FourCC;var a;e.ChunkHeader={len:12,get:(e,a)=>({id:r.FourCcToken.get(e,a),size:t.UINT64_LE.get(e,a+4)})},e.DsdChunk={len:16,get:(e,r)=>({fileSize:t.INT64_LE.get(e,r),metadataPointer:t.INT64_LE.get(e,r+8)})},(a=e.ChannelType||(e.ChannelType={}))[a.mono=1]="mono",a[a.stereo=2]="stereo",a[a.channels=3]="channels",a[a.quad=4]="quad",a[a["4 channels"]=5]="4 channels",a[a["5 channels"]=6]="5 channels",a[a["5.1 channels"]=7]="5.1 channels",e.FormatChunk={len:40,get:(e,r)=>({formatVersion:t.INT32_LE.get(e,r),formatID:t.INT32_LE.get(e,r+4),channelType:t.INT32_LE.get(e,r+8),channelNum:t.INT32_LE.get(e,r+12),samplingFrequency:t.INT32_LE.get(e,r+16),bitsPerSample:t.INT32_LE.get(e,r+20),sampleCount:t.INT64_LE.get(e,r+24),blockSizePerChannel:t.INT32_LE.get(e,r+32)})}}(DsfChunk),Object.defineProperty(DsfParser$1,"t",{value:!0}),DsfParser$1.DsfParser=void 0;const debug_1$3=browser.exports,AbstractID3Parser_1=AbstractID3Parser$1,DsfChunk_1=DsfChunk,ID3v2Parser_1$1=ID3v2Parser$1,debug$3=(0,debug_1$3.default)("music-metadata:parser:DSF");class DsfParser extends AbstractID3Parser_1.AbstractID3Parser{async postId3v2Parse(){const e=this.tokenizer.position,t=await this.tokenizer.readToken(DsfChunk_1.ChunkHeader);if("DSD "!==t.id)throw new Error("Invalid chunk signature");this.metadata.setFormat("container","DSF"),this.metadata.setFormat("lossless",!0);const r=await this.tokenizer.readToken(DsfChunk_1.DsdChunk);if(r.metadataPointer!==BigInt(0))return debug$3(`expect ID3v2 at offset=${r.metadataPointer}`),await this.parseChunks(r.fileSize-t.size),await this.tokenizer.ignore(Number(r.metadataPointer)-this.tokenizer.position-e),(new ID3v2Parser_1$1.ID3v2Parser).parse(this.metadata,this.tokenizer,this.options);debug$3("No ID3v2 tag present")}async parseChunks(e){for(;e>=DsfChunk_1.ChunkHeader.len;){const t=await this.tokenizer.readToken(DsfChunk_1.ChunkHeader);if(debug$3(`Parsing chunk name=${t.id} size=${t.size}`),"fmt "===t.id){const e=await this.tokenizer.readToken(DsfChunk_1.FormatChunk);this.metadata.setFormat("numberOfChannels",e.channelNum),this.metadata.setFormat("sampleRate",e.samplingFrequency),this.metadata.setFormat("bitsPerSample",e.bitsPerSample),this.metadata.setFormat("numberOfSamples",e.sampleCount),this.metadata.setFormat("duration",Number(e.sampleCount)/e.samplingFrequency);const t=e.bitsPerSample*e.samplingFrequency*e.channelNum;return void this.metadata.setFormat("bitrate",t)}this.tokenizer.ignore(Number(t.size)-DsfChunk_1.ChunkHeader.len),e-=t.size}}}DsfParser$1.DsfParser=DsfParser;var DsdiffParser$1={},DsdiffToken={};Object.defineProperty(DsdiffToken,"t",{value:!0}),DsdiffToken.ChunkHeader64=void 0;const Token$1=lib,FourCC_1$1=FourCC;DsdiffToken.ChunkHeader64={len:12,get:(e,t)=>({chunkID:FourCC_1$1.FourCcToken.get(e,t),chunkSize:Token$1.INT64_BE.get(e,t+4)})},Object.defineProperty(DsdiffParser$1,"t",{value:!0}),DsdiffParser$1.DsdiffParser=void 0;const Token=lib,debug_1$2=browser.exports,strtok3$1=core$2,FourCC_1=FourCC,BasicParser_1$1=BasicParser$1,ID3v2Parser_1=ID3v2Parser$1,DsdiffToken_1=DsdiffToken,debug$2=(0,debug_1$2.default)("music-metadata:parser:aiff");class DsdiffParser extends BasicParser_1$1.BasicParser{async parse(){const e=await this.tokenizer.readToken(DsdiffToken_1.ChunkHeader64);if("FRM8"!==e.chunkID)throw new Error("Unexpected chunk-ID");const t=(await this.tokenizer.readToken(FourCC_1.FourCcToken)).trim();if("DSD"===t)return this.metadata.setFormat("container",`DSDIFF/${t}`),this.metadata.setFormat("lossless",!0),this.readFmt8Chunks(e.chunkSize-BigInt(FourCC_1.FourCcToken.len));throw Error(`Unsupported DSDIFF type: ${t}`)}async readFmt8Chunks(e){for(;e>=DsdiffToken_1.ChunkHeader64.len;){const t=await this.tokenizer.readToken(DsdiffToken_1.ChunkHeader64);debug$2(`Chunk id=${t.chunkID}`),await this.readData(t),e-=BigInt(DsdiffToken_1.ChunkHeader64.len)+t.chunkSize}}async readData(e){debug$2(`Reading data of chunk[ID=${e.chunkID}, size=${e.chunkSize}]`);const t=this.tokenizer.position;switch(e.chunkID.trim()){case"FVER":const t=await this.tokenizer.readToken(Token.UINT32_LE);debug$2(`DSDIFF version=${t}`);break;case"PROP":if("SND "!==await this.tokenizer.readToken(FourCC_1.FourCcToken))throw new Error("Unexpected PROP-chunk ID");await this.handleSoundPropertyChunks(e.chunkSize-BigInt(FourCC_1.FourCcToken.len));break;case"ID3":const r=await this.tokenizer.readToken(new Token.Uint8ArrayType(Number(e.chunkSize))),a=strtok3$1.fromBuffer(r);await(new ID3v2Parser_1.ID3v2Parser).parse(this.metadata,a,this.options);break;default:debug$2(`Ignore chunk[ID=${e.chunkID}, size=${e.chunkSize}]`);break;case"DSD":this.metadata.setFormat("numberOfSamples",Number(e.chunkSize*BigInt(8)/BigInt(this.metadata.format.numberOfChannels))),this.metadata.setFormat("duration",this.metadata.format.numberOfSamples/this.metadata.format.sampleRate)}const r=e.chunkSize-BigInt(this.tokenizer.position-t);r>0&&(debug$2(`After Parsing chunk, remaining ${r} bytes`),await this.tokenizer.ignore(Number(r)))}async handleSoundPropertyChunks(e){for(debug$2(`Parsing sound-property-chunks, remainingSize=${e}`);e>0;){const t=await this.tokenizer.readToken(DsdiffToken_1.ChunkHeader64);debug$2(`Sound-property-chunk[ID=${t.chunkID}, size=${t.chunkSize}]`);const r=this.tokenizer.position;switch(t.chunkID.trim()){case"FS":const e=await this.tokenizer.readToken(Token.UINT32_BE);this.metadata.setFormat("sampleRate",e);break;case"CHNL":const r=await this.tokenizer.readToken(Token.UINT16_BE);this.metadata.setFormat("numberOfChannels",r),await this.handleChannelChunks(t.chunkSize-BigInt(Token.UINT16_BE.len));break;case"CMPR":const a=(await this.tokenizer.readToken(FourCC_1.FourCcToken)).trim(),i=await this.tokenizer.readToken(Token.UINT8),s=await this.tokenizer.readToken(new Token.StringType(i,"ascii"));"DSD"===a&&(this.metadata.setFormat("lossless",!0),this.metadata.setFormat("bitsPerSample",1)),this.metadata.setFormat("codec",`${a} (${s})`);break;case"ABSS":const n=await this.tokenizer.readToken(Token.UINT16_BE),o=await this.tokenizer.readToken(Token.UINT8),c=await this.tokenizer.readToken(Token.UINT8),u=await this.tokenizer.readToken(Token.UINT32_BE);debug$2(`ABSS ${n}:${o}:${c}.${u}`);break;case"LSCO":const l=await this.tokenizer.readToken(Token.UINT16_BE);debug$2(`LSCO lsConfig=${l}`);break;default:debug$2(`Unknown sound-property-chunk[ID=${t.chunkID}, size=${t.chunkSize}]`),await this.tokenizer.ignore(Number(t.chunkSize))}const a=t.chunkSize-BigInt(this.tokenizer.position-r);a>0&&(debug$2(`After Parsing sound-property-chunk ${t.chunkSize}, remaining ${a} bytes`),await this.tokenizer.ignore(Number(a))),e-=BigInt(DsdiffToken_1.ChunkHeader64.len)+t.chunkSize,debug$2(`Parsing sound-property-chunks, remainingSize=${e}`)}if(this.metadata.format.lossless&&this.metadata.format.sampleRate&&this.metadata.format.numberOfChannels&&this.metadata.format.bitsPerSample){const e=this.metadata.format.sampleRate*this.metadata.format.numberOfChannels*this.metadata.format.bitsPerSample;this.metadata.setFormat("bitrate",e)}}async handleChannelChunks(e){debug$2(`Parsing channel-chunks, remainingSize=${e}`);const t=[];for(;e>=FourCC_1.FourCcToken.len;){const r=await this.tokenizer.readToken(FourCC_1.FourCcToken);debug$2(`Channel[ID=${r}]`),t.push(r),e-=BigInt(FourCC_1.FourCcToken.len)}return debug$2(`Channels: ${t.join(", ")}`),t}}DsdiffParser$1.DsdiffParser=DsdiffParser;var MatroskaParser$1={},MatroskaDtd={};Object.defineProperty(MatroskaDtd,"t",{value:!0}),MatroskaDtd.elements=void 0;const types_1$1=types;MatroskaDtd.elements={440786851:{name:"ebml",container:{17030:{name:"ebmlVersion",value:types_1$1.DataType.uint},17143:{name:"ebmlReadVersion",value:types_1$1.DataType.uint},17138:{name:"ebmlMaxIDWidth",value:types_1$1.DataType.uint},17139:{name:"ebmlMaxSizeWidth",value:types_1$1.DataType.uint},17026:{name:"docType",value:types_1$1.DataType.string},17031:{name:"docTypeVersion",value:types_1$1.DataType.uint},17029:{name:"docTypeReadVersion",value:types_1$1.DataType.uint}}},408125543:{name:"segment",container:{290298740:{name:"seekHead",container:{19899:{name:"seek",container:{21419:{name:"seekId",value:types_1$1.DataType.binary},21420:{name:"seekPosition",value:types_1$1.DataType.uint}}}}},357149030:{name:"info",container:{29604:{name:"uid",value:types_1$1.DataType.uid},29572:{name:"filename",value:types_1$1.DataType.string},3979555:{name:"prevUID",value:types_1$1.DataType.uid},3965867:{name:"prevFilename",value:types_1$1.DataType.string},4110627:{name:"nextUID",value:types_1$1.DataType.uid},4096955:{name:"nextFilename",value:types_1$1.DataType.string},2807729:{name:"timecodeScale",value:types_1$1.DataType.uint},17545:{name:"duration",value:types_1$1.DataType.float},17505:{name:"dateUTC",value:types_1$1.DataType.uint},31657:{name:"title",value:types_1$1.DataType.string},19840:{name:"muxingApp",value:types_1$1.DataType.string},22337:{name:"writingApp",value:types_1$1.DataType.string}}},524531317:{name:"cluster",multiple:!0,container:{231:{name:"timecode",value:types_1$1.DataType.uid},163:{name:"unknown",value:types_1$1.DataType.binary},167:{name:"position",value:types_1$1.DataType.uid},171:{name:"prevSize",value:types_1$1.DataType.uid}}},374648427:{name:"tracks",container:{174:{name:"entries",multiple:!0,container:{215:{name:"trackNumber",value:types_1$1.DataType.uint},29637:{name:"uid",value:types_1$1.DataType.uid},131:{name:"trackType",value:types_1$1.DataType.uint},185:{name:"flagEnabled",value:types_1$1.DataType.bool},136:{name:"flagDefault",value:types_1$1.DataType.bool},21930:{name:"flagForced",value:types_1$1.DataType.bool},156:{name:"flagLacing",value:types_1$1.DataType.bool},28135:{name:"minCache",value:types_1$1.DataType.uint},28136:{name:"maxCache",value:types_1$1.DataType.uint},2352003:{name:"defaultDuration",value:types_1$1.DataType.uint},2306383:{name:"timecodeScale",value:types_1$1.DataType.float},21358:{name:"name",value:types_1$1.DataType.string},2274716:{name:"language",value:types_1$1.DataType.string},134:{name:"codecID",value:types_1$1.DataType.string},25506:{name:"codecPrivate",value:types_1$1.DataType.binary},2459272:{name:"codecName",value:types_1$1.DataType.string},3839639:{name:"codecSettings",value:types_1$1.DataType.string},3883072:{name:"codecInfoUrl",value:types_1$1.DataType.string},2536e3:{name:"codecDownloadUrl",value:types_1$1.DataType.string},170:{name:"codecDecodeAll",value:types_1$1.DataType.bool},28587:{name:"trackOverlay",value:types_1$1.DataType.uint},224:{name:"video",container:{154:{name:"flagInterlaced",value:types_1$1.DataType.bool},21432:{name:"stereoMode",value:types_1$1.DataType.uint},176:{name:"pixelWidth",value:types_1$1.DataType.uint},186:{name:"pixelHeight",value:types_1$1.DataType.uint},21680:{name:"displayWidth",value:types_1$1.DataType.uint},21690:{name:"displayHeight",value:types_1$1.DataType.uint},21683:{name:"aspectRatioType",value:types_1$1.DataType.uint},3061028:{name:"colourSpace",value:types_1$1.DataType.uint},3126563:{name:"gammaValue",value:types_1$1.DataType.float}}},225:{name:"audio",container:{181:{name:"samplingFrequency",value:types_1$1.DataType.float},30901:{name:"outputSamplingFrequency",value:types_1$1.DataType.float},159:{name:"channels",value:types_1$1.DataType.uint},148:{name:"channels",value:types_1$1.DataType.uint},32123:{name:"channelPositions",value:types_1$1.DataType.binary},25188:{name:"bitDepth",value:types_1$1.DataType.uint}}},28032:{name:"contentEncodings",container:{25152:{name:"contentEncoding",container:{20529:{name:"order",value:types_1$1.DataType.uint},20530:{name:"scope",value:types_1$1.DataType.bool},20531:{name:"type",value:types_1$1.DataType.uint},20532:{name:"contentEncoding",container:{16980:{name:"contentCompAlgo",value:types_1$1.DataType.uint},16981:{name:"contentCompSettings",value:types_1$1.DataType.binary}}},20533:{name:"contentEncoding",container:{18401:{name:"contentEncAlgo",value:types_1$1.DataType.uint},18402:{name:"contentEncKeyID",value:types_1$1.DataType.binary},18403:{name:"contentSignature ",value:types_1$1.DataType.binary},18404:{name:"ContentSigKeyID  ",value:types_1$1.DataType.binary},18405:{name:"contentSigAlgo ",value:types_1$1.DataType.uint},18406:{name:"contentSigHashAlgo ",value:types_1$1.DataType.uint}}},25188:{name:"bitDepth",value:types_1$1.DataType.uint}}}}}}}}},475249515:{name:"cues",container:{187:{name:"cuePoint",container:{179:{name:"cueTime",value:types_1$1.DataType.uid},183:{name:"positions",container:{247:{name:"track",value:types_1$1.DataType.uint},241:{name:"clusterPosition",value:types_1$1.DataType.uint},21368:{name:"blockNumber",value:types_1$1.DataType.uint},234:{name:"codecState",value:types_1$1.DataType.uint},219:{name:"reference",container:{150:{name:"time",value:types_1$1.DataType.uint},151:{name:"cluster",value:types_1$1.DataType.uint},21343:{name:"number",value:types_1$1.DataType.uint},235:{name:"codecState",value:types_1$1.DataType.uint}}},240:{name:"relativePosition",value:types_1$1.DataType.uint}}}}}}},423732329:{name:"attachments",container:{24999:{name:"attachedFiles",multiple:!0,container:{18046:{name:"description",value:types_1$1.DataType.string},18030:{name:"name",value:types_1$1.DataType.string},18016:{name:"mimeType",value:types_1$1.DataType.string},18012:{name:"data",value:types_1$1.DataType.binary},18094:{name:"uid",value:types_1$1.DataType.uid}}}}},272869232:{name:"chapters",container:{17849:{name:"editionEntry",container:{182:{name:"chapterAtom",container:{29636:{name:"uid",value:types_1$1.DataType.uid},145:{name:"timeStart",value:types_1$1.DataType.uint},146:{name:"timeEnd",value:types_1$1.DataType.uid},152:{name:"hidden",value:types_1$1.DataType.bool},17816:{name:"enabled",value:types_1$1.DataType.uid},143:{name:"track",container:{137:{name:"trackNumber",value:types_1$1.DataType.uid},128:{name:"display",container:{133:{name:"string",value:types_1$1.DataType.string},17276:{name:"language ",value:types_1$1.DataType.string},17278:{name:"country ",value:types_1$1.DataType.string}}}}}}}}}}},307544935:{name:"tags",container:{29555:{name:"tag",multiple:!0,container:{25536:{name:"target",container:{25541:{name:"tagTrackUID",value:types_1$1.DataType.uid},25540:{name:"tagChapterUID",value:types_1$1.DataType.uint},25542:{name:"tagAttachmentUID",value:types_1$1.DataType.uid},25546:{name:"targetType",value:types_1$1.DataType.string},26826:{name:"targetTypeValue",value:types_1$1.DataType.uint},25545:{name:"tagEditionUID",value:types_1$1.DataType.uid}}},26568:{name:"simpleTags",multiple:!0,container:{17827:{name:"name",value:types_1$1.DataType.string},17543:{name:"string",value:types_1$1.DataType.string},17541:{name:"binary",value:types_1$1.DataType.binary},17530:{name:"language",value:types_1$1.DataType.string},17531:{name:"languageIETF",value:types_1$1.DataType.string},17540:{name:"default",value:types_1$1.DataType.bool}}}}}}}}}},Object.defineProperty(MatroskaParser$1,"t",{value:!0}),MatroskaParser$1.MatroskaParser=void 0;const token_types_1=lib,debug_1$1=browser.exports,BasicParser_1=BasicParser$1,types_1=types,matroskaDtd=MatroskaDtd,debug$1=(0,debug_1$1.default)("music-metadata:parser:matroska");class MatroskaParser extends BasicParser_1.BasicParser{constructor(){super(),this.padding=0,this.parserMap=new Map,this.ebmlMaxIDLength=4,this.ebmlMaxSizeLength=8,this.parserMap.set(types_1.DataType.uint,(e=>this.readUint(e))),this.parserMap.set(types_1.DataType.string,(e=>this.readString(e))),this.parserMap.set(types_1.DataType.binary,(e=>this.readBuffer(e))),this.parserMap.set(types_1.DataType.uid,(async e=>1===await this.readUint(e))),this.parserMap.set(types_1.DataType.bool,(e=>this.readFlag(e))),this.parserMap.set(types_1.DataType.float,(e=>this.readFloat(e)))}init(e,t,r){return super.init(e,t,r),this}async parse(){const e=await this.parseContainer(matroskaDtd.elements,this.tokenizer.fileInfo.size,[]);if(this.metadata.setFormat("container",`EBML/${e.ebml.docType}`),e.segment){const t=e.segment.info;if(t){const e=t.timecodeScale?t.timecodeScale:1e6,r=t.duration*e/1e9;this.addTag("segment:title",t.title),this.metadata.setFormat("duration",r)}const r=e.segment.tracks;if(r&&r.entries){r.entries.forEach((e=>{const t={codecName:e.codecID.replace("A_","").replace("V_",""),codecSettings:e.codecSettings,flagDefault:e.flagDefault,flagLacing:e.flagLacing,flagEnabled:e.flagEnabled,language:e.language,name:e.name,type:e.trackType,audio:e.audio,video:e.video};this.metadata.addStreamInfo(t)}));const t=r.entries.filter((e=>e.trackType===types_1.TrackType.audio.valueOf())).reduce(((e,t)=>e?!e.flagDefault&&t.flagDefault||t.trackNumber&&t.trackNumber<e.trackNumber?t:e:t),null);t&&(this.metadata.setFormat("codec",t.codecID.replace("A_","")),this.metadata.setFormat("sampleRate",t.audio.samplingFrequency),this.metadata.setFormat("numberOfChannels",t.audio.channels)),e.segment.tags&&e.segment.tags.tag.forEach((e=>{const t=e.target,r=(null==t?void 0:t.targetTypeValue)?types_1.TargetType[t.targetTypeValue]:(null==t?void 0:t.targetType)?t.targetType:"track";e.simpleTags.forEach((e=>{const t=e.string?e.string:e.binary;this.addTag(`${r}:${e.name}`,t)}))})),e.segment.attachments&&e.segment.attachments.attachedFiles.filter((e=>e.mimeType.startsWith("image/"))).map((e=>({data:e.data,format:e.mimeType,description:e.description,name:e.name}))).forEach((e=>{this.addTag("picture",e)}))}}}async parseContainer(e,t,r){const a={};for(;this.tokenizer.position<t;){let t;try{t=await this.readElement()}catch(i){if("End-Of-Stream"===i.message)break;throw i}const s=e[t.id];if(s)if(debug$1(`Element: name=${s.name}, container=${!!s.container}`),s.container){const e=await this.parseContainer(s.container,t.len>=0?this.tokenizer.position+t.len:-1,r.concat([s.name]));s.multiple?(a[s.name]||(a[s.name]=[]),a[s.name].push(e)):a[s.name]=e}else a[s.name]=await this.parserMap.get(s.value)(t);else 236===t.id?(this.padding+=t.len,await this.tokenizer.ignore(t.len)):(debug$1(`parseEbml: path=${r.join("/")}, unknown element: id=${t.id.toString(16)}`),this.padding+=t.len,await this.tokenizer.ignore(t.len))}return a}async readVintData(e){const t=await this.tokenizer.peekNumber(token_types_1.UINT8);let r=128,a=1;for(;0==(t&r);){if(a>e)throw new Error("VINT value exceeding maximum size");++a,r>>=1}const i=Buffer.alloc(a);return await this.tokenizer.readBuffer(i),i}async readElement(){const e=await this.readVintData(this.ebmlMaxIDLength),t=await this.readVintData(this.ebmlMaxSizeLength);t[0]^=128>>t.length-1;const r=Math.min(6,t.length);return{id:e.readUIntBE(0,e.length),len:t.readUIntBE(t.length-r,r)}}isMaxValue(e){if(e.length===this.ebmlMaxSizeLength){for(let t=1;t<this.ebmlMaxSizeLength;++t)if(255!==e[t])return!1;return!0}return!1}async readFloat(e){switch(e.len){case 0:return 0;case 4:return this.tokenizer.readNumber(token_types_1.Float32_BE);case 8:case 10:return this.tokenizer.readNumber(token_types_1.Float64_BE);default:throw new Error(`Invalid IEEE-754 float length: ${e.len}`)}}async readFlag(e){return 1===await this.readUint(e)}async readUint(e){const t=await this.readBuffer(e),r=Math.min(6,e.len);return t.readUIntBE(e.len-r,r)}async readString(e){return(await this.tokenizer.readToken(new token_types_1.StringType(e.len,"utf-8"))).replace(/\00.*$/g,"")}async readBuffer(e){const t=Buffer.alloc(e.len);return await this.tokenizer.readBuffer(t),t}addTag(e,t){this.metadata.addTag("matroska",e,t)}}MatroskaParser$1.MatroskaParser=MatroskaParser,Object.defineProperty(ParserFactory$1,"t",{value:!0}),ParserFactory$1.ParserFactory=ParserFactory$1.parseHttpContentType=void 0;const FileType=core,ContentType=contentType,MimeType=mediaTyper,debug_1=browser.exports,MetadataCollector_1=MetadataCollector$1,AiffParser_1=AiffParser,APEv2Parser_1$1=APEv2Parser$1,AsfParser_1=AsfParser$1,FlacParser_1=FlacParser$1,MP4Parser_1=MP4Parser$1,MpegParser_1=MpegParser$1,musepack_1=musepack,OggParser_1=OggParser$1,WaveParser_1=WaveParser$1,WavPackParser_1=WavPackParser$1,DsfParser_1=DsfParser$1,DsdiffParser_1=DsdiffParser$1,MatroskaParser_1=MatroskaParser$1,debug=(0,debug_1.default)("music-metadata:parser:factory");function parseHttpContentType(e){const t=ContentType.parse(e),r=MimeType.parse(t.type);return{type:r.type,subtype:r.subtype,suffix:r.suffix,parameters:t.parameters}}async function parse(e,t,r={}){const a=await ParserFactory.loadParser(t),i=new MetadataCollector_1.MetadataCollector(r);return await a.init(i,e,r).parse(),i.toCommonMetadata()}ParserFactory$1.parseHttpContentType=parseHttpContentType;class ParserFactory{static async parseOnContentType(e,t){const{mimeType:r,path:a,url:i}=await e.fileInfo,s=ParserFactory.getParserIdForMimeType(r)||ParserFactory.getParserIdForExtension(a)||ParserFactory.getParserIdForExtension(i);return s||debug("No parser found for MIME-type / extension: "+r),this.parse(e,s,t)}static async parse(e,t,r){if(!t){debug("Guess parser on content...");const r=Buffer.alloc(4100);if(await e.peekBuffer(r,{mayBeLess:!0}),e.fileInfo.path&&(t=this.getParserIdForExtension(e.fileInfo.path)),!t){const e=await FileType.fromBuffer(r);if(!e)throw new Error("Failed to determine audio format");if(debug(`Guessed file type is mime=${e.mime}, extension=${e.ext}`),!(t=ParserFactory.getParserIdForMimeType(e.mime)))throw new Error("Guessed MIME-type not supported: "+e.mime)}}return parse(e,t,r)}static getParserIdForExtension(e){if(e)switch(this.getExtension(e).toLocaleLowerCase()||e){case".mp2":case".mp3":case".m2a":case".aac":return"mpeg";case".ape":return"apev2";case".mp4":case".m4a":case".m4b":case".m4pa":case".m4v":case".m4r":case".3gp":return"mp4";case".wma":case".wmv":case".asf":return"asf";case".flac":return"flac";case".ogg":case".ogv":case".oga":case".ogm":case".ogx":case".opus":case".spx":return"ogg";case".aif":case".aiff":case".aifc":return"aiff";case".wav":case".bwf":return"riff";case".wv":case".wvp":return"wavpack";case".mpc":return"musepack";case".dsf":return"dsf";case".dff":return"dsdiff";case".mka":case".mkv":case".mk3d":case".mks":case".webm":return"matroska"}}static async loadParser(e){switch(e){case"aiff":return new AiffParser_1.AIFFParser;case"adts":case"mpeg":return new MpegParser_1.MpegParser;case"apev2":return new APEv2Parser_1$1.APEv2Parser;case"asf":return new AsfParser_1.AsfParser;case"dsf":return new DsfParser_1.DsfParser;case"dsdiff":return new DsdiffParser_1.DsdiffParser;case"flac":return new FlacParser_1.FlacParser;case"mp4":return new MP4Parser_1.MP4Parser;case"musepack":return new musepack_1.default;case"ogg":return new OggParser_1.OggParser;case"riff":return new WaveParser_1.WaveParser;case"wavpack":return new WavPackParser_1.WavPackParser;case"matroska":return new MatroskaParser_1.MatroskaParser;default:throw new Error(`Unknown parser type: ${e}`)}}static getExtension(e){const t=e.lastIndexOf(".");return-1===t?"":e.slice(t)}static getParserIdForMimeType(e){let t;try{t=parseHttpContentType(e)}catch(a){return void debug(`Invalid HTTP Content-Type header value: ${e}`)}const r=0===t.subtype.indexOf("x-")?t.subtype.substring(2):t.subtype;switch(t.type){case"audio":switch(r){case"mp3":case"mpeg":return"mpeg";case"aac":case"aacp":return"adts";case"flac":return"flac";case"ape":case"monkeys-audio":return"apev2";case"mp4":case"m4a":return"mp4";case"ogg":case"opus":case"speex":return"ogg";case"ms-wma":case"ms-wmv":case"ms-asf":return"asf";case"aiff":case"aif":case"aifc":return"aiff";case"vnd.wave":case"wav":case"wave":return"riff";case"wavpack":return"wavpack";case"musepack":return"musepack";case"matroska":case"webm":return"matroska";case"dsf":return"dsf"}break;case"video":switch(r){case"ms-asf":case"ms-wmv":return"asf";case"m4v":case"mp4":return"mp4";case"ogg":return"ogg";case"matroska":case"webm":return"matroska"}break;case"application":switch(r){case"vnd.ms-asf":return"asf";case"ogg":return"ogg"}}}}ParserFactory$1.ParserFactory=ParserFactory;var RandomUint8ArrayReader$1={};Object.defineProperty(RandomUint8ArrayReader$1,"t",{value:!0}),RandomUint8ArrayReader$1.RandomUint8ArrayReader=void 0;class RandomUint8ArrayReader{constructor(e){this.uint8Array=e,this.fileSize=e.length}async randomRead(e,t,r,a){return e.set(this.uint8Array.subarray(a,a+r),t),r}}RandomUint8ArrayReader$1.RandomUint8ArrayReader=RandomUint8ArrayReader;var Lyrics3={};!function(e){Object.defineProperty(e,"t",{value:!0}),e.getLyricsHeaderLength=e.endTag2=void 0,e.endTag2="LYRICS200",e.getLyricsHeaderLength=async function(t){if(t.fileSize>=143){const r=Buffer.alloc(15);await t.randomRead(r,0,r.length,t.fileSize-143);const a=r.toString("binary");if(a.substr(6)===e.endTag2)return parseInt(a.substr(0,6),10)+15}return 0}}(Lyrics3),Object.defineProperty(core$1,"t",{value:!0}),core$1.scanAppendingHeaders=core$1.selectCover=core$1.ratingToStars=core$1.orderTags=core$1.parseFromTokenizer=core$1.parseBuffer=core$1.parseStream=void 0;const strtok3=core$2,ParserFactory_1=ParserFactory$1,RandomUint8ArrayReader_1=RandomUint8ArrayReader$1,APEv2Parser_1=APEv2Parser$1,ID3v1Parser_1=ID3v1Parser,Lyrics3_1=Lyrics3;function parseStream(e,t,r={}){return parseFromTokenizer(strtok3.fromStream(e,"string"==typeof t?{mimeType:t}:t),r)}async function parseBuffer(e,t,r={}){const a=new RandomUint8ArrayReader_1.RandomUint8ArrayReader(e);return await scanAppendingHeaders(a,r),parseFromTokenizer(strtok3.fromBuffer(e,"string"==typeof t?{mimeType:t}:t),r)}function parseFromTokenizer(e,t){return ParserFactory_1.ParserFactory.parseOnContentType(e,t)}function orderTags(e){const t={};for(const r of e)(t[r.id]=t[r.id]||[]).push(r.value);return t}function ratingToStars(e){return void 0===e?0:1+Math.round(4*e)}function selectCover(e){return e?e.reduce(((e,t)=>t.name&&t.name.toLowerCase()in["front","cover","cover (front)"]?t:e)):null}async function scanAppendingHeaders(e,t={}){let r=e.fileSize;await(0,ID3v1Parser_1.hasID3v1Header)(e)&&(r-=128,r-=await(0,Lyrics3_1.getLyricsHeaderLength)(e)),t.apeHeader=await APEv2Parser_1.APEv2Parser.findApeFooterOffset(e,r)}core$1.parseStream=parseStream,core$1.parseBuffer=parseBuffer,core$1.parseFromTokenizer=parseFromTokenizer,core$1.orderTags=orderTags,core$1.ratingToStars=ratingToStars,core$1.selectCover=selectCover,core$1.scanAppendingHeaders=scanAppendingHeaders;var RandomFileReader$1={};Object.defineProperty(RandomFileReader$1,"t",{value:!0}),RandomFileReader$1.RandomFileReader=void 0;const fs=require$$0;class RandomFileReader{constructor(e,t,r){this.fileHandle=e,this.filePath=t,this.fileSize=r}async randomRead(e,t,r,a){return(await this.fileHandle.read(e,t,r,a)).bytesRead}async close(){return this.fileHandle.close()}static async init(e,t){const r=await fs.promises.open(e,"r");return new RandomFileReader(r,e,t)}}function signum(e){return e<0?-1:0===e?0:1}function lerp(e,t,r){return(1-r)*e+r*t}function clampInt(e,t,r){return r<e?e:r>t?t:r}function sanitizeDegreesInt(e){return(e%=360)<0&&(e+=360),e}function differenceDegrees(e,t){return 180-Math.abs(Math.abs(e-t)-180)}function matrixMultiply(e,t){return[e[0]*t[0][0]+e[1]*t[0][1]+e[2]*t[0][2],e[0]*t[1][0]+e[1]*t[1][1]+e[2]*t[1][2],e[0]*t[2][0]+e[1]*t[2][1]+e[2]*t[2][2]]}RandomFileReader$1.RandomFileReader=RandomFileReader,function(e){Object.defineProperty(e,"t",{value:!0}),e.ratingToStars=e.orderTags=e.parseFile=e.parseStream=e.selectCover=e.parseBuffer=e.parseFromTokenizer=void 0;const t=lib$2,r=core$1,a=ParserFactory$1,i=browser.exports,s=RandomFileReader$1,n=(0,i.default)("music-metadata:parser");var o=core$1;async function c(e,a,i={}){const s=await t.fromStream(e,"string"==typeof a?{mimeType:a}:a);return r.parseFromTokenizer(s,i)}async function u(e,i={}){n(`parseFile: ${e}`);const o=await t.fromFile(e),c=await s.RandomFileReader.init(e,o.fileInfo.size);try{await r.scanAppendingHeaders(c,i)}finally{await c.close()}try{const t=a.ParserFactory.getParserIdForExtension(e);return t||n(" Parser could not be determined by file extension"),await a.ParserFactory.parse(o,t,i)}finally{await o.close()}}Object.defineProperty(e,"parseFromTokenizer",{enumerable:!0,get:function(){return o.parseFromTokenizer}}),Object.defineProperty(e,"parseBuffer",{enumerable:!0,get:function(){return o.parseBuffer}}),Object.defineProperty(e,"selectCover",{enumerable:!0,get:function(){return o.selectCover}}),e.parseStream=c,e.parseFile=u,e.orderTags=r.orderTags,e.ratingToStars=r.ratingToStars,e.default={parseStream:c,parseFile:u,parseFromTokenizer:r.parseFromTokenizer,parseBuffer:r.parseBuffer,selectCover:r.selectCover}}(lib$3);const SRGB_TO_XYZ=[[.41233895,.35762064,.18051042],[.2126,.7152,.0722],[.01932141,.11916382,.95034478]],XYZ_TO_SRGB=[[3.2413774792388685,-1.5376652402851851,-.49885366846268053],[-.9691452513005321,1.8758853451067872,.04156585616912061],[.05562093689691305,-.20395524564742123,1.0571799111220335]],WHITE_POINT_D65=[95.047,100,108.883];function argbFromRgb(e,t,r){return(255<<24|(255&e)<<16|(255&t)<<8|255&r)>>>0}function alphaFromArgb(e){return e>>24&255}function redFromArgb(e){return e>>16&255}function greenFromArgb(e){return e>>8&255}function blueFromArgb(e){return 255&e}function argbFromXyz(e,t,r){const a=XYZ_TO_SRGB,i=a[0][0]*e+a[0][1]*t+a[0][2]*r,s=a[1][0]*e+a[1][1]*t+a[1][2]*r,n=a[2][0]*e+a[2][1]*t+a[2][2]*r;return argbFromRgb(delinearized(i),delinearized(s),delinearized(n))}function xyzFromArgb(e){return matrixMultiply([linearized(redFromArgb(e)),linearized(greenFromArgb(e)),linearized(blueFromArgb(e))],SRGB_TO_XYZ)}function argbFromLab(e,t,r){const a=WHITE_POINT_D65,i=(e+16)/116,s=i-r/200,n=labInvf(t/500+i),o=labInvf(i),c=labInvf(s);return argbFromXyz(n*a[0],o*a[1],c*a[2])}function labFromArgb(e){const t=linearized(redFromArgb(e)),r=linearized(greenFromArgb(e)),a=linearized(blueFromArgb(e)),i=SRGB_TO_XYZ,s=i[0][0]*t+i[0][1]*r+i[0][2]*a,n=i[1][0]*t+i[1][1]*r+i[1][2]*a,o=i[2][0]*t+i[2][1]*r+i[2][2]*a,c=WHITE_POINT_D65,u=s/c[0],l=n/c[1],f=o/c[2],h=labF(u),m=labF(l);return[116*m-16,500*(h-m),200*(m-labF(f))]}function lstarFromArgb(e){const t=xyzFromArgb(e)[1]/100;return t<=216/24389?24389/27*t:116*Math.pow(t,1/3)-16}function yFromLstar(e){return e>8?100*Math.pow((e+16)/116,3):e/(24389/27)*100}function linearized(e){const t=e/255;return t<=.040449936?t/12.92*100:100*Math.pow((t+.055)/1.055,2.4)}function delinearized(e){const t=e/100;let r=0;return r=t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055,clampInt(0,255,Math.round(255*r))}function whitePointD65(){return WHITE_POINT_D65}function labF(e){return e>216/24389?Math.pow(e,1/3):(903.2962962962963*e+16)/116}function labInvf(e){const t=e*e*e;return t>216/24389?t:(116*e-16)/903.2962962962963}class ViewingConditions{constructor(e,t,r,a,i,s,n,o,c,u){this.n=e,this.aw=t,this.nbb=r,this.ncb=a,this.c=i,this.nc=s,this.rgbD=n,this.fl=o,this.fLRoot=c,this.z=u}static make(e=whitePointD65(),t=200/Math.PI*yFromLstar(50)/100,r=50,a=2,i=!1){const s=e,n=.401288*s[0]+.650173*s[1]+-.051461*s[2],o=-.250268*s[0]+1.204414*s[1]+.045854*s[2],c=-.002079*s[0]+.048952*s[1]+.953127*s[2],u=.8+a/10,l=u>=.9?lerp(.59,.69,10*(u-.9)):lerp(.525,.59,10*(u-.8));let f=i?1:u*(1-1/3.6*Math.exp((-t-42)/92));f=f>1?1:f<0?0:f;const h=u,m=[f*(100/n)+1-f,f*(100/o)+1-f,f*(100/c)+1-f],p=1/(5*t+1),d=p*p*p*p,g=1-d,b=d*t+.1*g*g*Math.cbrt(5*t),T=yFromLstar(r)/e[1],$=1.48+Math.sqrt(T),_=.725/Math.pow(T,.2),w=_,v=[Math.pow(b*m[0]*n/100,.42),Math.pow(b*m[1]*o/100,.42),Math.pow(b*m[2]*c/100,.42)],y=[400*v[0]/(v[0]+27.13),400*v[1]/(v[1]+27.13),400*v[2]/(v[2]+27.13)];return new ViewingConditions(T,(2*y[0]+y[1]+.05*y[2])*_,_,w,l,h,m,b,Math.pow(b,.25),$)}}ViewingConditions.DEFAULT=ViewingConditions.make();class Cam16{constructor(e,t,r,a,i,s,n,o,c){this.hue=e,this.chroma=t,this.j=r,this.q=a,this.m=i,this.s=s,this.jstar=n,this.astar=o,this.bstar=c}distance(e){const t=this.jstar-e.jstar,r=this.astar-e.astar,a=this.bstar-e.bstar,i=Math.sqrt(t*t+r*r+a*a);return 1.41*Math.pow(i,.63)}static fromInt(e){return Cam16.fromIntInViewingConditions(e,ViewingConditions.DEFAULT)}static fromIntInViewingConditions(e,t){const r=(65280&e)>>8,a=255&e,i=linearized((16711680&e)>>16),s=linearized(r),n=linearized(a),o=.41233895*i+.35762064*s+.18051042*n,c=.2126*i+.7152*s+.0722*n,u=.01932141*i+.11916382*s+.95034478*n,l=.401288*o+.650173*c-.051461*u,f=-.250268*o+1.204414*c+.045854*u,h=-.002079*o+.048952*c+.953127*u,m=t.rgbD[0]*l,p=t.rgbD[1]*f,d=t.rgbD[2]*h,g=Math.pow(t.fl*Math.abs(m)/100,.42),b=Math.pow(t.fl*Math.abs(p)/100,.42),T=Math.pow(t.fl*Math.abs(d)/100,.42),$=400*signum(m)*g/(g+27.13),_=400*signum(p)*b/(b+27.13),w=400*signum(d)*T/(T+27.13),v=(11*$+-12*_+w)/11,y=($+_-2*w)/9,k=(20*$+20*_+21*w)/20,I=(40*$+20*_+w)/20,A=180*Math.atan2(y,v)/Math.PI,M=A<0?A+360:A>=360?A-360:A,P=M*Math.PI/180,C=I*t.nbb,E=100*Math.pow(C/t.aw,t.c*t.z),D=4/t.c*Math.sqrt(E/100)*(t.aw+4)*t.fLRoot,S=M<20.14?M+360:M,x=5e4/13*.25*(Math.cos(S*Math.PI/180+2)+3.8)*t.nc*t.ncb*Math.sqrt(v*v+y*y)/(k+.305),B=Math.pow(x,.9)*Math.pow(1.64-Math.pow(.29,t.n),.73),F=B*Math.sqrt(E/100),R=F*t.fLRoot,O=50*Math.sqrt(B*t.c/(t.aw+4)),U=(1+100*.007)*E/(1+.007*E),G=1/.0228*Math.log(1+.0228*R),z=G*Math.cos(P),L=G*Math.sin(P);return new Cam16(M,F,E,D,R,O,U,z,L)}static fromJch(e,t,r){return Cam16.fromJchInViewingConditions(e,t,r,ViewingConditions.DEFAULT)}static fromJchInViewingConditions(e,t,r,a){const i=4/a.c*Math.sqrt(e/100)*(a.aw+4)*a.fLRoot,s=t*a.fLRoot,n=t/Math.sqrt(e/100),o=50*Math.sqrt(n*a.c/(a.aw+4)),c=r*Math.PI/180,u=(1+100*.007)*e/(1+.007*e),l=1/.0228*Math.log(1+.0228*s),f=l*Math.cos(c),h=l*Math.sin(c);return new Cam16(r,t,e,i,s,o,u,f,h)}static fromUcs(e,t,r){return Cam16.fromUcsInViewingConditions(e,t,r,ViewingConditions.DEFAULT)}static fromUcsInViewingConditions(e,t,r,a){const i=t,s=r,n=Math.sqrt(i*i+s*s),o=(Math.exp(.0228*n)-1)/.0228/a.fLRoot;let c=Math.atan2(s,i)*(180/Math.PI);c<0&&(c+=360);const u=e/(1-.007*(e-100));return Cam16.fromJchInViewingConditions(u,o,c,a)}toInt(){return this.viewed(ViewingConditions.DEFAULT)}viewed(e){const t=0===this.chroma||0===this.j?0:this.chroma/Math.sqrt(this.j/100),r=Math.pow(t/Math.pow(1.64-Math.pow(.29,e.n),.73),1/.9),a=this.hue*Math.PI/180,i=.25*(Math.cos(a+2)+3.8),s=e.aw*Math.pow(this.j/100,1/e.c/e.z),n=i*(5e4/13)*e.nc*e.ncb,o=s/e.nbb,c=Math.sin(a),u=Math.cos(a),l=23*(o+.305)*r/(23*n+11*r*u+108*r*c),f=l*u,h=l*c,m=(460*o+451*f+288*h)/1403,p=(460*o-891*f-261*h)/1403,d=(460*o-220*f-6300*h)/1403,g=Math.max(0,27.13*Math.abs(m)/(400-Math.abs(m))),b=signum(m)*(100/e.fl)*Math.pow(g,1/.42),T=Math.max(0,27.13*Math.abs(p)/(400-Math.abs(p))),$=signum(p)*(100/e.fl)*Math.pow(T,1/.42),_=Math.max(0,27.13*Math.abs(d)/(400-Math.abs(d))),w=signum(d)*(100/e.fl)*Math.pow(_,1/.42),v=b/e.rgbD[0],y=$/e.rgbD[1],k=w/e.rgbD[2];return argbFromXyz(1.86206786*v-1.01125463*y+.14918677*k,.38752654*v+.62144744*y-.00897398*k,-.0158415*v-.03412294*y+1.04996444*k)}}class LabPointProvider{fromInt(e){return labFromArgb(e)}toInt(e){return argbFromLab(e[0],e[1],e[2])}distance(e,t){const r=e[0]-t[0],a=e[1]-t[1],i=e[2]-t[2];return r*r+a*a+i*i}}const MAX_ITERATIONS=10,MIN_MOVEMENT_DISTANCE=3;class QuantizerWsmeans{static quantize(e,t,r){const a=new Map,i=new Array,s=new Array,n=new LabPointProvider;let o=0;for(let b=0;b<e.length;b++){const t=e[b],r=a.get(t);void 0===r?(o++,i.push(n.fromInt(t)),s.push(t),a.set(t,1)):a.set(t,r+1)}const c=new Array;for(let b=0;b<o;b++){const e=s[b],t=a.get(e);void 0!==t&&(c[b]=t)}let u=Math.min(r,o);t.length>0&&(u=Math.min(u,t.length));const l=new Array;for(let b=0;b<t.length;b++)l.push(n.fromInt(t[b]));const f=u-l.length;if(0===t.length&&f>0)for(let b=0;b<f;b++){const e=100*Math.random(),t=201*Math.random()-100,r=201*Math.random()-100;l.push(new Array(e,t,r))}const h=new Array;for(let b=0;b<o;b++)h.push(Math.floor(Math.random()*u));const m=new Array;for(let b=0;b<u;b++){m.push(new Array);for(let e=0;e<u;e++)m[b].push(0)}const p=new Array;for(let b=0;b<u;b++){p.push(new Array);for(let e=0;e<u;e++)p[b].push(new DistanceAndIndex)}const d=new Array;for(let b=0;b<u;b++)d.push(0);for(let b=0;b<MAX_ITERATIONS;b++){for(let i=0;i<u;i++){for(let e=i+1;e<u;e++){const t=n.distance(l[i],l[e]);p[e][i].distance=t,p[e][i].index=i,p[i][e].distance=t,p[i][e].index=e}p[i].sort();for(let e=0;e<u;e++)m[i][e]=p[i][e].index}let e=0;for(let s=0;s<o;s++){const t=i[s],r=h[s],a=l[r],o=n.distance(t,a);let c=o,f=-1;for(let e=0;e<u;e++){if(p[r][e].distance>=4*o)continue;const a=n.distance(t,l[e]);a<c&&(c=a,f=e)}-1!==f&&Math.abs(Math.sqrt(c)-Math.sqrt(o))>MIN_MOVEMENT_DISTANCE&&(e++,h[s]=f)}if(0===e&&0!==b)break;const t=new Array(u).fill(0),r=new Array(u).fill(0),a=new Array(u).fill(0);for(let i=0;i<u;i++)d[i]=0;for(let s=0;s<o;s++){const e=h[s],n=i[s],o=c[s];d[e]+=o,t[e]+=n[0]*o,r[e]+=n[1]*o,a[e]+=n[2]*o}for(let i=0;i<u;i++){const e=d[i];if(0===e){l[i]=[0,0,0];continue}const s=t[i]/e,n=r[i]/e,o=a[i]/e;l[i]=[s,n,o]}}const g=new Map;for(let b=0;b<u;b++){const e=d[b];if(0===e)continue;const t=n.toInt(l[b]);g.has(t)||g.set(t,e)}return g}}class DistanceAndIndex{constructor(){this.distance=-1,this.index=-1}}class QuantizerMap{static quantize(e){var t;const r=new Map;for(let a=0;a<e.length;a++){const i=e[a];alphaFromArgb(i)<255||r.set(i,(null!==(t=r.get(i))&&void 0!==t?t:0)+1)}return r}}const INDEX_BITS=5,SIDE_LENGTH=33,TOTAL_SIZE=35937,directions={RED:"red",GREEN:"green",BLUE:"blue"};class QuantizerWu{constructor(e=[],t=[],r=[],a=[],i=[],s=[]){this.weights=e,this.momentsR=t,this.momentsG=r,this.momentsB=a,this.moments=i,this.cubes=s}quantize(e,t){this.constructHistogram(e),this.computeMoments();const r=this.createBoxes(t);return this.createResult(r.resultCount)}constructHistogram(e){var t;this.weights=Array.from({length:TOTAL_SIZE}).fill(0),this.momentsR=Array.from({length:TOTAL_SIZE}).fill(0),this.momentsG=Array.from({length:TOTAL_SIZE}).fill(0),this.momentsB=Array.from({length:TOTAL_SIZE}).fill(0),this.moments=Array.from({length:TOTAL_SIZE}).fill(0);const r=QuantizerMap.quantize(e);for(const[a,i]of r.entries()){const e=redFromArgb(a),r=greenFromArgb(a),s=blueFromArgb(a),n=8-INDEX_BITS,o=1+(e>>n),c=1+(r>>n),u=1+(s>>n),l=this.getIndex(o,c,u);this.weights[l]=(null!==(t=this.weights[l])&&void 0!==t?t:0)+i,this.momentsR[l]+=i*e,this.momentsG[l]+=i*r,this.momentsB[l]+=i*s,this.moments[l]+=i*(e*e+r*r+s*s)}}computeMoments(){for(let e=1;e<SIDE_LENGTH;e++){const t=Array.from({length:SIDE_LENGTH}).fill(0),r=Array.from({length:SIDE_LENGTH}).fill(0),a=Array.from({length:SIDE_LENGTH}).fill(0),i=Array.from({length:SIDE_LENGTH}).fill(0),s=Array.from({length:SIDE_LENGTH}).fill(0);for(let n=1;n<SIDE_LENGTH;n++){let o=0,c=0,u=0,l=0,f=0;for(let h=1;h<SIDE_LENGTH;h++){const m=this.getIndex(e,n,h);o+=this.weights[m],c+=this.momentsR[m],u+=this.momentsG[m],l+=this.momentsB[m],f+=this.moments[m],t[h]+=o,r[h]+=c,a[h]+=u,i[h]+=l,s[h]+=f;const p=this.getIndex(e-1,n,h);this.weights[m]=this.weights[p]+t[h],this.momentsR[m]=this.momentsR[p]+r[h],this.momentsG[m]=this.momentsG[p]+a[h],this.momentsB[m]=this.momentsB[p]+i[h],this.moments[m]=this.moments[p]+s[h]}}}}createBoxes(e){this.cubes=Array.from({length:e}).fill(0).map((()=>new Box));const t=Array.from({length:e}).fill(0);this.cubes[0].r0=0,this.cubes[0].g0=0,this.cubes[0].b0=0,this.cubes[0].r1=SIDE_LENGTH-1,this.cubes[0].g1=SIDE_LENGTH-1,this.cubes[0].b1=SIDE_LENGTH-1;let r=e,a=0;for(let i=1;i<e;i++){this.cut(this.cubes[a],this.cubes[i])?(t[a]=this.cubes[a].vol>1?this.variance(this.cubes[a]):0,t[i]=this.cubes[i].vol>1?this.variance(this.cubes[i]):0):(t[a]=0,i--),a=0;let e=t[0];for(let r=1;r<=i;r++)t[r]>e&&(e=t[r],a=r);if(e<=0){r=i+1;break}}return new CreateBoxesResult(e,r)}createResult(e){const t=[];for(let r=0;r<e;++r){const e=this.cubes[r],a=this.volume(e,this.weights);if(a>0){const r=255<<24|(255&Math.round(this.volume(e,this.momentsR)/a))<<16|(255&Math.round(this.volume(e,this.momentsG)/a))<<8|255&Math.round(this.volume(e,this.momentsB)/a);t.push(r)}}return t}variance(e){const t=this.volume(e,this.momentsR),r=this.volume(e,this.momentsG),a=this.volume(e,this.momentsB);return this.moments[this.getIndex(e.r1,e.g1,e.b1)]-this.moments[this.getIndex(e.r1,e.g1,e.b0)]-this.moments[this.getIndex(e.r1,e.g0,e.b1)]+this.moments[this.getIndex(e.r1,e.g0,e.b0)]-this.moments[this.getIndex(e.r0,e.g1,e.b1)]+this.moments[this.getIndex(e.r0,e.g1,e.b0)]+this.moments[this.getIndex(e.r0,e.g0,e.b1)]-this.moments[this.getIndex(e.r0,e.g0,e.b0)]-(t*t+r*r+a*a)/this.volume(e,this.weights)}cut(e,t){const r=this.volume(e,this.momentsR),a=this.volume(e,this.momentsG),i=this.volume(e,this.momentsB),s=this.volume(e,this.weights),n=this.maximize(e,directions.RED,e.r0+1,e.r1,r,a,i,s),o=this.maximize(e,directions.GREEN,e.g0+1,e.g1,r,a,i,s),c=this.maximize(e,directions.BLUE,e.b0+1,e.b1,r,a,i,s);let u;const l=n.maximum,f=o.maximum,h=c.maximum;if(l>=f&&l>=h){if(n.cutLocation<0)return!1;u=directions.RED}else u=f>=l&&f>=h?directions.GREEN:directions.BLUE;switch(t.r1=e.r1,t.g1=e.g1,t.b1=e.b1,u){case directions.RED:e.r1=n.cutLocation,t.r0=e.r1,t.g0=e.g0,t.b0=e.b0;break;case directions.GREEN:e.g1=o.cutLocation,t.r0=e.r0,t.g0=e.g1,t.b0=e.b0;break;case directions.BLUE:e.b1=c.cutLocation,t.r0=e.r0,t.g0=e.g0,t.b0=e.b1;break;default:throw new Error("unexpected direction "+u)}return e.vol=(e.r1-e.r0)*(e.g1-e.g0)*(e.b1-e.b0),t.vol=(t.r1-t.r0)*(t.g1-t.g0)*(t.b1-t.b0),!0}maximize(e,t,r,a,i,s,n,o){const c=this.bottom(e,t,this.momentsR),u=this.bottom(e,t,this.momentsG),l=this.bottom(e,t,this.momentsB),f=this.bottom(e,t,this.weights);let h=0,m=-1,p=0,d=0,g=0,b=0;for(let T=r;T<a;T++){if(p=c+this.top(e,t,T,this.momentsR),d=u+this.top(e,t,T,this.momentsG),g=l+this.top(e,t,T,this.momentsB),b=f+this.top(e,t,T,this.weights),0===b)continue;let r=1*(p*p+d*d+g*g),a=1*b,$=r/a;p=i-p,d=s-d,g=n-g,b=o-b,0!==b&&(r=1*(p*p+d*d+g*g),a=1*b,$+=r/a,$>h&&(h=$,m=T))}return new MaximizeResult(m,h)}volume(e,t){return t[this.getIndex(e.r1,e.g1,e.b1)]-t[this.getIndex(e.r1,e.g1,e.b0)]-t[this.getIndex(e.r1,e.g0,e.b1)]+t[this.getIndex(e.r1,e.g0,e.b0)]-t[this.getIndex(e.r0,e.g1,e.b1)]+t[this.getIndex(e.r0,e.g1,e.b0)]+t[this.getIndex(e.r0,e.g0,e.b1)]-t[this.getIndex(e.r0,e.g0,e.b0)]}bottom(e,t,r){switch(t){case directions.RED:return-r[this.getIndex(e.r0,e.g1,e.b1)]+r[this.getIndex(e.r0,e.g1,e.b0)]+r[this.getIndex(e.r0,e.g0,e.b1)]-r[this.getIndex(e.r0,e.g0,e.b0)];case directions.GREEN:return-r[this.getIndex(e.r1,e.g0,e.b1)]+r[this.getIndex(e.r1,e.g0,e.b0)]+r[this.getIndex(e.r0,e.g0,e.b1)]-r[this.getIndex(e.r0,e.g0,e.b0)];case directions.BLUE:return-r[this.getIndex(e.r1,e.g1,e.b0)]+r[this.getIndex(e.r1,e.g0,e.b0)]+r[this.getIndex(e.r0,e.g1,e.b0)]-r[this.getIndex(e.r0,e.g0,e.b0)];default:throw new Error("unexpected direction $direction")}}top(e,t,r,a){switch(t){case directions.RED:return a[this.getIndex(r,e.g1,e.b1)]-a[this.getIndex(r,e.g1,e.b0)]-a[this.getIndex(r,e.g0,e.b1)]+a[this.getIndex(r,e.g0,e.b0)];case directions.GREEN:return a[this.getIndex(e.r1,r,e.b1)]-a[this.getIndex(e.r1,r,e.b0)]-a[this.getIndex(e.r0,r,e.b1)]+a[this.getIndex(e.r0,r,e.b0)];case directions.BLUE:return a[this.getIndex(e.r1,e.g1,r)]-a[this.getIndex(e.r1,e.g0,r)]-a[this.getIndex(e.r0,e.g1,r)]+a[this.getIndex(e.r0,e.g0,r)];default:throw new Error("unexpected direction $direction")}}getIndex(e,t,r){return(e<<2*INDEX_BITS)+(e<<INDEX_BITS+1)+e+(t<<INDEX_BITS)+t+r}}class Box{constructor(e=0,t=0,r=0,a=0,i=0,s=0,n=0){this.r0=e,this.r1=t,this.g0=r,this.g1=a,this.b0=i,this.b1=s,this.vol=n}}class CreateBoxesResult{constructor(e,t){this.requestedCount=e,this.resultCount=t}}class MaximizeResult{constructor(e,t){this.cutLocation=e,this.maximum=t}}class QuantizerCelebi{static quantize(e,t){const r=(new QuantizerWu).quantize(e,t);return QuantizerWsmeans.quantize(e,r,t)}}class Score{constructor(){}static score(e){let t=0;for(const f of e.values())t+=f;const r=new Map,a=new Map,i=new Array(360).fill(0);for(const[f,h]of e.entries()){const e=h/t;r.set(f,e);const s=Cam16.fromInt(f);a.set(f,s),i[Math.round(s.hue)]+=e}const s=new Map;for(const[f,h]of a.entries()){const e=Math.round(h.hue);let t=0;for(let r=e-15;r<e+15;r++)t+=i[sanitizeDegreesInt(r)];s.set(f,t)}const n=new Map;for(const[f,h]of a.entries()){const e=100*s.get(f)*Score.WEIGHT_PROPORTION,t=h.chroma<Score.TARGET_CHROMA?Score.WEIGHT_CHROMA_BELOW:Score.WEIGHT_CHROMA_ABOVE,r=e+(h.chroma-Score.TARGET_CHROMA)*t;n.set(f,r)}const o=Score.filter(s,a),c=new Map;for(const f of o){let e=!1;const t=a.get(f).hue;for(const[r]of c)if(differenceDegrees(t,a.get(r).hue)<15){e=!0;break}e||c.set(f,n.get(f))}const u=Array.from(c.entries());u.sort(((e,t)=>t[1]-e[1]));const l=u.map((e=>e[0]));return 0===l.length&&l.push(4282549748),l}static filter(e,t){const r=new Array;for(const[a,i]of t.entries()){const t=e.get(a);i.chroma>=Score.CUTOFF_CHROMA&&lstarFromArgb(a)>=Score.CUTOFF_TONE&&t>=Score.CUTOFF_EXCITED_PROPORTION&&r.push(a)}return r}}Score.TARGET_CHROMA=48,Score.WEIGHT_PROPORTION=.7,Score.WEIGHT_CHROMA_ABOVE=.3,Score.WEIGHT_CHROMA_BELOW=.1,Score.CUTOFF_CHROMA=15,Score.CUTOFF_TONE=10,Score.CUTOFF_EXCITED_PROPORTION=.01;const getImageData=async e=>{const t=await createImageBitmap(e),{width:r,height:a}=t,i=new OffscreenCanvas(r,a).getContext("2d");if(!i)throw new Error;return i.drawImage(t,0,0),i.getImageData(0,0,r,a).data},extractColorFromImage=async e=>{if(void 0!==globalThis.OffscreenCanvas)try{const t=await getImageData(e),r=[];for(let e=0;e<t.length;e+=4){const a=t[e],i=t[e+1],s=t[e+2];if(t[e+3]>=255){const e=argbFromRgb(a,i,s);r.push(e)}}const a=QuantizerCelebi.quantize(r,128);return Score.score(a)[0]}catch(t){console.error(t)}};globalThis.Buffer=buffer.Buffer;const FILE_SIZE_LIMIT_500MB=5e8,parseTrack=async e=>{var t,r;try{const a="file"===e.type?e.file:await e.file.getFile();if(a.size>FILE_SIZE_LIMIT_500MB)return null;const i=await new Response(a).arrayBuffer(),s=new Uint8Array(i),n=await lib$3.parseBuffer(s,{mimeType:a.type,path:a.name,size:a.size},{duration:!0}),{common:o}=n;let c;if(null==(t=o.picture)?void 0:t.length){const[e]=o.picture,t=new Uint8ClampedArray(e.data);c=new Blob([t],{type:e.type})}return{name:o.title||a.name,album:o.album,artists:o.artists||[],genre:o.genre||[],trackNo:o.track.no||0,trackOf:o.track.of||0,year:null==(r=o.year)?void 0:r.toString(),image:c,duration:n.format.duration||0,fileWrapper:e,primaryColor:c&&await extractColorFromImage(c)}}catch(a){return console.error(a),null}},sendMsg=e=>{self.postMessage(e)},parseAllTracks=async e=>{let t=0;const r=[];for await(const a of e){const e=await parseTrack(a);e&&(t+=1,sendMsg({finished:!1,parsedCount:t}),r.push(e))}sendMsg({finished:!0,parsedCount:t,tracks:r}),self.close()};self.addEventListener("message",(e=>{parseAllTracks(e.data)}))})();
",Z="undefined"!=typeof window&&window.Blob&&new Blob([atob(l)],{type:"text/javascript;charset=utf-8"});function d(){const d=Z&&(window.URL||window.webkitURL).createObjectURL(Z);try{return d?new Worker(d,{}):new Worker("data:application/javascript;base64,"+l,{type:"module"})}finally{d&&(window.URL||window.webkitURL).revokeObjectURL(d)}}export{d as default};
